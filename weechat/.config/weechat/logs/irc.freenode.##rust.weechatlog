2019-09-13 09:06:12	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-09-13 09:06:12	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-09-13 09:06:12	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-09-13 09:06:12	--	Channel ##rust: 512 nicks (2 ops, 0 voices, 510 normals)
2019-09-13 09:06:28	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-09-13 09:09:11	-->	nerosnm (~alrakis@cpc1-bath8-2-0-cust148.18-1.cable.virginm.net) has joined ##rust
2019-09-13 09:12:56	<--	SisterFister (~SisterFis@catv-178-48-164-108.catv.broadband.hu) has quit (Remote host closed the connection)
2019-09-13 09:16:32	-->	airwind (~belovent@cr-01.anx09.lju.si.anexia-it.com) has joined ##rust
2019-09-13 09:22:09	<--	wmealing (~wmealing@124.149.193.135) has quit (Quit: wmealing)
2019-09-13 09:24:01	-->	tostr (~tostr@unaffiliated/tostr) has joined ##rust
2019-09-13 09:25:52	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-09-13 09:29:32	-->	xvilka (~xvilka@unaffiliated/xvilka) has joined ##rust
2019-09-13 09:30:21	xvilka	if someone wants to join translating all of Tectonic (modern fork of TeX/LaTeX engine) from C to Rust - see https://github.com/tectonic-typesetting/tectonic/issues/459
2019-09-13 09:52:50	-->	ravenousmoose (~ravenousm@ptr-cud5aqfz6yldre36cip.18120a2.ip6.access.telenet.be) has joined ##rust
2019-09-13 09:54:54	<--	pknull (~pooky@184.103.28.136) has quit (Quit: Departing.)
2019-09-13 09:55:31	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 09:57:04	<--	ravenousmoose (~ravenousm@ptr-cud5aqfz6yldre36cip.18120a2.ip6.access.telenet.be) has quit (Ping timeout: 246 seconds)
2019-09-13 09:59:31	-->	baali (~baali@117.214.177.6) has joined ##rust
2019-09-13 10:00:40	<--	nerosnm (~alrakis@cpc1-bath8-2-0-cust148.18-1.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2019-09-13 10:33:30	-->	triptec (~triptec@h88-129-43-171.cust.a3fiber.se) has joined ##rust
2019-09-13 10:40:54	-->	royal_screwup21 (5661e695@gateway/web/cgi-irc/kiwiirc.com/ip.86.97.230.149) has joined ##rust
2019-09-13 10:44:33	<--	panicbit (~panicbit@p57ADE381.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2019-09-13 10:44:56	<--	OmniMancer (~Paul@101.100.137.239) has quit (Quit: Leaving.)
2019-09-13 10:45:40	-->	panicbit (~panicbit@p57ADE9A9.dip0.t-ipconnect.de) has joined ##rust
2019-09-13 10:48:29	-->	frostschutz (~frostschu@55d4bb3e.access.ecotel.net) has joined ##rust
2019-09-13 10:50:05	-->	vn971 (~quassel@2a02:7aa0:1619::bac5:9483) has joined ##rust
2019-09-13 10:52:41	vn971	Hi. Suppose I want to call a function that returns Result. If it will return Err, I want to add some additional information to the stack trace, but still error out (either panic or return an enriched Err up to the caller).
2019-09-13 10:52:44	vn971	How should I do that?
2019-09-13 10:53:21	vn971	I know I can, for example, use .unwrap_or_else(|err| panic!("... reason: {}", err));
2019-09-13 10:53:35	vn971	but that kinda transforms the err to a string. Is that OK?
2019-09-13 10:53:45	vn971	(I feel that it's not.)
2019-09-13 10:54:50	j`ey	well that panics, so you dont really pass a string anywhere
2019-09-13 10:54:52	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Ping timeout: 245 seconds)
2019-09-13 10:55:08	yrp	are you thinkign somethings going to catch the panic?
2019-09-13 10:55:19	vn971	j`ey: ok, fair. What if I'd want to return a new Result though?
2019-09-13 10:55:31	vn971	yrp: well the panic hook maybe?
2019-09-13 10:56:07	j`ey	vn971: you can make your own struct MyError that wraps the error and includes extra info?
2019-09-13 10:56:52	vn971	j`ey: how do I propermy lake it "include extra info", how does it work? Is it implementing Display?
2019-09-13 10:57:06	-->	samrg472_ (~samrg472@gateway/tor-sasl/samrg472) has joined ##rust
2019-09-13 10:57:37	vn971	on the JVM, you have Exception-s, which can have additional info, but also optionally point to another Exception as their "reason".
2019-09-13 10:58:28	vn971	* sorry, "properly make it"
2019-09-13 10:58:58	j`ey	vn971: yes Display, there's also source() which can return another error
2019-09-13 10:59:09	j`ey	https://doc.rust-lang.org/std/error/trait.Error.html#method.source
2019-09-13 10:59:09	-->	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined ##rust
2019-09-13 11:00:39	<--	samrg472 (~samrg472@gateway/tor-sasl/samrg472) has quit (Ping timeout: 260 seconds)
2019-09-13 11:02:36	<--	bitwinery (~bruno@c-73-37-18-139.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2019-09-13 11:04:29	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-09-13 11:09:06	-->	sysKin (~syskin@61-245-149-216.3df595.adl.nbn.aussiebb.net) has joined ##rust
2019-09-13 11:12:55	-->	abhinits2046 (uid373731@gateway/web/irccloud.com/x-iaxmgsbinpjodykk) has joined ##rust
2019-09-13 11:13:23	<--	abhinits2046 (uid373731@gateway/web/irccloud.com/x-iaxmgsbinpjodykk) has left ##rust
2019-09-13 11:16:34	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-09-13 11:17:58	<--	frostschutz (~frostschu@55d4bb3e.access.ecotel.net) has quit (Remote host closed the connection)
2019-09-13 11:18:53	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-09-13 11:20:29	-->	ravenousmoose (~ravenousm@ptr-cud5aqfz6yldre36cip.18120a2.ip6.access.telenet.be) has joined ##rust
2019-09-13 11:24:55	<--	ravenousmoose (~ravenousm@ptr-cud5aqfz6yldre36cip.18120a2.ip6.access.telenet.be) has quit (Ping timeout: 246 seconds)
2019-09-13 11:24:56	-->	ellcs (~mantel@193.174.12.196) has joined ##rust
2019-09-13 11:27:19	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Remote host closed the connection)
2019-09-13 11:27:42	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-09-13 11:30:21	<--	happycoder (~happycode@14.139.185.114) has quit (Ping timeout: 246 seconds)
2019-09-13 11:36:25	-->	happycoder (~happycode@14.139.185.114) has joined ##rust
2019-09-13 11:45:00	-->	Tichodroma (~lutz@fsf/member/Tichodroma) has joined ##rust
2019-09-13 11:51:21	<--	PeterRabbit (~peter@2600:6c64:6180:86:7547:7d6e:8024:e963) has quit (Read error: Connection reset by peer)
2019-09-13 11:51:42	-->	PeterRabbit (~peter@2600:6c64:6180:86:7547:7d6e:8024:e963) has joined ##rust
2019-09-13 11:56:52	-->	Ichorio (~Ichorio@2001:16b8:57ca:9600:8541:4cfa:2933:d307) has joined ##rust
2019-09-13 11:57:26	-->	murla (~murla@146.120.13.152) has joined ##rust
2019-09-13 11:59:49	voker57	vn971: consider using this suggested scheme https://docs.rs/failure/0.1.5/failure/
2019-09-13 12:00:51	<--	BlackDex (~blackdex@ori.vyus.nl) has quit (Quit: ByeBye)
2019-09-13 12:09:36	Faux	"error: proc-macro derive panicked" ruh roh!
2019-09-13 12:11:48	Kinnison	ruhroh indeed
2019-09-13 12:13:01	<--	bpsecret (~bpsecret@unaffiliated/bpsecret) has quit (Ping timeout: 276 seconds)
2019-09-13 12:18:29	mstruebing	Is it recommended to `use` everything you need or is it more recommended to use the full qualifier i.e. `std::env::func()` instead of `use std::env` and `env::func()`?
2019-09-13 12:19:00	-->	bpsecret (~bpsecret@unaffiliated/bpsecret) has joined ##rust
2019-09-13 12:19:05	Kinnison	If I'm using it once in the entire file, I will use the full path
2019-09-13 12:19:15	Kinnison	If I'm using a bunch of a module, I'll use the module and do the latter
2019-09-13 12:19:20	Faux	The convention appears to be to `use` only if you are .. using the thing multiple times. This sucked in rust2015, so older code uses things everywhere in horrible ways.
2019-09-13 12:19:36	Kinnison	if I only want one thing out of the module and am using it a lot, I use just the bit I want
2019-09-13 12:20:35	<--	Tichodroma (~lutz@fsf/member/Tichodroma) has quit (Ping timeout: 246 seconds)
2019-09-13 12:26:05	ilmari	if it's a really long path, I'll `use` it even if I'm only using it once, especially in a function signature that would otherwise fit on one line
2019-09-13 12:26:22	ilmari	current case in point: `aws_lambda_events::event::sns::SnsEvent`
2019-09-13 12:26:34	-->	jammm (~jamm@unaffiliated/jamm) has joined ##rust
2019-09-13 12:27:07	<--	happycoder (~happycode@14.139.185.114) has quit (Ping timeout: 245 seconds)
2019-09-13 12:29:03	-->	happycoder (~happycode@14.139.185.114) has joined ##rust
2019-09-13 12:30:02	<--	jamm (~jamm@unaffiliated/jamm) has quit (Ping timeout: 240 seconds)
2019-09-13 12:30:51	M-ou-se	depending on how generic the name is, i sometimes also 'use' things inside a function, instead of at file scope
2019-09-13 12:32:53	-->	Tichodroma (~lutz@fsf/member/Tichodroma) has joined ##rust
2019-09-13 12:35:45	-->	nepugia (~nephele@200116b864a863004b33f1ed1381bf81.dip.versatel-1u1.de) has joined ##rust
2019-09-13 12:36:16	-->	BlackDex (~blackdex@ori.vyus.nl) has joined ##rust
2019-09-13 12:38:05	nepugia	Hello, I am having problems with the prebuild nightly-x86_64-unknown-linux-musl on alpine linux (which is musl too), which is that i cannot compile some programms dou to this toolchain not supporting dynamic linking, what other options do i have?
2019-09-13 12:38:38	nepugia	I did not find any concrete workarounds on the web (only partial fixes which i don't really know how i would use)
2019-09-13 12:39:05	-->	jamm (~jamm@unaffiliated/jamm) has joined ##rust
2019-09-13 12:39:10	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-09-13 12:41:37	<--	jammm (~jamm@unaffiliated/jamm) has quit (Ping timeout: 240 seconds)
2019-09-13 12:44:58	oherrala	nepugia: the workaround I found is not to use musl binaries to compile rust
2019-09-13 12:45:42	nepugia	I have not compiled it myself, and i don't have glibc on my system either, setting up a chroot seams like a pretty expensive solution
2019-09-13 12:47:35	oherrala	nepugia: I mean you can't really build anything with musl version of Rust. procedural macros don't work so many crates are out.
2019-09-13 12:48:15	nepugia	hmm, i hope that will be fixed soon(tm) then, is there a prebuild statically linked glibc rust toolchain maybe?
2019-09-13 12:49:32	oherrala	nepugia: AFAIK you can't have statically linked glibc
2019-09-13 12:49:37	oherrala	that's why musl is used :)
2019-09-13 12:50:17	nepugia	well, coinstalling glibc next to musl is something i would rather avoid :)
2019-09-13 12:50:22	nepugia	i suppose a chroot it is then
2019-09-13 12:51:32	<--	tostr (~tostr@unaffiliated/tostr) has quit (Ping timeout: 245 seconds)
2019-09-13 12:52:50	oherrala	I would love to have someone tell me I'm wrong because I'd like to convert our build infrastructure to Alpine Linux
2019-09-13 12:53:37	Faux	Proc macros work, don't they? I'm pretty sure I'm using that somewhere.
2019-09-13 12:54:13	oherrala	Faux: not when using musl linked rust(c)
2019-09-13 12:56:17	<--	happycoder (~happycode@14.139.185.114) has quit (Ping timeout: 245 seconds)
2019-09-13 12:57:39	nepugia	Well, not everything doesn't work, just wanted to get started with piston and hit my head severall times on crates using the features thingy, thus i used nightly, but with the stable i was able to get for instance alacritty on my system fine
2019-09-13 12:57:55	nepugia	though i dont know whether the stable version has any alpine linux specific patches i am unaware off
2019-09-13 12:58:22	-->	user9 (984d0e22@leoseb.u-ga.fr) has joined ##rust
2019-09-13 13:01:40	oherrala	This is the problem I'm facing: cannot produce proc-macro for `failure_derive v0.1.5` as the target `x86_64-unknown-linux-musl` does not support these crate types
2019-09-13 13:01:59	-->	OmniMancer (~Paul@101.100.137.239) has joined ##rust
2019-09-13 13:04:00	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-09-13 13:04:45	-->	ytain (~ghfg@2607:f2c0:92f1:f300:ed6b:80ab:697e:76e0) has joined ##rust
2019-09-13 13:05:27	j`ey	and that's because of dylibs, right?
2019-09-13 13:06:36	Faux	Direct use of failure works, for the target (building from normal amd64): https://paste.debian.net/1100534/
2019-09-13 13:06:52	Faux	..which is what I'm doing elsewhere and seemingly not having any problems.
2019-09-13 13:07:02	oherrala	j`ey: I think so
2019-09-13 13:07:19	oherrala	Faux: that's different thing
2019-09-13 13:07:33	vn971	j`ey: voker57: thanks! Will look into it a bit later (now distracted with other work).
2019-09-13 13:07:34	j`ey	Faux: your host is probably glibc?
2019-09-13 13:07:46	Faux	Yeah.
2019-09-13 13:07:58	oherrala	Faux; /opt/cargo/bin/rustc: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, BuildID[sha1]=2208478b28b34d9fe2750b7939157da417d8918b, with debug_info, not stripped
2019-09-13 13:08:09	j`ey	Faux: so the proc_macro is compiled for glibc
2019-09-13 13:08:18	j`ey	when the host is musl, it doesnt work
2019-09-13 13:08:31	Faux	Ew. :)
2019-09-13 13:09:50	nepugia	guess i will get void linux in a chroot
2019-09-13 13:14:02	oherrala	nepugia: why not docker?
2019-09-13 13:15:05	nepugia	docker is not a linux?
2019-09-13 13:17:59	oherrala	nepugia: https://en.wikipedia.org/wiki/Docker_%28software%29
2019-09-13 13:18:10	nepugia	I know what docker is, docker is not a linux
2019-09-13 13:18:51	oherrala	what?
2019-09-13 13:19:09	nepugia	It is a tool to spin up linuxes using linux namespaces, but it isnt a linux in and of itself
2019-09-13 13:19:10	avu	nepugia: oherrala meant 'docker instead of chroot', not 'docker instead of void linux'
2019-09-13 13:19:14	nepugia	the same way Xen isnt linux
2019-09-13 13:19:22	nepugia	avu, oh
2019-09-13 13:19:27	oherrala	:D
2019-09-13 13:19:30	nepugia	well, in that case, docker is overkill
2019-09-13 13:19:32	nepugia	dont need it
2019-09-13 13:20:01	oherrala	nepugia: dunno about overkill, but the easy way: docker run rust.. :)
2019-09-13 13:20:41	nepugia	i just need a different namespace to run rust in, having to deal with docker is more complexity than i need :)
2019-09-13 13:20:54	vn971	oherrala: docker also makes your system super-insecure if you allow your user to access the docker daemon.
2019-09-13 13:23:03	oherrala	vn971: can you explain?
2019-09-13 13:25:59	vn971	oherrala: if your normal user has access, then it means that any programs running on your behalf of your user have access to the daemon. Having access to the daemon is the same as having root on the host system. You can just run docker with mounted /etc/passwd and read passwords, or mount hard disks inside, etc etc.
2019-09-13 13:26:17	vn971	* if your normal user has access to docker,..
2019-09-13 13:27:02	avu	if you can read passwords from /etc/passwd, you managed to get docker running on a UNIX from the 70s or 80s :p
2019-09-13 13:27:38	-->	tostr (~tostr@unaffiliated/tostr) has joined ##rust
2019-09-13 13:28:19	<--	Stanley00 (~Stanley00@unaffiliated/stanley00) has quit (Quit: Leaving)
2019-09-13 13:28:44	nepugia	funnily enough alpine linux does have passwords in /etc/passwd
2019-09-13 13:28:48	nepugia	for some reason... :)
2019-09-13 13:29:06	nepugia	or well, for one of my users it seams
2019-09-13 13:29:25	nepugia	(well the hash i mean..)
2019-09-13 13:29:26	-->	happycoder (~happycode@14.139.185.114) has joined ##rust
2019-09-13 13:29:36	oherrala	vn971: ok, so how is chroot more secure?
2019-09-13 13:29:51	nepugia	vn971, mount hard disks heh... i wonder why linux doesnt have something like freebsd securelevels
2019-09-13 13:31:35	vn971	avu: oh right, it's not that simple. I forgot the exact details then, but there's a ton of ways to get root on host if you have access to docker daemon. Docker itself kinda says it, unwillingly, in the part that describes giving access to the daemon.
2019-09-13 13:32:43	vn971	it was a bit more honest on that and there was a whole section describing the impact and why it can't be made secure, but then they decided to shrink/remove this part and there's only some small notice. Last time I checked at least. But the notice is still there.
2019-09-13 13:33:49	vn971	oherrala: chroot still requires you to use `root`. It's just being made explicit. You know that anybody who runs chroots can also damage your system, so it should only be you.
2019-09-13 13:34:14	vn971	(with docker, some people don't understand that having access to docker daemon == having root.)
2019-09-13 13:35:51	vn971	nepugia: linux has namespaces still, which can be unshared. E.g. bubblewrap, or just `unshare` if you don't want to touch mount points.
2019-09-13 13:35:53	oherrala	vn971: So Docker is super insecure because some people don't understand it?
2019-09-13 13:36:25	oherrala	vn971: probably the same people who use sudo?
2019-09-13 13:36:29	vn971	oherrala: whether docker is secure or not I don't know in detail, but _having access to docker daemon_ is the same as having root on your system.
2019-09-13 13:36:56	nepugia	vn971, i honestly dont know how namespaces would protect you against someone mounting disk devices
2019-09-13 13:37:06	lupine	best not to install docker, really
2019-09-13 13:37:17	vn971	oherrala: comparing to sudo, docker is then a password-less sudo (in a sense that it can easily be abused to raise priveleges, in an automated way).
2019-09-13 13:37:20	nepugia	best to install docker when it fits your usecase
2019-09-13 13:37:27	lupine	its only purpose is to make capitalists happy
2019-09-13 13:37:34	Faux	You can run container-like things, with safe mounting, inside user namespaces, if you're up for that kind of thing.
2019-09-13 13:38:34	Faux	https://paste.debian.net/1100536/ this doesn't need root, and is enabled by default in e.g. ubuntu's kernels.
2019-09-13 13:39:09	nepugia	namespaces are nice indeed
2019-09-13 13:39:58	vorner	Unprivileged dockers don't have the physical devices visible in them, so you can't mount them. Also, you can run the docker daemon with user privileges.
2019-09-13 13:40:07	<--	jamm (~jamm@unaffiliated/jamm) has quit (Ping timeout: 276 seconds)
2019-09-13 13:40:33	vorner	But it has some (severe) limitations, so the defaults are to run it as a very privileged process.
2019-09-13 13:42:11	-->	SisterFister (~SisterFis@catv-178-48-164-108.catv.broadband.hu) has joined ##rust
2019-09-13 13:42:15	nepugia	ugh, getting a no such file or directory when running cargo in my chroot, would be super nice if it actually said /what/ it tries to run
2019-09-13 13:42:26	nepugia	vorner, mknode?
2019-09-13 13:42:29	j`ey	does -v help?
2019-09-13 13:42:37	nepugia	s/e//
2019-09-13 13:42:41	<--	goncalor (~goncalor@unaffiliated/goncalor) has quit (Read error: Connection reset by peer)
2019-09-13 13:42:50	nepugia	j`ey, it does not :/
2019-09-13 13:44:37	<--	ki9a (~ki9a@about/csharp/regular/ki9a) has quit (Ping timeout: 245 seconds)
2019-09-13 13:44:40	-->	goncalor (~goncalor@unaffiliated/goncalor) has joined ##rust
2019-09-13 13:47:21	nepugia	huh, the thing it cant execute is... cargo :)
2019-09-13 13:47:34	nepugia	in the .rustup space somewhere... why that doesnt work i dont know
2019-09-13 13:47:53	<--	SisterFister (~SisterFis@catv-178-48-164-108.catv.broadband.hu) has quit (Remote host closed the connection)
2019-09-13 13:47:56	<--	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has quit (Ping timeout: 245 seconds)
2019-09-13 13:48:08	nepugia	ldd on that looks fine :/
2019-09-13 13:49:24	<--	pknull (~pooky@184.103.28.136) has quit (Quit: Departing.)
2019-09-13 13:49:42	-->	happycoder_ (~happycode@14.139.185.114) has joined ##rust
2019-09-13 13:49:53	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 13:50:44	nepugia	hmm, i have /dev/shm and /proc and /sys mounted... did i miss something else linux wants normally?
2019-09-13 13:51:20	vn971	vorner: but if you have access to the docker daemon, what stops you from starting a priveleged container?
2019-09-13 13:52:47	vn971	nepugia: my advise: if you just want to isolate running of e.g. `rust`, take a look at bubblewrap. It's a tool that gives you full control over what's happening, and it's super-easy to get started with.
2019-09-13 13:53:07	nepugia	full control? how would that work?
2019-09-13 13:53:37	<--	pknull (~pooky@184.103.28.136) has quit (Client Quit)
2019-09-13 13:53:49	nepugia	hmm, i dont need a sandbox really
2019-09-13 13:53:52	vn971	nepugia: e.g. the simplest example:  `bwrap --unshare-all --ro-bind / / --tmpfs ~ bash`.  This will unshare all namespaces, bound `/` as read-only, hide your `~` completely and put you in a bash shell inside.
2019-09-13 13:53:59	vorner	vn971, If the docker daemon already starts with user privileges, it is unable to start privileged containers.
2019-09-13 13:54:16	-->	jamm (~jamm@unaffiliated/jamm) has joined ##rust
2019-09-13 13:54:20	<--	happycoder (~happycode@14.139.185.114) has quit (Ping timeout: 268 seconds)
2019-09-13 13:54:23	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 13:54:35	nepugia	vn971, what? how from that command is it implied that you want to hide ~?
2019-09-13 13:54:44	vorner	https://docs.docker.com/engine/security/userns-remap/
2019-09-13 13:54:50	vn971	vorner: so you are saying you have experience in running docker daemon from a normal user, do I hear you correctly?
2019-09-13 13:55:07	nepugia	oh, you mount a tmpfs over it
2019-09-13 13:55:09	vn971	again, *docker* *daemon* -- as user.
2019-09-13 13:55:12	nepugia	but what if i just unmount it?
2019-09-13 13:55:39	vn971	nepugia: inside the jail, there are no suid programs, no way to invoke root, no `sudo` that would work.
2019-09-13 13:56:06	nepugia	how so? namespaces have root processes too...
2019-09-13 13:56:18	nepugia	just that root means somethign slightly different
2019-09-13 13:56:43	vn971	nepugia: I mean, if you run bubblewrap from non-root, then you will remain non-root.
2019-09-13 13:56:59	vn971	vorner: in the last link you're clearly confusing docker daemon with programs that are running inside docker.
2019-09-13 13:57:01	vorner	vn971, I think it starts with root itself. But it is not willing to start privileged containers and remaps all users (even 0/root) in the container onto UIDs that are non-root.
2019-09-13 13:57:13	vn971	vorner: blease educate yourself on the difference, TBH...
2019-09-13 13:58:02	nepugia	the programm seams to be setuid(0) so non-root isnt right i suppose
2019-09-13 13:58:56	nepugia	welp, the entire toolchain doesnt seam to want to work in my void linux chroot
2019-09-13 13:59:12	vn971	nepugia: it provides a limited subset of the so called user namespaces. It's setuid, it configures mount points, does unshares, and then strips off root rights and runs your actual thing without root again.
2019-09-13 14:00:07	nepugia	i dont see why i would need that for my usecase
2019-09-13 14:00:14	vn971	vorner: > But it is not willing to start privileged containers  -- I think this is an incorrect statement. The whole link is about which restricted containers can you run inside docker, not how you start `dockerd`.
2019-09-13 14:00:23	nepugia	the only thing i want to do is confuse processes as to where they shall look for glibc, which works fine with chroot
2019-09-13 14:00:58	vorner	vn971, Sorry, it's been a while since I looked into that thing. I need that crap (docker) in work, so I did do the research years ago and found the least evil way to run it on my system.
2019-09-13 14:01:05	vn971	nepugia: well you could do `bwrap --bind /path/to/chroot / bash`
2019-09-13 14:01:18	nepugia	i could then also just use chroot
2019-09-13 14:02:08	vn971	vorner: yeah, it's actually a pain for many developers.. You kinda need to use docker and that's it. That's final. :/
2019-09-13 14:02:08	vn971	What I personally did is then run `qemu` with a dockerd inside, and expose the dockerd port to the host system.
2019-09-13 14:02:31	<--	raeken (~quassel@gate.reality-bytes.com) has quit (Remote host closed the connection)
2019-09-13 14:02:52	nepugia	isnt the entire point of docker to use linux namespaces? running it in a vm kinda defeats the point of lightweight containers
2019-09-13 14:03:29	<--	samrg472_ (~samrg472@gateway/tor-sasl/samrg472) has quit (Remote host closed the connection)
2019-09-13 14:03:30	vn971	vorner: that requires a lot of work though. Installing another OS inside qemu, configuring docker inside the OS, expose the port through qemu, and finally set local environment variable DOCKER_HOST='tcp://127.0.0.1:2375'
2019-09-13 14:03:40	-->	samrg472 (~samrg472@gateway/tor-sasl/samrg472) has joined ##rust
2019-09-13 14:04:10	-->	djapo (~archie@unaffiliated/djapo) has joined ##rust
2019-09-13 14:04:18	vn971	and if you need to access the containers created inside qemu, you need to pass all ports from inside qemu to host as well..
2019-09-13 14:04:20	delYsid	Faux: what does "application/xml".parse() do in your sonos.rs PR?  I sort of fail to understand why this string would need "parsing", and what the call actually does.
2019-09-13 14:04:23	vorner	And then it runs much slower and such… which is a PITA if develop for „bigger embedded“ (routers and such) and sometime needs to compile the whole damn system, or bigger C++ project.
2019-09-13 14:04:47	<--	airwind (~belovent@cr-01.anx09.lju.si.anexia-it.com) has quit (Quit: airwind)
2019-09-13 14:05:47	vn971	vorner: yes, of course. Then you lose all the speed that you could get from running docker natively, as if it'd be the case if dockerd could be made really secure. Basically you start to be like a MacOS or Windows user in that regard.
2019-09-13 14:06:27	nepugia	execve("./rustc", ["./rustc"], 0x7ffbffffbd10 /* 12 vars */) = -1 ENOENT (No such file or directory)
2019-09-13 14:06:40	nepugia	ugh, this is too annoying
2019-09-13 14:06:58	nepugia	maybe ill just wait till the toolchain is fixed to properly support musl...
2019-09-13 14:07:02	vn971	it's really a pity that dockerd has no option like `dockerd --restrict-priveleged`, which would forbid unrestricted mode, fordib mounting stuff from HOST, etc. Only run some public bullshit, allow copying if the invoked user itself has access to the files, etc.
2019-09-13 14:07:06	-->	raeken (~quassel@gate.reality-bytes.com) has joined ##rust
2019-09-13 14:07:57	vn971	nepugia: musl works just fine for a lot of people (including me). How do you run it?
2019-09-13 14:08:08	vorner	Anyway, I'm pretty sure the unprivileged docker container is unable to do mknod or so and root inside (UID=0) is not really privileged with that setup. It's probably not 100% secure, but stuff like mounting things in use the privileges of the outside user, so if you want to mount something in, you actually have to make it something like word-readable.
2019-09-13 14:08:30	nepugia	vn971, i just run alpine linux
2019-09-13 14:09:15	nepugia	there the musl rust toolchain does not support dynamic linking which basically breaks all compiles i am interested in
2019-09-13 14:09:26	nepugia	(no way to tell it to link those things statically either)
2019-09-13 14:10:18	avu	vn971: you're absolutely right, I was just nitpicking, not disagreeing with you in general, sorry
2019-09-13 14:10:42	vn971	vorner: luckily docker is still honest about the security properties, so read this: https://docs.docker.com/engine/reference/commandline/dockerd/
2019-09-13 14:10:42	vn971	> Warning: Changing the default docker daemon binding to a TCP port or Unix docker user group will increase your security risks by allowing non-root users to gain root access on the host. Make sure you control access to docker. If you are binding to a TCP port, anyone with access to that port has full Docker access; so it is not advisable on an open network.
2019-09-13 14:11:48	vn971	* relatively honest, as this crucial thing is only written somewhere in the middle, so many people do not know it.
2019-09-13 14:13:21	nepugia	well, i give up on this... gues i wont be using rust then for now :/
2019-09-13 14:13:52	vorner	Yes, but that note assumes that you also run without the user namespace mapping option. Then you can start a docker with `--privileged` and have a root. If you start docker with the user-ns and try that, you get „Error response from daemon: privileged mode is incompatible with user namespaces.“ and it won't run.
2019-09-13 14:14:10	vorner	>  Potentially the most important security improvement is that, by default, container processes running as the root user will have expected administrative privilege (with some restrictions) inside the container but will effectively be mapped to an unprivileged uid on the host.
2019-09-13 14:15:42	<--	djapo (~archie@unaffiliated/djapo) has quit (Ping timeout: 245 seconds)
2019-09-13 14:16:35	Faux	delYsid: A header isn't necessarily a valid string, and they have chosen to call the conversion from a string into a HeaderThing a "parse".
2019-09-13 14:16:46	<--	baali (~baali@117.214.177.6) has quit (Ping timeout: 246 seconds)
2019-09-13 14:21:42	-->	djapo (~archie@unaffiliated/djapo) has joined ##rust
2019-09-13 14:24:13	-->	Nahual (~Nahual@unaffiliated/nahual) has joined ##rust
2019-09-13 14:32:34	<--	happycoder_ (~happycode@14.139.185.114) has quit (Ping timeout: 268 seconds)
2019-09-13 14:33:14	vn971	vorner: you're again saying things about "--priveleged" _container_. Dockerd cannot be priveleged or not priveleged. It's the daemon.
2019-09-13 14:33:51	vn971	You cannot run dockerd with user namespace mapping option, or anything of the like.
2019-09-13 14:34:06	<--	fjellfras (~fjellfras@223.229.235.29) has quit (Quit: Leaving)
2019-09-13 14:35:13	vn971	the quoted text and link below are for dockerd and its daemon. As the documentation correctly says, having access to the dockerd TCP port or docker group allows "non-root users to gain root access on the host".
2019-09-13 14:37:29	vorner	No, I'm not saying that. I'm saying that if I run dockerd with the `--user-ns` *parameter*, it itself runs as root, yes, but refuses to start a container not mapped to your user. And the way to gain the root access to the host is by executing a privileged container and mapping the whole system into it or something such. It won't work with dockerd with the userns parameter, it'll refuse to do so.
2019-09-13 14:37:44	-->	baali (~baali@59.98.237.150) has joined ##rust
2019-09-13 14:37:46	-->	federico1 (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-09-13 14:37:46	vorner	Or are you aware of *other* ways to gain root on the host?
2019-09-13 14:37:48	-->	tmager (~Thunderbi@146.115.18.74) has joined ##rust
2019-09-13 14:40:43	vorner	(or, it won't refuse to map it, but the „root“ inside will have the same restrictions to access the system as your user has outside, so it'll be effectively useless to do the mapping)
2019-09-13 14:40:55	<--	kunningd (~kunningdr@unaffiliated/kunningdruger) has quit (Ping timeout: 246 seconds)
2019-09-13 14:41:26	-->	kunningd (~kunningdr@unaffiliated/kunningdruger) has joined ##rust
2019-09-13 14:44:25	vorner	Ah, crap, there's a way through the command line maze to disable this enforcement as a user. That's stupid :-|.
2019-09-13 14:44:44	vn971	vorner: ah, got it, there is a dockerd parameter as well indeed.
2019-09-13 14:45:05	vn971	vorner: I thought so as well, but if you read further, they say it's still enforced.
2019-09-13 14:46:57	<--	Ichorio (~Ichorio@2001:16b8:57ca:9600:8541:4cfa:2933:d307) has quit (Ping timeout: 245 seconds)
2019-09-13 14:47:03	vorner	Just tried, it isn't. I'm running dockerd with the mapping enabled, but `docker run --userns=host --privileged` works :-|. And it even allows me things I wasn't allowed before.
2019-09-13 14:48:17	vn971	ah right, --userns=host means to disable this thing... "Nice".
2019-09-13 14:48:44	<--	djapo (~archie@unaffiliated/djapo) has quit (Ping timeout: 265 seconds)
2019-09-13 14:49:05	vorner	But adding a parameter „Don't accept userns overrides“ to dockerd should technically be possible…
2019-09-13 14:49:17	vn971	Well, there's a reason why people joke that the letter "s" in docker stands for "security".
2019-09-13 14:49:52	<--	nepugia (~nephele@200116b864a863004b33f1ed1381bf81.dip.versatel-1u1.de) has quit (Ping timeout: 245 seconds)
2019-09-13 14:52:27	-->	happycoder (~happycode@137.97.182.51) has joined ##rust
2019-09-13 14:54:43	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-09-13 14:59:45	-->	ki9a (~ki9a@about/csharp/regular/ki9a) has joined ##rust
2019-09-13 15:06:01	<--	jamm (~jamm@unaffiliated/jamm) has quit (Read error: Connection reset by peer)
2019-09-13 15:06:20	tjis	how would i run a bit of code only in debug mode?
2019-09-13 15:06:58	<--	happycoder (~happycode@137.97.182.51) has quit (Read error: No route to host)
2019-09-13 15:10:40	<--	lovesegfault (~bemeurer@4.16.192.242) has quit (Ping timeout: 246 seconds)
2019-09-13 15:11:52	-->	happycoder (~happycode@2405:204:d209:7db6:b477:ef9c:9bc4:9df8) has joined ##rust
2019-09-13 15:20:45	vn971	tjis: would this solve your problem?: https://doc.rust-lang.org/std/macro.cfg.html
2019-09-13 15:21:35	tjis	perhaps. is debug/release mode something I can look up with cfg?
2019-09-13 15:22:33	j`ey	debug_assertions is on for debug
2019-09-13 15:22:55	tjis	neat. that'll work great then. thank you
2019-09-13 15:23:12	<--	happycoder (~happycode@2405:204:d209:7db6:b477:ef9c:9bc4:9df8) has quit (Ping timeout: 245 seconds)
2019-09-13 15:29:30	-->	mbestavr-rh (mbestavrre@nat/redhat/x-slukdxasyyfiefhe) has joined ##rust
2019-09-13 15:30:12	raeken	https://podman.io/
2019-09-13 15:30:16	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-09-13 15:30:21	raeken	"What is Podman? Podman is a daemonless container engine for developing, managing, and running OCI Containers on your Linux System. Containers can either be run as root or in rootless mode. Simply put: `alias docker=podman`. More details here. "
2019-09-13 15:30:26	-->	scunc (~scunc@183-140.its-is.uni.edu) has joined ##rust
2019-09-13 15:30:44	-->	happycoder (~happycode@2405:204:d209:7db6:b477:ef9c:9bc4:9df8) has joined ##rust
2019-09-13 15:32:53	<--	pknull (~pooky@184.103.28.136) has quit (Quit: Departing.)
2019-09-13 15:33:31	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 15:34:52	vn971	raeken: it's only for those who want to enable "user namespaces" on their system though.
2019-09-13 15:36:24	vn971	many people feel it's not secure enough. Though Linux started adding the corresponding flag by default since recently, so maybe it'll eventually be considered more stable by security-oriented folks.
2019-09-13 15:36:32	<--	happycoder (~happycode@2405:204:d209:7db6:b477:ef9c:9bc4:9df8) has quit (Ping timeout: 245 seconds)
2019-09-13 15:37:19	-->	stephaneyfx (~stephaney@192.157.123.229) has joined ##rust
2019-09-13 15:38:40	<--	Proximyst (~Proximyst@116.203.198.234) has quit (Quit: Robbing a bank)
2019-09-13 15:38:55	-->	Proximyst (~Proximyst@116.203.198.234) has joined ##rust
2019-09-13 15:47:01	-->	jenny-m (~jdm-@75.98.19.133) has joined ##rust
2019-09-13 15:47:10	<--	pknull (~pooky@184.103.28.136) has quit (Quit: Departing.)
2019-09-13 15:48:02	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 15:48:20	vn971	raeken: but it looks awesome if you already have userns anyway!
2019-09-13 15:52:43	-->	wmealing (~wmealing@124.149.193.135) has joined ##rust
2019-09-13 16:04:12	-->	npmccallum (npmccallum@nat/redhat/x-dmeigpcjoibniuox) has joined ##rust
2019-09-13 16:04:39	-->	npmccallum_ (npmccallum@nat/redhat/x-eaympaxdkzssviqq) has joined ##rust
2019-09-13 16:04:49	<--	npmccallum (npmccallum@nat/redhat/x-dmeigpcjoibniuox) has quit (Read error: Connection reset by peer)
2019-09-13 16:05:16	<--	npmccallum_ (npmccallum@nat/redhat/x-eaympaxdkzssviqq) has quit (Client Quit)
2019-09-13 16:05:31	-->	npmccallum (npmccallum@nat/redhat/x-jwpayofinzbkhtbb) has joined ##rust
2019-09-13 16:07:51	-->	AbedB (~AbedBhuty@bzq-79-178-21-93.red.bezeqint.net) has joined ##rust
2019-09-13 16:09:09	<--	npmccallum (npmccallum@nat/redhat/x-jwpayofinzbkhtbb) has quit (Client Quit)
2019-09-13 16:09:28	-->	npmccallum (npmccallum@nat/redhat/x-enlzokfuxnwxdyfg) has joined ##rust
2019-09-13 16:12:17	<--	pknull (~pooky@184.103.28.136) has quit (Quit: Departing.)
2019-09-13 16:12:34	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 16:16:12	<--	npmccallum (npmccallum@nat/redhat/x-enlzokfuxnwxdyfg) has quit (Remote host closed the connection)
2019-09-13 16:16:12	la_mettrie	function_name(argument_name.struct_name.field_name)
2019-09-13 16:16:18	-->	mindCrime__ (~mindCrime@216.85.170.148) has joined ##rust
2019-09-13 16:16:29	<--	federico1 (~federico1@opensuse/member/Federico-Mena) has quit (Read error: Connection reset by peer)
2019-09-13 16:16:33	la_mettrie	now if this field_name is Option<T> instead of ordinary field, how the syntax goes?
2019-09-13 16:16:52	<--	SpaceManiac (~SpaceMani@2601:200:4400:ec::1006) has quit (Remote host closed the connection)
2019-09-13 16:17:31	-->	SpaceManiac (~SpaceMani@c-67-172-121-111.hsd1.ca.comcast.net) has joined ##rust
2019-09-13 16:17:47	-->	mindCrime_ (~mindCrime@216.85.170.148) has joined ##rust
2019-09-13 16:18:23	Lumpio-	If you want to get the value out of the option and crash if it's not there it's either unwrap() or as_ref().unwrap() if you want a reference to it instead
2019-09-13 16:18:36	-->	cloudhead (~cloudhead@160.230.205.35.bc.googleusercontent.com) has joined ##rust
2019-09-13 16:18:37	Lumpio-	If you want to do something else if the value isn't there, I'd use a match statement to check
2019-09-13 16:18:49	Lumpio-	(expression*)
2019-09-13 16:19:23	j`ey	https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c4ac5268e9bf2746a772b1d7aaf78cfe what's going wrong here?
2019-09-13 16:19:46	Yaniel	if let can sometimes look better than match
2019-09-13 16:19:52	Yaniel	and then there'
2019-09-13 16:20:00	Yaniel	and then there is unwrap_or_else()
2019-09-13 16:20:20	Lumpio-	Yeah if let is actually often nicer for options
2019-09-13 16:21:03	-->	ravenousmoose (~ravenousm@ptr-cud5aqfz6yldre36cip.18120a2.ip6.access.telenet.be) has joined ##rust
2019-09-13 16:21:32	<--	mindCrime__ (~mindCrime@216.85.170.148) has quit (Ping timeout: 265 seconds)
2019-09-13 16:23:16	j`ey	Ah, it's because Input could be chosen by the caller, but I call it with a Vec
2019-09-13 16:23:19	Lumpio-	j`ey: A caller could plausibly pass in something... yeah
2019-09-13 16:23:23	Lumpio-	Something that is AsRef but not a Vec
2019-09-13 16:23:34	j`ey	and you cant impl AsRef in Fn()
2019-09-13 16:24:35	j`ey	and https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=010a0a94e574e7a09e91396ea5a30698 doesnt work
2019-09-13 16:26:30	Lumpio-	I'm not sure what that last version is even trying to do
2019-09-13 16:26:36	Lumpio-	Require Input to be Vec<u8>?
2019-09-13 16:26:45	Lumpio-	At that point you might as well say Parser: Fn(Vec<u8>) -> Vec<u8>
2019-09-13 16:26:58	j`ey	hm
2019-09-13 16:27:08	j`ey	maybe I meant something like Vec<u8>: Into<Input>?
2019-09-13 16:27:10	j`ey	or something
2019-09-13 16:27:13	Lumpio-	However what comes to parsing bytes when I tried out tokio I really liked the Bytes type for parsing
2019-09-13 16:27:18	Lumpio-	(The bytes crate isn't dependent on Tokio)
2019-09-13 16:27:28	Lumpio-	Has a couple of convenience methods Vec doesn't
2019-09-13 16:27:55	Yaniel	byteorder has some too
2019-09-13 16:28:46	j`ey	I dont have the full context, not my code
2019-09-13 16:31:17	Lumpio-	hm
2019-09-13 16:32:49	j`ey	I think they wanted Parser to be able take either &[u8] or &Vec<u8> hence the use of AsRef
2019-09-13 16:36:01	calops	but if you take &[u8], &Vec<u8> will work automatically
2019-09-13 16:36:05	calops	no?
2019-09-13 16:38:32	-->	SisterFister (~SisterFis@catv-178-48-164-108.catv.broadband.hu) has joined ##rust
2019-09-13 16:38:48	j`ey	I asked why they went with AsRef, not heard back yet
2019-09-13 16:39:41	tjis	j`ey: this is actually the pattern i'm following. is there a better way to accomplish something like that?
2019-09-13 16:43:27	-->	kabeero (~quassel@unaffiliated/kabeero) has joined ##rust
2019-09-13 16:44:26	<--	baali (~baali@59.98.237.150) has quit (Quit: Leaving.)
2019-09-13 16:44:36	-->	baali (~baali@59.98.237.150) has joined ##rust
2019-09-13 16:46:07	<--	kunningd (~kunningdr@unaffiliated/kunningdruger) has quit (Ping timeout: 245 seconds)
2019-09-13 16:46:16	-->	kunningd (~kunningdr@unaffiliated/kunningdruger) has joined ##rust
2019-09-13 16:47:01	-->	elichai2 (uid212594@gateway/web/irccloud.com/x-uoedvggqaregeizh) has joined ##rust
2019-09-13 16:49:06	<--	baali (~baali@59.98.237.150) has quit (Client Quit)
2019-09-13 16:54:37	<--	pknull (~pooky@184.103.28.136) has quit (Quit: Departing.)
2019-09-13 16:55:08	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 16:57:13	<--	ziyourenxiang (~ziyourenx@unaffiliated/ziyourenxiang) has quit (Remote host closed the connection)
2019-09-13 16:57:38	-->	ziyourenxiang (~ziyourenx@unaffiliated/ziyourenxiang) has joined ##rust
2019-09-13 16:58:08	<--	pknull (~pooky@184.103.28.136) has quit (Client Quit)
2019-09-13 16:58:38	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 16:58:49	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-09-13 17:02:08	<--	stephaneyfx (~stephaney@192.157.123.229) has quit (Quit: Leaving)
2019-09-13 17:04:43	<--	efm (~efm@vpn.tummy.com) has quit (Read error: Connection reset by peer)
2019-09-13 17:05:45	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Remote host closed the connection)
2019-09-13 17:06:06	-->	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has joined ##rust
2019-09-13 17:06:10	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-09-13 17:06:49	<--	sysKin (~syskin@61-245-149-216.3df595.adl.nbn.aussiebb.net) has quit (Ping timeout: 240 seconds)
2019-09-13 17:08:16	<--	murla (~murla@146.120.13.152) has quit (Ping timeout: 246 seconds)
2019-09-13 17:08:25	<--	ziyourenxiang (~ziyourenx@unaffiliated/ziyourenxiang) has quit (Ping timeout: 265 seconds)
2019-09-13 17:10:36	<--	jenny-m (~jdm-@75.98.19.133) has quit (Quit: Leaving...)
2019-09-13 17:12:01	<--	tostr (~tostr@unaffiliated/tostr) has quit (Ping timeout: 276 seconds)
2019-09-13 17:18:46	-->	murla (~murla@146.120.13.152) has joined ##rust
2019-09-13 17:19:35	-->	analogue (~analogue@129.63.253.88) has joined ##rust
2019-09-13 17:19:49	<--	ravenousmoose (~ravenousm@ptr-cud5aqfz6yldre36cip.18120a2.ip6.access.telenet.be) has quit (Ping timeout: 276 seconds)
2019-09-13 17:21:12	<--	Tichodroma (~lutz@fsf/member/Tichodroma) has quit (Quit: leaving)
2019-09-13 17:23:38	<--	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2019-09-13 17:24:08	-->	t7 (~tommo@2a00:23c5:1284:fc00:a171:8f14:2f0e:83cc) has joined ##rust
2019-09-13 17:24:11	-->	zirpu (~allan@24.35.77.206) has joined ##rust
2019-09-13 17:24:16	<--	zirpu (~allan@24.35.77.206) has quit (Client Quit)
2019-09-13 17:26:52	-->	nico103 (~nico@24.28.108.183) has joined ##rust
2019-09-13 17:28:15	-->	happycoder (~happycode@14.139.185.114) has joined ##rust
2019-09-13 17:28:52	-->	Ichorio (~Ichorio@2001:16b8:57ca:9600:59de:cc68:6c74:976c) has joined ##rust
2019-09-13 17:28:56	-->	zirpu (~allan@24.35.77.206) has joined ##rust
2019-09-13 17:31:13	-->	mcoffin (~mcoffin@gateway/tor-sasl/mcoffin) has joined ##rust
2019-09-13 17:35:01	<--	dozn_ (~dozn@S01069050ca3c43c3.vs.shawcable.net) has quit (Read error: Connection reset by peer)
2019-09-13 17:35:13	<--	pie_ (~pie_@unaffiliated/pie-/x-0787662) has quit (Ping timeout: 240 seconds)
2019-09-13 17:35:53	<--	zirpu (~allan@24.35.77.206) has quit (Quit: WeeChat 2.6)
2019-09-13 17:36:08	-->	zirpu (~allan@24.35.77.206) has joined ##rust
2019-09-13 17:39:02	<--	matthias_bgg_ (~mbgg@37.223.145.235) has quit (Ping timeout: 245 seconds)
2019-09-13 17:40:25	-->	Oct (foobar@poulet.zoy.org) has joined ##rust
2019-09-13 17:42:17	-->	jenny-m (~jdm-@corp-nat.fw1.untrust.tor1.mozilla.com) has joined ##rust
2019-09-13 17:43:45	Oct	hello, I have a crate of mine, when I put foo="2.0.1" in my Cargo file, it fetches version "2.1.0", is this expected?
2019-09-13 17:43:47	<--	pknull (~pooky@184.103.28.136) has quit (Quit: Departing.)
2019-09-13 17:44:12	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 17:44:58	-->	baali (~baali@59.98.237.150) has joined ##rust
2019-09-13 17:45:11	Faux	Yes, 2.0.1 means >=2.0.1 <3. https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html
2019-09-13 17:45:16	Oct	mm, this seems to be an expected semver behavior
2019-09-13 17:45:23	Oct	thanks Faux :)
2019-09-13 17:47:09	<--	pknull (~pooky@184.103.28.136) has quit (Client Quit)
2019-09-13 17:47:43	-->	pknull (~pooky@184.103.28.136) has joined ##rust
2019-09-13 17:47:47	<--	Ichorio (~Ichorio@2001:16b8:57ca:9600:59de:cc68:6c74:976c) has quit (Ping timeout: 245 seconds)
2019-09-13 17:48:58	-->	mryandao_ (~mryandao@gateway/tor-sasl/mryandao) has joined ##rust
2019-09-13 17:50:43	-->	nepugia (~nephele@200116b864a863004b33f1ed1381bf81.dip.versatel-1u1.de) has joined ##rust
2019-09-13 17:51:19	<--	mryandao (~mryandao@gateway/tor-sasl/mryandao) has quit (Ping timeout: 260 seconds)
2019-09-13 17:51:26	<--	ellcs (~mantel@193.174.12.196) has quit (Ping timeout: 265 seconds)
2019-10-17 11:12:42	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-17 11:12:42	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-17 11:12:42	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-17 11:12:42	--	Channel ##rust: 560 nicks (2 ops, 0 voices, 558 normals)
2019-10-17 11:12:58	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-17 11:15:56	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 246 seconds)
2019-10-17 11:17:03	-->	cats3d_ (~quassel@c-73-202-78-90.hsd1.ca.comcast.net) has joined ##rust
2019-10-17 11:17:32	-->	ev4rist3 (~phoenix@x4db76dde.dyn.telefonica.de) has joined ##rust
2019-10-17 11:18:52	Xatenev	hmm, I'd like to know more about how vlang.org does their memory safety
2019-10-17 11:18:54	Xatenev	but i dont find a lot of info
2019-10-17 11:19:13	Xatenev	err
2019-10-17 11:19:14	Xatenev	vlang.io
2019-10-17 11:19:40	<--	DTEIT (DTEIT@nat/redhat/x-aqsmvoilvodamjix) has quit (Quit: ZNC 1.7.4 - https://znc.in)
2019-10-17 11:19:46	<--	cats3d_ (~quassel@c-73-202-78-90.hsd1.ca.comcast.net) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2019-10-17 11:20:07	-->	cats3d_ (~quassel@c-73-202-78-90.hsd1.ca.comcast.net) has joined ##rust
2019-10-17 11:21:11	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-17 11:21:11	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-17 11:21:11	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-17 11:21:11	--	Channel ##rust: 560 nicks (2 ops, 0 voices, 558 normals)
2019-10-17 11:21:11	-->	DTEIT (DTEIT@nat/redhat/x-qaruolhwehlnrqss) has joined ##rust
2019-10-17 11:21:22	Faux	It looks like a DSL for C, so presumably just inserts bounds checks, null checks, etc., and doesn't have pointer areithemereatic?
2019-10-17 11:21:28	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-17 11:22:14	Xatenev	Faux, have you looked at the vlang.io?
2019-10-17 11:22:21	Xatenev	DSL sounds as if you looked at vlang.org, i misstyped that
2019-10-17 11:23:21	Xatenev	yeah no pointer arithmetic
2019-10-17 11:23:26	Xatenev	atleast i dont find it in the dos
2019-10-17 11:23:27	Xatenev	docs*
2019-10-17 11:24:13	-->	t7 (~tommo@2a00:23c5:1284:fc00:3d29:e556:f917:896b) has joined ##rust
2019-10-17 11:24:16	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 11:24:55	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-17 11:25:04	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-10-17 11:25:18	Xatenev	I do like that you only have to declare a parameter as a reference and the compiler figures out for you whether it should pass a reference or the actual object
2019-10-17 11:25:19	Faux	https://paste.debian.net/1107619/ there's the output for the "json" example on their homepage, after running it through clang-format.
2019-10-17 11:25:19	Xatenev	thats cool
2019-10-17 11:26:36	<--	baali (~baali@59.97.69.245) has quit (Ping timeout: 268 seconds)
2019-10-17 11:31:19	Xatenev	Faux, It can do both it seems
2019-10-17 11:31:39	Xatenev	Does V use LLVM?
2019-10-17 11:31:39	Xatenev	No. V compiles directly to machine code. and V can also emit human readable C, which can then be compiled to run on any platform.
2019-10-17 11:31:50	Yaniel	*eventually
2019-10-17 11:32:16	Faux	Without looking, I am almost certain that they are generating C, then immediately running it through gcc (or clang, but they have decided llvm is evil).
2019-10-17 11:32:47	Xatenev	Faux, only for production builds because they don't have their own optimizer I think...
2019-10-17 11:32:50	-->	JWatkins (~quassel@unaffiliated/jwatkins) has joined ##rust
2019-10-17 11:32:52	Xatenev	atleast thats what I can read out of their docs
2019-10-17 11:33:04	Yaniel	oh, they actually have something that works now?
2019-10-17 11:33:17	-->	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has joined ##rust
2019-10-17 11:33:18	Yaniel	last time it was brought up all they had was plans and broken code
2019-10-17 11:33:32	j`ey	it can generate C, ish
2019-10-17 11:33:37	<--	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has quit (Max SendQ exceeded)
2019-10-17 11:33:42	Yaniel	and IIRC it was indeed going through C
2019-10-17 11:33:55	Faux	faux@astoria:~/clone/v% strace -yy -ff -eexecve ./v examples/json.v  2>&1 | fgrep 'cc"'
2019-10-17 11:33:57	Faux	[pid 15715] execve("/var/tmp/tcc/bin/tcc", ["/var/tmp/tcc/bin/tcc", "-std=gnu11", "-w", "-Werror=impl
2019-10-17 11:34:08	-->	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has joined ##rust
2019-10-17 11:34:10	Faux	Insecure use of temp paths, good job.
2019-10-17 11:34:33	<--	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has quit (Max SendQ exceeded)
2019-10-17 11:35:03	-->	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has joined ##rust
2019-10-17 11:35:24	<--	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has quit (Max SendQ exceeded)
2019-10-17 11:35:43	Xatenev	Faux, why insecure?
2019-10-17 11:35:53	-->	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has joined ##rust
2019-10-17 11:36:18	<--	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has quit (Max SendQ exceeded)
2019-10-17 11:36:42	Faux	Writing to a predictable path in a directory others control (such as /tmp or /var/tmp) is a classic security vulnerability (except on kernels with the hardening turned on).
2019-10-17 11:36:47	-->	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has joined ##rust
2019-10-17 11:37:13	<--	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has quit (Max SendQ exceeded)
2019-10-17 11:37:41	-->	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has joined ##rust
2019-10-17 11:38:04	Xatenev	I don't understand how a security vulnerability can result from that
2019-10-17 11:38:19	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-17 11:38:39	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-17 11:40:14	-->	pedro4 (~pedro4@134.19.179.179) has joined ##rust
2019-10-17 11:40:31	Faux	CWE-377. Simplest case is the attacker creates a symlink from /tmp/temp.txt to /etc/shadow, and root opens and writes to it, and now the system is dead.
2019-10-17 11:41:13	Xatenev	who is the attacker in that case :O
2019-10-17 11:41:20	Faux	Me, a non-root user on the box.
2019-10-17 11:41:59	Xatenev	so what you are saying is i replace /var/tmp/tcc/bin/tcc with a file called temp.txt
2019-10-17 11:42:04	Xatenev	or well a symlink
2019-10-17 11:42:24	Xatenev	well thats not possible
2019-10-17 11:42:29	Xatenev	because of the access rights of the directory `tcc`
2019-10-17 11:42:40	Xatenev	writing is not permitted
2019-10-17 11:42:43	Xatenev	so i dont understand ur example :(
2019-10-17 11:43:04	Faux	The simplest attack does not apply to directories, no. Go read the docs on the classic CWE.
2019-10-17 11:43:36	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-17 11:44:27	Xatenev	I have read CWE-377 and i dont understand how it applies in this case :/
2019-10-17 11:44:40	Faux	It might not, but it almost certainly does.
2019-10-17 11:45:09	Xatenev	from what I understand it would only if the generated tcc directory would be writeable by `Other`
2019-10-17 11:45:19	Xatenev	otherwise its to be expected that it contains the expected files.
2019-10-17 11:45:54	Faux	I am not doing a security review of a random project beyond pointing out that it would automatically, immediately fail any automatic security scanner.
2019-10-17 11:46:09	Xatenev	:)
2019-10-17 11:46:11	mixi	what does it do if the directory already exists with different permissions/owner than it expects?
2019-10-17 11:46:20	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 11:46:25	j`ey	oh it's using tcc now, cool
2019-10-17 11:46:44	mixi	and if it goes the extra mile to check permissions/owner: does it do it in a racy way?
2019-10-17 11:46:57	-->	baali (~baali@59.98.234.75) has joined ##rust
2019-10-17 11:48:20	Faux	You can probably do that safely now on linux, with mkdirat(2) and friends.
2019-10-17 11:48:33	Faux	Not that anyone would ever bother.
2019-10-17 11:52:36	Faux	Haha, if it can't run /var/tmp/tcc it .. just uses gcc.
2019-10-17 11:53:27	Xatenev	Faux, lol
2019-10-17 11:53:28	Xatenev	^^
2019-10-17 11:56:00	Faux	So, the Makefile has the vuln, it runs "rm -rf /var/tmp/tcc". If you "ln -s /home /var/tmp/tcc" and then someone else runs 'make', they lose their homedir.
2019-10-17 11:56:51	Xatenev	oh yeah
2019-10-17 11:56:54	Xatenev	thats no good
2019-10-17 11:57:30	Faux	Hardened distros, including Ubuntu, ship with YAMA enabled, which should block that, but I didn't test it.
2019-10-17 11:58:01	<--	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has quit (Quit: Leaving)
2019-10-17 11:58:32	<--	tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has quit (Remote host closed the connection)
2019-10-17 11:58:33	Yaniel	ahh the classic "well then just delete... everything?"
2019-10-17 11:58:58	mixi	i'm pretty sure rm -rf doesn't follow symlinks
2019-10-17 11:59:12	Yaniel	a lot of fun was had when steam had a similar bug
2019-10-17 11:59:36	mixi	it would be different if the command was "rm -rf /var/tmp/tcc/" (note the trailing slash)
2019-10-17 11:59:54	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-17 11:59:59	-->	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has joined ##rust
2019-10-17 12:00:04	Yaniel	I think the initial report was like "steam tried to update itself and now my / is empty"
2019-10-17 12:00:05	Faux	mixi: *flips table*
2019-10-17 12:00:34	Xatenev	mixi, It has a trailing slash.
2019-10-17 12:00:39	-->	Mrbuck (~Mrbuck@ec2-34-202-1-168.compute-1.amazonaws.com) has joined ##rust
2019-10-17 12:00:40	Faux	mixi: It is. But I wasn't aware of that, I only tested it.
2019-10-17 12:02:43	Faux	That zsh tab completion thing, where it draws the /, then removes it if you press return, is now creeping me out.
2019-10-17 12:03:53	<--	lord| (~solenodic@unaffiliated/solenodic) has quit (Ping timeout: 276 seconds)
2019-10-17 12:07:20	Moongoodgirl	isn't like half the point of V that it compiles to C?
2019-10-17 12:08:28	j`ey	Moongoodgirl: dont think so
2019-10-17 12:08:46	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 12:09:58	Moongoodgirl	huh.
2019-10-17 12:12:14	Yaniel	no, afaik that is more of a technical limitation for now
2019-10-17 12:13:15	<--	Stanley00 (~Stanley00@unaffiliated/stanley00) has quit (Remote host closed the connection)
2019-10-17 12:13:20	<--	rrooij (~rrooij@unaffiliated/rroij) has quit (Ping timeout: 265 seconds)
2019-10-17 12:18:44	<--	xsoultartar (~xsoultart@2001:268:c0a4:817:6cb6:711e:ac2c:ed33) has quit (Quit: Leaving)
2019-10-17 12:20:15	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-17 12:22:50	elichai2	any way to make this work? https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=3e95d748642db2358022268dffe8654a
2019-10-17 12:23:26	-->	Stanley00 (~Stanley00@unaffiliated/stanley00) has joined ##rust
2019-10-17 12:26:29	-->	lord| (~solenodic@unaffiliated/solenodic) has joined ##rust
2019-10-17 12:28:04	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 12:29:13	voker57	elichai2: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=d3a673c9ecf84ddb003265fdee785b50
2019-10-17 12:29:21	Mrbuck	play.rust is copy cat og plat.go ?
2019-10-17 12:29:31	Mrbuck	coped from goland play ?
2019-10-17 12:30:09	elichai2	voker57: hmm why?
2019-10-17 12:30:16	voker57	why what?
2019-10-17 12:30:38	Moongoodgirl	elichai2: Files track their position. After writing data, the position is after the data you just wrote.
2019-10-17 12:30:56	Moongoodgirl	elichai2: If there wasn't any other data in the file, then you're at the end of the file, and read() returns empty.
2019-10-17 12:31:44	Moongoodgirl	Mrbuck: well, it looks different :P
2019-10-17 12:32:24	elichai2	Moongoodgirl: so why is it required even if I use the file descriptor itself?
2019-10-17 12:32:47	Faux	The file descriptor tracks it, not Rust.
2019-10-17 12:33:00	Moongoodgirl	elichai2: You're not using a raw file descriptor; you're using a Rust `File`.
2019-10-17 12:33:01	Faux	POSIX baby.
2019-10-17 12:33:12	elichai2	I know. just a sec :)
2019-10-17 12:33:14	Moongoodgirl	But, yeah, this is an OS thing, not specific to Rust.
2019-10-17 12:33:14	elichai2	Faux: ohh
2019-10-17 12:33:41	Faux	One day we'll invent a file API people can actually use!
2019-10-17 12:33:43	elichai2	i'll look into the seek implementation. thanks :)
2019-10-17 12:33:44	Mrbuck	Moongoodgirl: ok and are you good girl  ?
2019-10-17 12:34:07	 *	Moongoodgirl is a very good girl. Woof. :3
2019-10-17 12:34:10	Mrbuck	I noticed even in rust conf many women
2019-10-17 12:34:13	Mrbuck	I love it
2019-10-17 12:34:31	Mrbuck	Rust is women language I think
2019-10-17 12:34:38	Mrbuck	rustbook coauthor a woman
2019-10-17 12:34:45	Moongoodgirl	/r/unnecessarilygendered
2019-10-17 12:34:46	elichai2	yep :) it calls lseek64(3)
2019-10-17 12:35:23	Moongoodgirl	If we were inventing a file API from scratch, would we still track position?
2019-10-17 12:35:24	Mrbuck	Moongoodgirl:  is that redidt ?
2019-10-17 12:35:35	voker57	probably because Mozilla is SJWs and using gender quotas
2019-10-17 12:38:29	capitol	O_o
2019-10-17 12:38:41	Moongoodgirl	Making a new file API without being tied to current POSIX would actually be quite nice.
2019-10-17 12:39:04	Moongoodgirl	We could have handles to paths, which you could use to unlink a file without accidentally unlinking a different file if it got replaced.
2019-10-17 12:39:16	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-17 12:39:33	Faux	https://github.com/FauxFaux/tempfile-fast-rs/blob/cbfe975e52bc07a2e5bafcefd74d194e8a54613f/src/sponge.rs#L9 >.>
2019-10-17 12:39:50	Moongoodgirl	And also the Linux thing where you can make an anonymous file on a given filesystem, and later make a link to it (or not)
2019-10-17 12:40:32	Faux	¬_¬_¬
2019-10-17 12:44:06	Yaniel	>handles to paths, which you could use to unlink a file without accidentally unlinking a different file if it got replaced
2019-10-17 12:44:15	Yaniel	isn't this how linux file descriptors work, at least for file contents?
2019-10-17 12:44:41	Yaniel	s/linux/unix/
2019-10-17 12:45:28	Yaniel	also, a new file api that is not tied to posix is quite a relevant thing for redox, no?
2019-10-17 12:46:08	Moongoodgirl	There's no funlink() though.
2019-10-17 12:46:40	Yaniel	mm right, that would not make sense since hardlinks exist
2019-10-17 12:46:47	Moongoodgirl	And you can't atomically replace a file only if it's a specific file that you expect.
2019-10-17 12:46:48	Yaniel	so it'd have to track which one was used
2019-10-17 12:47:03	Yaniel	right
2019-10-17 12:47:44	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 12:48:42	Moongoodgirl	…or, heck, not even path handles, but just have variants of unlink() and rename() that take device and inode numbers.
2019-10-17 12:49:01	Moongoodgirl	I think that covers all the use cases.
2019-10-17 12:49:10	Yaniel	unlink that takes a file descriptor maybe?
2019-10-17 12:49:18	Yaniel	since that points to the inode
2019-10-17 12:50:55	Moongoodgirl	You need a path too though.
2019-10-17 12:51:00	Moongoodgirl	…like you just pointed out. xD
2019-10-17 12:51:05	Yaniel	...right
2019-10-17 12:51:19	Yaniel	need more coffee
2019-10-17 12:51:23	Yaniel	or more sleep
2019-10-17 12:51:25	Yaniel	or both
2019-10-17 12:52:26	Moongoodgirl	so like `extern "C" fn unlinki(path: *const c::char, device: c::int, inode: c::long)`
2019-10-17 12:53:10	Moongoodgirl	`-> c::int`
2019-10-17 12:53:44	Yaniel	or funlink_from(path, fd) -> int
2019-10-17 12:53:57	Yaniel	if you want to check the contents of the file before removing you need the fd anyway
2019-10-17 12:54:02	Moongoodgirl	true
2019-10-17 12:54:15	Moongoodgirl	but if you only want to check metadata, you don't need to open the file
2019-10-17 12:54:58	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-17 12:55:22	Yaniel	unless you use fstat()
2019-10-17 12:56:58	-->	osa1_ (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-17 12:57:23	Moongoodgirl	the point is, if you use stat() and unlinki(), you don't need to open()
2019-10-17 12:57:35	Moongoodgirl	but if you use stat() and unlink_from(), you /do/ need to open()
2019-10-17 13:02:09	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-17 13:05:15	<--	osa1_ (~osa1@haskell/developer/osa1) has quit (Ping timeout: 240 seconds)
2019-10-17 13:05:15	<--	zofrex (~zofrex@unaffiliated/zofrex) has quit (Read error: Connection reset by peer)
2019-10-17 13:05:56	-->	zofrex (~zofrex@unaffiliated/zofrex) has joined ##rust
2019-10-17 13:09:40	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 13:11:52	-->	pjs902 (~quassel@140.184.2.20) has joined ##rust
2019-10-17 13:14:13	-->	crockwork (~crockwork@66.205.193.158) has joined ##rust
2019-10-17 13:18:12	<--	samrg472 (~samrg472@gateway/tor-sasl/samrg472) has quit (Ping timeout: 260 seconds)
2019-10-17 13:18:24	-->	dbohdan (~dbohdan@unaffiliated/dbohdan) has joined ##rust
2019-10-17 13:18:40	<--	andreas31 (~andreas@gateway/tor-sasl/andreas303) has quit (Ping timeout: 260 seconds)
2019-10-17 13:19:09	<--	lawlesseel (~lawlessee@gateway/tor-sasl/lawlesseel) has quit (Ping timeout: 260 seconds)
2019-10-17 13:19:09	<--	braydonf (~braydon@gateway/tor-sasl/braydonf) has quit (Ping timeout: 260 seconds)
2019-10-17 13:19:09	<--	mryandao (~mryandao@gateway/tor-sasl/mryandao) has quit (Ping timeout: 260 seconds)
2019-10-17 13:19:09	<--	simlay1 (~simlay@gateway/tor-sasl/simlay) has quit (Ping timeout: 260 seconds)
2019-10-17 13:19:35	-->	repo (~jokke@jokke.space) has joined ##rust
2019-10-17 13:19:36	<--	est31 (~quassel@gateway/tor-sasl/est31) has quit (Ping timeout: 260 seconds)
2019-10-17 13:19:37	repo	hi!
2019-10-17 13:20:13	-->	AbedB_ (~AbedBhuty@bzq-79-183-67-120.red.bezeqint.net) has joined ##rust
2019-10-17 13:20:14	repo	i'm playing around with wasm-bindgen and was wondering if there's any way to pass an array of strings to an exported rust function?
2019-10-17 13:21:03	repo	i don't see it listed in the supported types but i thought asking won't hurt
2019-10-17 13:21:13	Yaniel	there is a way to pass strings at least
2019-10-17 13:21:13	j`ey	a Vec<String> might work?
2019-10-17 13:21:34	repo	j`ey: thanks, i'll give it a go
2019-10-17 13:22:24	repo	hmm
2019-10-17 13:22:27	repo	the trait bound `std::boxed::Box<[std::string::String]>: wasm_bindgen::convert::traits::FromWasmAbi` is not satisfied: the trait `wasm_bindgen::convert::traits::FromWasmAbi` is not implemented for `std::boxed::Box<[std::string::String]>
2019-10-17 13:23:00	<--	AbedB (~AbedBhuty@bzq-79-176-90-216.red.bezeqint.net) has quit (Ping timeout: 246 seconds)
2019-10-17 13:23:46	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-17 13:24:04	repo	or maybe it's an x-y problem... i'm trying to do fuzzy search on a list of elements. if i could have a growing vector stored in a struct i guess i could add the strings one by one (while storing them in this vector)
2019-10-17 13:24:24	repo	but i'm a total rust noobie so..
2019-10-17 13:24:33	j`ey	Vec<String> is a growing vector
2019-10-17 13:25:06	Yaniel	[String; N] would be an array
2019-10-17 13:25:11	Yaniel	fixed-size
2019-10-17 13:25:21	Yaniel	compile-time fixed-size even
2019-10-17 13:25:38	repo	yeah
2019-10-17 13:25:43	repo	that wouldn't do
2019-10-17 13:26:33	repo	thanks for the quick help! i'll be trying things out!
2019-10-17 13:26:41	Yaniel	an api that provides an iterator over results in order of descending accuracy could be quite nice too
2019-10-17 13:26:48	repo	yeah
2019-10-17 13:26:55	repo	exactly what i was thinking about
2019-10-17 13:27:31	repo	i'm pretty stoked about this whole wasm-bindgen thing. i had no clue how far along it already is
2019-10-17 13:27:34	Yaniel	although that matters more if you are communicating over a network, in which case the wasm bridge is irrelevant anyway :D
2019-10-17 13:30:39	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 13:32:32	-->	braydonf (~braydon@gateway/tor-sasl/braydonf) has joined ##rust
2019-10-17 13:32:39	-->	samrg472 (~samrg472@gateway/tor-sasl/samrg472) has joined ##rust
2019-10-17 13:33:23	-->	mryandao (~mryandao@gateway/tor-sasl/mryandao) has joined ##rust
2019-10-17 13:33:33	-->	simlay (~simlay@gateway/tor-sasl/simlay) has joined ##rust
2019-10-17 13:35:16	-->	est31 (~quassel@gateway/tor-sasl/est31) has joined ##rust
2019-10-17 13:35:57	-->	horatiohb (~horatiohb@167.99.225.252) has joined ##rust
2019-10-17 13:41:11	<--	Stanley00 (~Stanley00@unaffiliated/stanley00) has quit (Read error: Connection reset by peer)
2019-10-17 13:43:16	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-17 13:47:42	-->	AbedB__ (~AbedBhuty@bzq-79-182-102-149.red.bezeqint.net) has joined ##rust
2019-10-17 13:48:47	-->	Stanley00 (~Stanley00@unaffiliated/stanley00) has joined ##rust
2019-10-17 13:50:18	<--	AbedB_ (~AbedBhuty@bzq-79-183-67-120.red.bezeqint.net) has quit (Ping timeout: 245 seconds)
2019-10-17 13:51:49	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 13:55:33	-->	frostschutz (~frostschu@55d4e7d2.access.ecotel.net) has joined ##rust
2019-10-17 14:00:08	-->	rustico (~nbases@2800:40:28:19d:d4e1:bbd7:7b28:4ce0) has joined ##rust
2019-10-17 14:02:34	-->	osa1_ (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-17 14:04:59	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-17 14:05:13	-->	narispo (~narispo@37.167.10.175) has joined ##rust
2019-10-17 14:06:51	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Quit: osa1)
2019-10-17 14:06:58	<--	osa1_ (~osa1@haskell/developer/osa1) has quit (Ping timeout: 245 seconds)
2019-10-17 14:07:07	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-17 14:08:46	<--	Mrbuck (~Mrbuck@ec2-34-202-1-168.compute-1.amazonaws.com) has quit (Quit: .)
2019-10-17 14:11:06	-->	Havohey (~Havohey@185.52.147.240) has joined ##rust
2019-10-17 14:11:10	-->	EvilKhaosKat (~evilkhaos@134.17.27.127) has joined ##rust
2019-10-17 14:13:45	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 14:16:44	-->	xj (~xj@pa49-197-89-21.pa.qld.optusnet.com.au) has joined ##rust
2019-10-17 14:16:47	-->	federico1 (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-10-17 14:18:03	<--	EvilKhaosKat (~evilkhaos@134.17.27.127) has quit
2019-10-17 14:21:52	-->	EvilKhaosKat (~evilkhaos@134.17.27.127) has joined ##rust
2019-10-17 14:21:55	<--	xj (~xj@pa49-197-89-21.pa.qld.optusnet.com.au) has quit (Remote host closed the connection)
2019-10-17 14:23:49	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-17 14:23:59	-->	andreas31 (~andreas@gateway/tor-sasl/andreas303) has joined ##rust
2019-10-17 14:27:17	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-17 14:28:28	-->	ggVGc (~ggVGc@unaffiliated/walt) has joined ##rust
2019-10-17 14:29:05	-->	jenny-m (~jdm-@69-196-166-55.dsl.teksavvy.com) has joined ##rust
2019-10-17 14:29:37	<--	kurashu89 (~kurashu89@2601:c6:c100:b840:44af:99c:fc6:9ee4) has quit (Remote host closed the connection)
2019-10-17 14:30:24	-->	kurashu89 (~kurashu89@2601:c6:c100:b840:31f1:76f2:8e22:614e) has joined ##rust
2019-10-17 14:32:41	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-17 14:35:09	-->	tmager (~Thunderbi@96.78.200.121) has joined ##rust
2019-10-17 14:35:37	<--	cheakoirccloud (uid293319@gateway/web/irccloud.com/x-fmelhqwwrknkflgp) has quit (Quit: Connection closed for inactivity)
2019-10-17 14:35:55	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 14:44:03	ZirconiumX	Rust semantics question. If I make a memory access in a function that is ultimately never used, is the compiler allowed to optimise out that memory access?
2019-10-17 14:44:11	sfackler	yes
2019-10-17 14:44:18	sfackler	unless you use volatile loads
2019-10-17 14:44:27	Lumpio-	...in a function that's never used?
2019-10-17 14:44:35	Lumpio-	Oooh or is it that the memory access is never used or
2019-10-17 14:46:27	ZirconiumX	The memory access :P
2019-10-17 14:46:27	<--	hexfive (~hexfive@50.35.80.237) has quit (Quit: WeeChat 2.6)
2019-10-17 14:46:42	ZirconiumX	Say I'm populating a struct with data from a table, but don't use some of the fields of it
2019-10-17 14:49:29	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-17 14:50:20	-->	ytain (~ghfg@2607:f2c0:921d:7a00:bcb3:a156:de4f:3301) has joined ##rust
2019-10-17 14:50:25	-->	xsoultartar (~xsoultart@2001:268:c0a4:817:784f:8cc0:dd:6f62) has joined ##rust
2019-10-17 14:52:57	j`ey	that's a tricky case, since you may use them in other functions?
2019-10-17 14:53:19	j`ey	(or if the struct is local only, then yes, they should be able to be removed)
2019-10-17 14:55:29	vorner	Especially if you get a warning that the field is assigned but never used (I don't remember the exact wording), then I think rustc is allowed to both remove the write and the actual field from the structure.
2019-10-17 14:57:08	Lumpio-	I smell an X-Y problem
2019-10-17 14:57:18	Lumpio-	ZirconiumX: Why does it matter if it's optimized out or not
2019-10-17 14:57:25	Lumpio-	Are you doing something funny or just wondering about performance
2019-10-17 14:57:40	ZirconiumX	MMIO side effects, for example
2019-10-17 14:57:47	ZirconiumX	Also in general performance
2019-10-17 14:58:07	Lumpio-	For any sort of memory-mapped IO you should always use volatile accesses
2019-10-17 14:58:21	Lumpio-	https://crates.io/crates/vcell there
2019-10-17 14:59:12	ZirconiumX	I realise this
2019-10-17 15:02:38	ZirconiumX	Having written a device support crate I feel relatively experienced on MMIO
2019-10-17 15:04:50	Lumpio-	Well at any rate, I'm pretty sure the compile is allowed to optimize out anything that doesn't have side effects in the execution model it assumes
2019-10-17 15:05:26	-->	samhh (~sam@90.240.233.29) has joined ##rust
2019-10-17 15:05:41	Lumpio-	And the model does not assume that a memory location might be an IO register
2019-10-17 15:05:44	ZirconiumX	Which is why it doesn't hurt to know what that execution model is
2019-10-17 15:06:14	<--	jenny-m (~jdm-@69-196-166-55.dsl.teksavvy.com) has quit (Remote host closed the connection)
2019-10-17 15:06:23	Lumpio-	I wonder if it's documented anywhere
2019-10-17 15:06:26	-->	lauromoura__ (~lauromour@2804:7f5:f380:8d0e:cdec:5eac:d0db:6467) has joined ##rust
2019-10-17 15:06:33	Lumpio-	Seeing how sparse the documentation on internals is I bet you'll have to dig into LLVM's documentation
2019-10-17 15:07:15	<--	narispo (~narispo@37.167.10.175) has quit (Ping timeout: 240 seconds)
2019-10-17 15:07:53	Lumpio-	But I'm fairly sure, just like any other compiler, it has the "memory access doesn't have side effects, and unless told otherwise, memory doesn't change unless my thread changes it" assumption because otherwise it couldn't do many nice optimizations
2019-10-17 15:08:00	Lumpio-	Wonder if there's aformal name for that
2019-10-17 15:08:55	<--	lauromoura (~lauromour@2804:7f5:f380:de2c:a599:e1d3:3e9d:92b4) has quit (Ping timeout: 250 seconds)
2019-10-17 15:09:36	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-17 15:13:13	<--	jokoon (~jokoon@unaffiliated/jokoon) has quit (Read error: Connection reset by peer)
2019-10-17 15:24:54	nerdypepper	i am trying to iterate over a byte array, generated with `as_bytes`, and find the sum over it with `.iter().sum()` but this results in a panic
2019-10-17 15:24:59	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-17 15:25:25	nerdypepper	is this because the size of a u8 is not enough for the sum?
2019-10-17 15:25:35	-->	samrg472_ (~samrg472@gateway/tor-sasl/samrg472) has joined ##rust
2019-10-17 15:25:56	Kinnison	Probably yes
2019-10-17 15:26:04	<--	samrg472 (~samrg472@gateway/tor-sasl/samrg472) has quit (Ping timeout: 260 seconds)
2019-10-17 15:26:06	nerdypepper	why does the sum of a [u8] have to be of type u8, is there any way i can specify the sum to be a, say u32?
2019-10-17 15:26:07	Kinnison	.iter().map(|b| b as usize).sum()
2019-10-17 15:26:09	Kinnison	might do better
2019-10-17 15:26:11	nerdypepper	ahhh
2019-10-17 15:26:16	Kinnison	(guessing)
2019-10-17 15:26:16	nerdypepper	gotcha
2019-10-17 15:26:33	nerdypepper	i was thinking along the lines of `.sum::<i32>()` or something
2019-10-17 15:27:41	nerdypepper	thanks again Kinnison :D
2019-10-17 15:27:50	Kinnison	No problem :D
2019-10-17 15:31:47	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 15:32:48	<--	_Vi (~vi@2001:470:7bd6:1000::2) has quit (Ping timeout: 245 seconds)
2019-10-17 15:33:11	-->	unreal (~unreal@unaffiliated/unreal) has joined ##rust
2019-10-17 15:38:31	oherrala	even better to use .iter().map(usize::from).sum() if possible
2019-10-17 15:39:04	oherrala	since "b as usize" can lead to funny bugs if someone someday changes what type b is
2019-10-17 15:39:46	Kinnison	true
2019-10-17 15:40:37	-->	narispo (~narispo@37.167.97.1) has joined ##rust
2019-10-17 15:41:28	<--	efm (~efm@vpn.tummy.com) has quit (Read error: Connection reset by peer)
2019-10-17 15:45:31	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 265 seconds)
2019-10-17 15:46:11	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-17 15:55:49	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-17 15:55:49	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-17 15:55:49	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-17 15:55:49	--	Channel ##rust: 578 nicks (2 ops, 0 voices, 576 normals)
2019-10-17 15:56:04	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-17 15:58:53	<--	EvilKhaosKat (~evilkhaos@134.17.27.127) has quit (Remote host closed the connection)
2019-10-17 16:05:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-17 16:05:57	<--	danieldg (~me@about/networking/240.0.0.0/danieldg) has quit (Ping timeout: 240 seconds)
2019-10-17 16:09:55	-->	danieldg (~me@about/networking/240.0.0.0/danieldg) has joined ##rust
2019-10-17 16:11:50	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-17 16:12:26	<--	narispo (~narispo@37.167.97.1) has quit (Read error: Connection reset by peer)
2019-10-17 16:12:48	-->	narispo (~narispo@89.227.232.106) has joined ##rust
2019-10-17 16:14:04	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 16:17:35	-->	efm (~efm@c-71-56-234-252.hsd1.co.comcast.net) has joined ##rust
2019-10-17 16:20:01	<--	OmniMancer (~Paul@101.100.137.239) has quit (Quit: Leaving.)
2019-10-17 16:21:02	-->	osa1_ (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-17 16:23:14	<--	efm (~efm@c-71-56-234-252.hsd1.co.comcast.net) has quit (Ping timeout: 276 seconds)
2019-10-17 16:25:16	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-17 16:25:33	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-17 16:29:05	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-17 16:30:18	<--	ytain (~ghfg@2607:f2c0:921d:7a00:bcb3:a156:de4f:3301) has quit (Ping timeout: 245 seconds)
2019-10-17 16:30:57	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Ping timeout: 240 seconds)
2019-10-17 16:31:22	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-17 16:33:03	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-17 16:33:21	-->	ytain (~ghfg@2607:f2c0:9220:2f00:ed18:befc:1f8a:d5cb) has joined ##rust
2019-10-17 16:34:48	tjis	is it possible to use a dedicated documentation file, rather than a documentation comment? such as for module-wide documentation
2019-10-17 16:35:25	Faux	Not afaik. You can put nearly nothing except comments in your mod.rs, though, which is common.
2019-10-17 16:35:50	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 16:36:20	Kinnison	https://github.com/rust-lang/rust/issues/44732
2019-10-17 16:36:25	Kinnison	tracking issue for external docs ^^^
2019-10-17 16:39:26	tjis	I'm just mildly annoyed by having to prepend each line with ///
2019-10-17 16:41:09	-->	brandly (~brandly@c-24-61-240-6.hsd1.ma.comcast.net) has joined ##rust
2019-10-17 16:47:23	<--	osa1_ (~osa1@haskell/developer/osa1) has quit (Ping timeout: 245 seconds)
2019-10-17 16:47:53	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-17 16:48:39	<--	pinkieval (~progval@pdpc/supporter/student/progval) has quit (Quit: We're here, we're queer, connection reset by peer.)
2019-10-17 16:49:02	-->	pinkieval (~progval@pdpc/supporter/student/progval) has joined ##rust
2019-10-17 16:49:28	-->	flaviodesousa (~flaviodes@213.187.85.4) has joined ##rust
2019-10-17 16:52:52	faern	/! if it's a module comment.
2019-10-17 16:52:59	faern	//! *
2019-10-17 16:53:29	faern	tjis: Or would you also want to lift out the comments for functions/methods/types out of the code? That would be very hard to follow IMO.
2019-10-17 16:53:58	faern	If you have a decent IDE it will just auto-fill the comment start when you hit enter if you are already on a comment line.
2019-10-17 16:55:08	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-17 16:55:56	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 16:59:42	-->	gkmngrgn (~gkmngrgn@2a02:8109:a180:1590:b85c:ed2f:d3af:899a) has joined ##rust
2019-10-17 17:01:35	<--	gkmngrgn (~gkmngrgn@2a02:8109:a180:1590:b85c:ed2f:d3af:899a) has quit (Client Quit)
2019-10-17 17:07:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-17 17:08:38	-->	AbedB_ (~AbedBhuty@bzq-79-182-93-240.red.bezeqint.net) has joined ##rust
2019-10-17 17:08:43	-->	jenny-m (~jdm-@CPE688f2e0836e3-CM688f2e0836e0.cpe.net.cable.rogers.com) has joined ##rust
2019-10-17 17:10:19	-->	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has joined ##rust
2019-10-17 17:11:59	<--	AbedB__ (~AbedBhuty@bzq-79-182-102-149.red.bezeqint.net) has quit (Ping timeout: 276 seconds)
2019-10-17 17:12:30	<--	est31 (~quassel@gateway/tor-sasl/est31) has quit (Remote host closed the connection)
2019-10-17 17:13:11	-->	est31 (~quassel@gateway/tor-sasl/est31) has joined ##rust
2019-10-17 17:13:44	-->	daum (~daum@50-201-134-18-static.hfc.comcastbusiness.net) has joined ##rust
2019-10-17 17:14:30	--	c-c is now known as Cuckooo
2019-10-17 17:15:09	--	Cuckooo is now known as Cuckoo
2019-10-17 17:15:16	<--	Cuckoo (csmr@hilla.kapsi.fi) has quit (Disconnected by services)
2019-10-17 17:15:42	tjis	faern: no you're right, I meant ##!
2019-10-17 17:15:44	tjis	err
2019-10-17 17:15:46	tjis	/!
2019-10-17 17:15:48	tjis	///!
2019-10-17 17:15:50	tjis	goddammit
2019-10-17 17:15:51	Faux	////!!!!
2019-10-17 17:15:59	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 17:16:20	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-17 17:16:21	tjis	anyway, yes, module level comments which can easily be multiple paragraphs
2019-10-17 17:16:39	-->	gwillen (~gwillen@unaffiliated/gwillen) has joined ##rust
2019-10-17 17:16:47	daum	hi guys - i have a questoin on using hype in getting query string parameters, i tried let params: HashMap<_, _> = Url::parse(&req.uri().to_string()).unwrap().query_pairs().into_owned().collect(), but req.uri() isn't guaranteed to be a full url (often has /) any suggestions on how to get the params?  Not sure if this is appropriate channel to ask
2019-10-17 17:16:48	Faux	My IDE inserts the appropriate comment when you press return.
2019-10-17 17:20:20	-->	climbingturtle (~climbingt@c213-89-14-151.bredband.comhem.se) has joined ##rust
2019-10-17 17:24:08	tjis	daum: req.uri().query() gets you the query string itself, but as a string. there's other crates to do that though
2019-10-17 17:24:58	daum	tjis, any specific one you'd recommend?  just trying to get a couple of parameters for a specific use case where speed/performance is very important
2019-10-17 17:25:54	<--	ellcs (~mantel@212.12.60.67) has quit (Ping timeout: 246 seconds)
2019-10-17 17:25:55	<--	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2019-10-17 17:26:08	<--	rrooij (~rrooij@unaffiliated/rroij) has quit (Quit: WeeChat 2.6)
2019-10-17 17:27:30	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-17 17:27:30	<--	xsoultartar (~xsoultart@2001:268:c0a4:817:784f:8cc0:dd:6f62) has quit (Quit: Leaving)
2019-10-17 17:27:35	<--	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has quit (Ping timeout: 276 seconds)
2019-10-17 17:27:59	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Ping timeout: 268 seconds)
2019-10-17 17:29:02	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-10-17 17:29:06	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-17 17:33:07	tjis	I think any crate for query string parsing will do just fine and not where your speed concerns are likely going to be
2019-10-17 17:33:33	daum	thanks!
2019-10-17 17:36:48	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-17 17:38:13	-->	stephaneyfx (~stephaney@184.68.160.234) has joined ##rust
2019-10-17 17:45:39	-->	pepper_chico (~pepper_ch@gateway/tor-sasl/pepperchico/x-70212520) has joined ##rust
2019-10-17 17:46:02	<--	Remavas (Remavas@gateway/shell/xshellz/x-tnjqtzxbnyefjxtd) has quit (Ping timeout: 240 seconds)
2019-10-17 17:47:27	-->	Remavas (Remavas@gateway/shell/xshellz/x-hpbxjxofnqivytga) has joined ##rust
2019-10-17 17:49:38	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-17 17:51:00	-->	Lord_of_Life_ (~Lord@unaffiliated/lord-of-life/x-0885362) has joined ##rust
2019-10-18 08:05:45	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-18 08:05:45	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-18 08:05:45	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-18 08:05:45	--	Channel ##rust: 558 nicks (2 ops, 0 voices, 556 normals)
2019-10-18 08:06:01	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-18 08:06:36	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-10-18 08:07:12	-->	tsal (~tsal@i59F4AF25.versanet.de) has joined ##rust
2019-10-18 08:10:17	<--	tartarsauce (~xsoultart@133.91.253.129) has quit (Ping timeout: 240 seconds)
2019-10-18 08:11:42	<--	bitwinery (~bitwinery@c-73-37-18-139.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2019-10-18 08:14:28	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 08:17:42	<--	nickmass (~nickmass@nickmass.com) has quit (Quit: Quitting)
2019-10-18 08:19:11	-->	nickmass (~nickmass@nickmass.com) has joined ##rust
2019-10-18 08:19:24	-->	marusich (~marusich@unaffiliated/marusich) has joined ##rust
2019-10-18 08:22:31	-->	david2 (~david2@212-186-25-215.cable.dynamic.surfer.at) has joined ##rust
2019-10-18 08:26:53	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-18 08:31:13	-->	m0rphism (~m0rphism@149.172.82.115) has joined ##rust
2019-10-18 08:32:50	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-18 08:35:42	<--	rustacean (~whateverg@128.106.166.91) has quit (Ping timeout: 268 seconds)
2019-10-18 08:39:40	-->	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-10-18 08:39:51	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-10-18 08:42:07	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 08:42:33	-->	djapo (~archie@unaffiliated/djapo) has joined ##rust
2019-10-18 08:42:40	<--	SiegeLord (~SiegeLord@c-73-158-78-36.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2019-10-18 08:46:38	-->	CodesInChaos (~cic@unaffiliated/codesinchaos) has joined ##rust
2019-10-18 08:52:43	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-10-18 08:52:50	<--	baali (~baali@59.98.234.75) has quit (Ping timeout: 240 seconds)
2019-10-18 08:57:17	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Ping timeout: 268 seconds)
2019-10-18 08:58:17	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 246 seconds)
2019-10-18 08:59:44	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
2019-10-18 09:01:04	<--	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has quit (Read error: Connection reset by peer)
2019-10-18 09:02:50	<--	tsal (~tsal@i59F4AF25.versanet.de) has quit (Ping timeout: 240 seconds)
2019-10-18 09:02:58	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-10-18 09:03:21	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-18 09:04:21	-->	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has joined ##rust
2019-10-18 09:06:19	-->	tsal (~tsal@i59F5F2AE.versanet.de) has joined ##rust
2019-10-18 09:08:05	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 09:11:54	-->	zxq9 (~zxq9@FL1-119-244-161-173.okn.mesh.ad.jp) has joined ##rust
2019-10-18 09:13:33	<--	djapo (~archie@unaffiliated/djapo) has quit (Ping timeout: 250 seconds)
2019-10-18 09:20:18	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-18 09:26:21	-->	pedro4 (~pedro4@134.19.179.179) has joined ##rust
2019-10-18 09:27:30	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-18 09:35:10	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 09:36:10	-->	CodesInChaos_ (~cic@unaffiliated/codesinchaos) has joined ##rust
2019-10-18 09:38:02	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 265 seconds)
2019-10-18 09:39:59	<--	CodesInChaos (~cic@unaffiliated/codesinchaos) has quit (Ping timeout: 276 seconds)
2019-10-18 09:44:49	<--	t8 (~tommo@2a00:23c5:1284:fc00:e553:9ca:505b:9c6b) has quit (Quit: Konversation terminated!)
2019-10-18 09:48:28	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-18 09:54:43	-->	ionelmc (uid20175@python/site-packages/ionelmc) has joined ##rust
2019-10-18 09:56:50	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 10:02:43	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Read error: Connection reset by peer)
2019-10-18 10:03:02	-->	javashin (~javashin@unaffiliated/javashin) has joined ##rust
2019-10-18 10:03:27	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-18 10:03:57	<--	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has quit (Quit: Leaving)
2019-10-18 10:04:58	-->	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has joined ##rust
2019-10-18 10:09:26	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-18 10:12:29	-->	aLeSD (~aLeSD@139.47.115.104) has joined ##rust
2019-10-18 10:16:54	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 10:21:12	-->	finwevi (~quassel@2a01:e0a:157:80a0:216:3eff:fe5e:6c7b) has joined ##rust
2019-10-18 10:22:51	<--	Stanley00 (~Stanley00@unaffiliated/stanley00) has quit (Remote host closed the connection)
2019-10-18 10:26:32	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
2019-10-18 10:28:29	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-18 10:29:50	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Read error: Connection reset by peer)
2019-10-18 10:30:18	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-18 10:32:20	-->	jokoon (~jokoon@unaffiliated/jokoon) has joined ##rust
2019-10-18 10:33:01	-->	Stanley00 (~Stanley00@unaffiliated/stanley00) has joined ##rust
2019-10-18 10:34:06	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-18 10:36:25	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-18 10:41:49	<--	lovesegfault (~bemeurer@2600:1700:5f20:83e0::35) has quit (Quit: WeeChat 2.6)
2019-10-18 10:42:30	-->	samhh (~sam@90.240.224.84) has joined ##rust
2019-10-18 10:44:10	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 10:46:41	-->	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has joined ##rust
2019-10-18 10:46:56	<--	javashin (~javashin@unaffiliated/javashin) has quit (Remote host closed the connection)
2019-10-18 10:47:24	-->	ellcs (~mantel@212.12.60.67) has joined ##rust
2019-10-18 11:03:05	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-18 11:08:31	-->	Ichorio (~Ichorio@2001:16b8:57c4:6f00:34fc:fd62:aa7d:f0b0) has joined ##rust
2019-10-18 11:09:49	<--	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has quit (Quit: ZNC 1.6.1 - http://znc.in)
2019-10-18 11:10:44	-->	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has joined ##rust
2019-10-18 11:13:01	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-10-18 11:20:05	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Remote host closed the connection)
2019-10-18 11:21:32	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-18 11:27:48	<--	murarth (murarth@gateway/vpn/privateinternetaccess/murarth) has quit (Ping timeout: 245 seconds)
2019-10-18 11:30:50	-->	setpill (~setpill@unaffiliated/setpill) has joined ##rust
2019-10-18 11:32:15	setpill	So I have this application, written in rust, that keeps erroring out with a "Too many open files" error.
2019-10-18 11:33:14	Kinnison	Does your system have a very low max-open-files setting, or perhaps you're leaking file handles
2019-10-18 11:33:17	Kinnison	Is this code we can see?
2019-10-18 11:33:21	<--	flaviodesousa (~flaviodes@213.187.85.4) has quit (Quit: KVIrc 4.9.3 Aria http://www.kvirc.net/)
2019-10-18 11:33:21	setpill	Even after raising the limits in /etc/sysctl.conf and /etc/security/limits.conf and rebooting
2019-10-18 11:33:55	setpill	Kinnison: sure, it's open source, I didn't write it, I'm just trying to get it working (:
2019-10-18 11:33:59	setpill	https://github.com/Blockstream/electrs/
2019-10-18 11:34:53	j`ey	https://github.com/rust-lang/rust/issues/47955 could be this
2019-10-18 11:34:58	j`ey	apparently there's a bug in glibc
2019-10-18 11:35:24	setpill	`cat /proc/sys/fs/file-nr` gives "2912 0 500000"
2019-10-18 11:35:26	Kinnison	Interesting
2019-10-18 11:35:30	setpill	j`ey: would that still apply after rebooting?
2019-10-18 11:35:40	j`ey	found from https://www.reddit.com/r/rust/comments/az4xu0/production_rust_help_too_many_open_files_os_error/
2019-10-18 11:35:52	j`ey	setpill: does the error happen immediately?
2019-10-18 11:36:01	setpill	yes
2019-10-18 11:36:06	setpill	pretty much
2019-10-18 11:36:36	setpill	I can disable the service file and start it manually to double check, but I checked it a few minutes after reboot and it was already in a restart loop for some time
2019-10-18 11:39:29	setpill	disabled service, rebooted, manually started service -> instant fail
2019-10-18 11:39:43	setpill	give me a min and I can provide a trace
2019-10-18 11:40:02	setpill	(running with RUST_BACKTRACE=full)
2019-10-18 11:42:33	oherrala	how many network connections it's doing?
2019-10-18 11:42:45	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
2019-10-18 11:43:50	<--	timClicks (~timclicks@115.69.172.167) has quit (Remote host closed the connection)
2019-10-18 11:44:06	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-18 11:49:26	setpill	https://gist.github.com/setpill/2dc0eacd6c3bd05ee3d1e89f78eb97a6 trace
2019-10-18 11:51:27	Windfisch	..
2019-10-18 12:09:13	<--	bravoslo (~bravoslo@89-212-162-157.static.t-2.net) has quit (Quit: Leaving)
2019-10-18 12:11:16	<--	david2 (~david2@212-186-25-215.cable.dynamic.surfer.at) has quit (Quit: WeeChat 2.6)
2019-10-18 12:11:38	-->	david2 (~david2@212-186-25-215.cable.dynamic.surfer.at) has joined ##rust
2019-10-18 12:15:52	setpill	Ok so noob question, but how do I convince rust to import/build/compile/install/whatever the libc crate?
2019-10-18 12:16:13	setpill	Want to try out this snippet https://gist.github.com/miquels/c47316f7b19a0af3d9927bafef94de35 on a test system.
2019-10-18 12:16:31	Lumpio-	You add it to your Cargo.toml file's [dependencies] section
2019-10-18 12:16:32	setpill	But getting a "error[E0432]: unresolved import `libc`"
2019-10-18 12:16:45	Xatenev	setpill, https://doc.rust-lang.org/nomicon/ffi.html
2019-10-18 12:17:20	setpill	Huh, so I need to create a package to compile a script?
2019-10-18 12:17:25	Lumpio-	A script?
2019-10-18 12:17:31	setpill	Well. Piece of code.
2019-10-18 12:17:44	Lumpio-	Well it's also possible to donwload the libc crate source code manually and build it manually
2019-10-18 12:17:53	j`ey	it's the easiest way to use a crate
2019-10-18 12:17:56	Lumpio-	But who wants to manage dependencies by hand?
2019-10-18 12:18:10	j`ey	'cargo new test-foo' and youre good to go
2019-10-18 12:18:12	Lumpio-	"Creating a package" is one command - cargo new --bin myprogram
2019-10-18 12:19:31	Xatenev	--bin isnt required anymore
2019-10-18 12:19:34	Xatenev	just new is enough :]
2019-10-18 12:19:52	Lumpio-	Ain't nobody got no time to memorize defaults when they change
2019-10-18 12:19:55	Xatenev	:P
2019-10-18 12:19:56	setpill	> edition = "2018"
2019-10-18 12:19:58	setpill	wat
2019-10-18 12:20:11	Lumpio-	That's how Rust handles breaking changes in the standard library/compiler
2019-10-18 12:20:18	setpill	oic
2019-10-18 12:20:24	Lumpio-	Old crates with no edition setting are "editing 2015"
2019-10-18 12:20:38	Lumpio-	edition, even
2019-10-18 12:24:09	setpill	Hrm.
2019-10-18 12:34:14	setpill	Well, it doesn't *seem* to be the libc issue.
2019-10-18 12:50:27	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 13:00:23	<--	jtdowney (~jtdowney@unaffiliated/jtdowney) has quit (Quit: Bye)
2019-10-18 13:00:51	-->	zorton (~zorton@unaffiliated/zorton) has joined ##rust
2019-10-18 13:01:00	-->	jtdowney (~jtdowney@unaffiliated/jtdowney) has joined ##rust
2019-10-18 13:03:01	Lumpio-	setpill: Do you get an error message..?
2019-10-18 13:03:18	setpill	Lumpio-: I posted my trace earlier
2019-10-18 13:03:43	zorton	https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=8fcd3103aadc52f4b84536b8a6242c9a
2019-10-18 13:03:49	zorton	seems ugly, cleaner method?
2019-10-18 13:04:00	setpill	Lumpio-: thread 'main' panicked at 'failed to open RocksDB: Error { message: "IO error: While open a file for appending: /home/electrs/mainnet/newin
2019-10-18 13:04:09	Lumpio-	oh
2019-10-18 13:04:12	setpill	Oh
2019-10-18 13:04:14	Lumpio-	I thought you were having issues compiling that libc thing
2019-10-18 13:04:17	setpill	Seems like the error was truncated
2019-10-18 13:04:33	setpill	Ah yeah I managed to do that, thanks for the pointers
2019-10-18 13:04:43	-->	IanWizard-Cloud (uid1815@gateway/web/irccloud.com/x-ftczoylcogfrxvke) has joined ##rust
2019-10-18 13:07:04	Lumpio-	The trace doesn't show "too many open files" yeah
2019-10-18 13:08:58	-->	lompik (~lompik@unaffiliated/lompik) has joined ##rust
2019-10-18 13:09:30	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-18 13:10:00	setpill	Lumpio-: does now
2019-10-18 13:10:03	setpill	it was cut off, my bad
2019-10-18 13:10:17	setpill	https://gist.github.com/setpill/2dc0eacd6c3bd05ee3d1e89f78eb97a6#file-gistfile1-txt-L19
2019-10-18 13:12:39	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-18 13:14:47	Lumpio-	Wonder what it's doing if it needs *that* many files
2019-10-18 13:14:57	Lumpio-	Since it's Linux you can just change the limits with system settings if need be
2019-10-18 13:15:07	Lumpio-	It's not reaaaally the program's job to change it I suppose
2019-10-18 13:15:13	setpill	That's the point, I already did
2019-10-18 13:15:24	setpill	This is after a fresh reboot, the first thing that happens.
2019-10-18 13:15:35	setpill	Well, there's other processes doing things
2019-10-18 13:16:00	setpill	But I've upped the per-user file descriptor limit to 100k and the system-wide one to 500k
2019-10-18 13:16:15	setpill	So I don't *think* either is running out for that process.
2019-10-18 13:16:19	setpill	I hope.
2019-10-18 13:16:40	la_mettrie	is it typical that since we are not using global variables, the main function is mostly for initialisation and the most important function where program's main loop resides is some other function?
2019-10-18 13:17:00	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 13:17:12	voker57	yes
2019-10-18 13:17:26	la_mettrie	okely-dokely...
2019-10-18 13:21:32	Moongoodgirl	…I mean, why wouldn't you put that in `main()`?
2019-10-18 13:22:10	la_mettrie	if the most fundamental variables are global i haven't encountered any difficulties in doing so
2019-10-18 13:22:18	Moongoodgirl	…actually, this seems orthogonal. Even if you /were/ using global variables, you could still have main() be mostly for initialization…or you could put the main event loop in main()
2019-10-18 13:24:40	<--	jokoon (~jokoon@unaffiliated/jokoon) has left ##rust ("Leaving")
2019-10-18 13:24:53	<--	Ichorio (~Ichorio@2001:16b8:57c4:6f00:34fc:fd62:aa7d:f0b0) has quit (Ping timeout: 250 seconds)
2019-10-18 13:25:50	Moongoodgirl	setpill: Did you already try running it in a debugger with a breakpoint on the panic, and running lsof on it when it gets to that point?
2019-10-18 13:26:18	Moongoodgirl	(xy: seeing exactly what it has open when it tries and fails to open another file)
2019-10-18 13:26:58	setpill	Moongoodgirl: nope, I have yet to figure out how that works. New to rust.
2019-10-18 13:27:29	Moongoodgirl	setpill: Are you familiar with debuggers in general?
2019-10-18 13:27:34	setpill	Nope :)
2019-10-18 13:28:48	setpill	The system this runs on doesn't have any rust tooling on it - there's a separate build system that compiles the rust code into a binary which is then installed on the system that runs it.
2019-10-18 13:29:22	setpill	Not exactly sure how I would go about debugging in this situation.
2019-10-18 13:29:34	j`ey	you dont need rust tools, you need gdb
2019-10-18 13:29:37	<--	samhh (~sam@90.240.224.84) has quit (Ping timeout: 240 seconds)
2019-10-18 13:29:42	j`ey	cant you run it on the build machine too?
2019-10-18 13:30:03	setpill	Well
2019-10-18 13:30:05	setpill	No.
2019-10-18 13:30:17	setpill	Let me check how many hundreds of TBs this db is currently taking up
2019-10-18 13:30:22	setpill	Er
2019-10-18 13:30:24	setpill	GBs
2019-10-18 13:30:29	la_mettrie	gdb serves fine as the primary debugger when programming with rust?
2019-10-18 13:30:58	j`ey	yes
2019-10-18 13:31:00	carado	it's what i use
2019-10-18 13:31:17	j`ey	setpill: do you need the full db to test?
2019-10-18 13:31:30	setpill	j`ey: it ran fine before
2019-10-18 13:31:48	liiwi	there's always https://www.onlinegdb.com ..
2019-10-18 13:32:06	setpill	Only now that it's done adding blocks and started indexing them there's this issue
2019-10-18 13:32:13	j`ey	setpill: before what?
2019-10-18 13:33:08	j`ey	oh, before the db was populated
2019-10-18 13:34:21	Moongoodgirl	…do you not have a separate development environment in which you can build, run, and debug this? ._.
2019-10-18 13:34:58	setpill	Moongoodgirl: I am not developing this...
2019-10-18 13:35:04	setpill	Just trying to run it.
2019-10-18 13:35:35	setpill	Only now that I can't, am I looking further into it.
2019-10-18 13:35:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-18 13:36:32	setpill	The db dir for electrs is 338G, and that is on top of bitcoind's 260G db.
2019-10-18 13:36:41	j`ey	you could also try running lsof in a loop or something and write the results out
2019-10-18 13:37:01	Moongoodgirl	…yeah, that might be good enough
2019-10-18 13:37:40	setpill	I looked at the trace and it has 3 "opening DB" lines, crashing after the third
2019-10-18 13:38:36	Moongoodgirl	I'm assuming there're potentially many file descriptor allocations that we're not seeing there
2019-10-18 13:38:45	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-18 13:38:45	Moongoodgirl	you don't get EMFILE from opening three files
2019-10-18 13:39:01	Moongoodgirl	…four, counting that socket
2019-10-18 13:39:25	-->	baali (~baali@59.98.207.62) has joined ##rust
2019-10-18 13:39:48	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Remote host closed the connection)
2019-10-18 13:40:37	setpill	Running `ls -la $FOLDER | grep -e '^-' | wc -l` gives respectively 2005, 1008 and 6555
2019-10-18 13:41:35	setpill	Running `ulimit -{,H,S}n` as the user the service is executed as gives '100000' in all cases
2019-10-18 13:43:26	Moongoodgirl	okay but we want to investigate exactly what it has open
2019-10-18 13:43:28	Moongoodgirl	hence lsof
2019-10-18 13:43:55	setpill	Yep. Working on that. Just thought I'd share my findings so far.
2019-10-18 13:46:28	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-18 13:47:29	Moongoodgirl	Oh okay :)
2019-10-18 13:47:30	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 13:57:02	<--	exarkun (~exarkun@181.138.239.35.bc.googleusercontent.com) has quit (Remote host closed the connection)
2019-10-18 13:57:52	<--	IanWizard-Cloud (uid1815@gateway/web/irccloud.com/x-ftczoylcogfrxvke) has quit
2019-10-18 13:58:17	-->	IanWizard-Cloud (sid1815@gateway/web/irccloud.com/x-xdjexgcxxttgliii) has joined ##rust
2019-10-18 14:01:24	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-18 14:03:56	setpill	Is there a simple oneliner to run `lsof -u electrs | wc -l` in rust? :x
2019-10-18 14:05:16	Faux	Heh, unlikely. You can walk /proc and see how many /proc/*/fd/* files you can access, which is close to what that is doing.
2019-10-18 14:05:48	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-18 14:06:03	setpill	T_T
2019-10-18 14:06:27	Faux	I mean, you could just shell out to lsof.
2019-10-18 14:06:38	setpill	That's what I'm asking...
2019-10-18 14:06:58	Faux	If that's what you want, some googlin' should be pretty easy.
2019-10-18 14:07:09	setpill	Well, I tried that first, of course.
2019-10-18 14:07:25	Faux	"run subprocess in rust and collect output" didn't return anything?
2019-10-18 14:07:59	setpill	I got stuck on how to pipe stdout from one program to stdin of another
2019-10-18 14:08:28	IanWizard-Cloud	I wonder if there's a better way to do it with calls to the kernel?  I've always found shell commands embedded in compiled languages to feel very "hacky".  Maybe that's just me though.
2019-10-18 14:08:55	Faux	You don't need to do the piping in shell, or you can just run a shell (sh -c '').
2019-10-18 14:09:15	Faux	IanWizard-Cloud: The problem is that lsof literally just opens files in /proc. Is lsof available as a library? No.
2019-10-18 14:09:16	M-ou-se	`wc -l` sounds pretty easy to do in rust :P
2019-10-18 14:09:34	M-ou-se	you can just run `lsof -u electrs` and count newlines in rust. no piping necessary
2019-10-18 14:10:45	Moongoodgirl	Doesn't lsof just poke through /proc?
2019-10-18 14:11:19	M-ou-se	Moongoodgirl: yes
2019-10-18 14:11:34	Moongoodgirl	…anyway, you don't need to invoke it from Rust; just run it in a loop in a shell while Electra is running
2019-10-18 14:12:44	Faux	She might want to run it before various steps, to "profile" where the problem is happening, which would be useful.
2019-10-18 14:13:44	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 14:14:44	setpill	Yes I'm trying to insert this lsof call at specific parts of the process so I can see what the lsof state was at the time a certain piece of code was executed.
2019-10-18 14:15:25	setpill	Also too much of a rust noob to start considering reimplementing lsof in rust (:
2019-10-18 14:16:51	<--	airwind (~belovent@cr-01.anx09.lju.si.anexia-it.com) has quit (Quit: airwind)
2019-10-18 14:17:38	-->	Nahual (~Nahual@unaffiliated/nahual) has joined ##rust
2019-10-18 14:17:50	<--	designwish (~designwis@51.ip-51-68-136.eu) has quit (Quit: ZNC - http://znc.in)
2019-10-18 14:18:20	<--	francisv (123080@vetur.ifi.uio.no) has quit (Read error: Connection reset by peer)
2019-10-18 14:18:27	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-18 14:21:21	-->	francisv (123080@vetur.ifi.uio.no) has joined ##rust
2019-10-18 14:22:56	<--	the_bugyi_man (~bryan@pool-173-71-68-161.cmdnnj.fios.verizon.net) has quit (Quit: WeeChat 2.5)
2019-10-18 14:23:21	-->	the_bugyi_man (~bryan@pool-173-71-68-161.cmdnnj.fios.verizon.net) has joined ##rust
2019-10-18 14:27:02	-->	designwish (~designwis@51.ip-51-68-136.eu) has joined ##rust
2019-10-18 14:27:32	-->	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has joined ##rust
2019-10-18 14:31:08	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-18 14:31:25	<--	meandi_2 (~meandi@dyndsl-178-142-251-086.ewe-ip-backbone.de) has quit (Ping timeout: 265 seconds)
2019-10-18 14:32:11	-->	cseder (~cseder@62.141-0-116.customer.lyse.net) has joined ##rust
2019-10-18 14:32:53	 *	Moongoodgirl pokes around.
2019-10-18 14:33:15	Faux	I rewrote the netlink parts (from ss) in rust but that is not what you're after here.
2019-10-18 14:35:06	Moongoodgirl	The part that we care about is pretty simple. Just list /proc/self/fd; for each file, call symlink_metadata() and fs::read_link() and save all the return values
2019-10-18 14:35:42	Moongoodgirl	lsof has a /lot/ of functionality, but we only need a very small subset
2019-10-18 14:37:52	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Ping timeout: 264 seconds)
2019-10-18 14:38:13	<--	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has quit (Ping timeout: 245 seconds)
2019-10-18 14:38:14	<--	llorllale (~llorllale@CPEac202e24ff83-CMac202e24ff80.cpe.net.fido.ca) has quit (Quit: WeeChat 1.9.1)
2019-10-18 14:38:49	Faux	One liner competition?
2019-10-18 14:40:25	Moongoodgirl	Well, in the interest of not solving somecreature's problem for them…
2019-10-18 14:40:31	-->	llorllale (~llorllale@CPEac202e24ff83-CMac202e24ff80.cpe.net.fido.ca) has joined ##rust
2019-10-18 14:40:34	-->	ytain (~ghfg@2607:f2c0:9223:9300:b02f:cad2:1710:9bd6) has joined ##rust
2019-10-18 14:40:35	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 14:41:59	Faux	evalr ok no I give up: std::fs::read_dir("/proc").unwrap().filter_map(|r| r.ok()).filter(|e| e.path().is_dir()).map(|e| std::fs::read_dir(e.path()).unwrap().map(|r| r.unwrap()).map(|e
2019-10-18 14:43:21	<--	hexfive (~hexfive@50.35.80.237) has quit (Quit: WeeChat 2.6)
2019-10-18 14:44:51	-->	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has joined ##rust
2019-10-18 14:45:26	Moongoodgirl	yeah
2019-10-18 14:45:35	Moongoodgirl	It'll be about 6..12 lines, and that's okay :P
2019-10-18 14:45:48	Moongoodgirl	trying to golf it will get you unreadable
2019-10-18 14:46:15	Faux	std::fs::read_dir("/proc") .unwrap() .filter_map(|r| r.ok()) .filter(|e| e.path().is_dir()) .filter_map(|e| std::fs::read_dir(e.path()).ok()) .flatten() .filter_map(|r| r.ok()) .filter(|e| e.path().symlink_metadata().is_ok()) .count();
2019-10-18 14:46:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-18 14:47:05	Faux	It gives a different number to lsof, who knows.
2019-10-18 14:47:29	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-18 14:47:39	Faux	https://quad.pe/e/C6N5GoJPd6.png intellij loses track at the flatten() unfortunately.
2019-10-18 14:50:50	-->	meandi (~meandi@dyndsl-178-142-253-254.ewe-ip-backbone.de) has joined ##rust
2019-10-18 14:55:21	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 14:56:04	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 265 seconds)
2019-10-18 14:56:08	-->	tmager (~Thunderbi@146.115.18.74) has joined ##rust
2019-10-18 15:00:12	<--	designwish (~designwis@51.ip-51-68-136.eu) has quit (Quit: ZNC - https://znc.in)
2019-10-18 15:03:20	<--	slomo (~slomo@unaffiliated/slomo) has quit (Quit: Leaving)
2019-10-18 15:03:24	<--	braydonf (~braydon@gateway/tor-sasl/braydonf) has quit (Remote host closed the connection)
2019-10-18 15:04:11	-->	braydonf (~braydon@gateway/tor-sasl/braydonf) has joined ##rust
2019-10-18 15:04:12	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Ping timeout: 268 seconds)
2019-10-18 15:04:30	-->	slomo (~slomo@unaffiliated/slomo) has joined ##rust
2019-10-18 15:06:19	noracodes	Coming to you live from Rust Belt Rust
2019-10-18 15:07:32	-->	AbedB (~AbedBhuty@bzq-109-66-2-63.red.bezeqint.net) has joined ##rust
2019-10-18 15:09:43	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-18 15:11:25	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-18 15:11:56	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-18 15:12:00	-->	designwish (~designwis@51.ip-51-68-136.eu) has joined ##rust
2019-10-18 15:15:40	Moongoodgirl	Faux: because you're counting…`/proc/*/*`? I think?
2019-10-18 15:15:51	Moongoodgirl	instead of /proc/self/fd/*
2019-10-18 15:16:18	Moongoodgirl	https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=02abb74c6c58940efe7494378d09f77f
2019-10-18 15:16:28	Moongoodgirl	this gives you the actual list
2019-10-18 15:17:17	Moongoodgirl	actually, you may even want to drop the metadata
2019-10-18 15:17:28	Moongoodgirl	really we're just interested in the symlink target
2019-10-18 15:21:01	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 15:21:18	Faux	Moongoodgirl: Heh, yeah.
2019-10-18 15:23:12	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-18 15:27:09	-->	samhh (~sam@90.240.224.84) has joined ##rust
2019-10-18 15:31:48	<--	samhh (~sam@90.240.224.84) has quit (Client Quit)
2019-10-18 15:31:59	setpill	Haven't figured it out yet (somehow my pipelines got broken) but gotta head off for now. Appreciate the help, all :)
2019-10-18 15:32:43	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Quit: osa1)
2019-10-18 15:32:50	<--	setpill (~setpill@unaffiliated/setpill) has quit (Quit: o/)
2019-10-18 15:33:02	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-18 15:35:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-18 15:39:18	-->	exarkun (~exarkun@181.138.239.35.bc.googleusercontent.com) has joined ##rust
2019-10-18 15:44:11	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 15:45:07	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-18 15:46:16	<--	tmager (~Thunderbi@146.115.18.74) has quit (Remote host closed the connection)
2019-10-18 15:46:33	-->	tmager (~Thunderbi@96.78.200.121) has joined ##rust
2019-10-18 15:49:43	-->	LunarJetman (LunarJetma@5ec1bc5a.skybroadband.com) has joined ##rust
2019-10-18 15:51:04	<--	baali (~baali@59.98.207.62) has quit (Ping timeout: 268 seconds)
2019-10-18 16:00:56	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-18 16:05:45	-->	baali (~baali@59.98.235.240) has joined ##rust
2019-10-18 16:09:46	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 16:13:15	<--	the_bugyi_man (~bryan@pool-173-71-68-161.cmdnnj.fios.verizon.net) has quit (Quit: WeeChat 2.5)
2019-10-18 16:14:25	-->	jenny-m (~jdm-@69-196-166-55.dsl.teksavvy.com) has joined ##rust
2019-10-18 16:19:00	-->	the_bugyi_man (~bryan@pool-173-71-68-161.cmdnnj.fios.verizon.net) has joined ##rust
2019-10-18 16:19:44	<--	stzsch (~no@2804:14d:4cd1:823f:5604:a6ff:fe8e:d858) has quit (Ping timeout: 276 seconds)
2019-10-18 16:22:27	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 246 seconds)
2019-10-18 16:26:17	-->	kri404 (~kri404@90.199.234.48) has joined ##rust
2019-10-18 16:30:12	-->	dmc (~dmc@archlinux/trusteduser/polyzen) has joined ##rust
2019-10-18 16:31:35	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-18 16:34:47	--	cseder is now known as cseder_away
2019-10-18 16:36:50	<--	ellcs (~mantel@212.12.60.67) has quit (Ping timeout: 240 seconds)
2019-10-18 16:45:52	<--	baali (~baali@59.98.235.240) has quit (Quit: Leaving.)
2019-10-18 16:46:21	-->	baali (~baali@59.98.235.240) has joined ##rust
2019-10-18 16:46:27	<--	baali (~baali@59.98.235.240) has quit (Client Quit)
2019-10-18 16:48:25	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-18 16:51:44	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-21 09:25:20	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-21 09:25:20	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-21 09:25:20	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-21 09:25:20	--	Channel ##rust: 556 nicks (2 ops, 0 voices, 554 normals)
2019-10-21 09:25:35	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-21 09:28:33	<--	Red15 (~red15@unaffiliated/red15) has quit (Quit: WeeChat 1.9.1)
2019-10-21 09:28:44	-->	Red15 (~red15@unaffiliated/red15) has joined ##rust
2019-10-21 09:30:12	<--	Red15 (~red15@unaffiliated/red15) has quit (Client Quit)
2019-10-21 09:32:28	<--	zofrex (~zofrex@unaffiliated/zofrex) has quit (Read error: Connection reset by peer)
2019-10-21 09:33:07	-->	zofrex (~zofrex@unaffiliated/zofrex) has joined ##rust
2019-10-21 09:33:53	-->	Red15 (~red15@unaffiliated/red15) has joined ##rust
2019-10-21 09:39:01	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-10-21 09:41:23	-->	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-10-21 09:45:57	<--	xsoultartar (~xsoultart@133.91.253.129) has quit (Ping timeout: 240 seconds)
2019-10-21 09:50:16	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 09:51:18	<--	plluksie (~plluksie@89-75-127-15.dynamic.chello.pl) has quit (Ping timeout: 268 seconds)
2019-10-21 09:56:26	<--	xeno (~xeno@unaffiliated/xeno) has quit (Read error: Connection reset by peer)
2019-10-21 09:56:57	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-21 10:01:05	<--	xeno (~xeno@unaffiliated/xeno) has quit (Read error: Connection reset by peer)
2019-10-21 10:01:41	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-21 10:08:05	-->	dozn_ (~dozn@S01069050ca3c43c3.vs.shawcable.net) has joined ##rust
2019-10-21 10:10:57	<--	dozn (~dozn@S01069050ca3c43c3.vs.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-10-21 10:11:01	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
2019-10-21 10:12:04	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-21 10:12:15	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-21 10:14:59	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-21 10:16:11	<--	carado (~carado@2a01:e35:2ebf:3970:6ac:c692:c356:dc8c) has quit (Quit: Leaving)
2019-10-21 10:16:29	-->	carado (~carado@2a01:e35:2ebf:3970:6ac:c692:c356:dc8c) has joined ##rust
2019-10-21 10:16:44	-->	ellcs (~mantel@212.12.60.67) has joined ##rust
2019-10-21 10:18:42	vasilakisfil	hi I have this diesel model https://gist.github.com/vasilakisfil/ccc12827ca448d3405b2c9dae961cf19  and I want to create a trait out of it, with default impl because I have like 5+ models like it. The problem is, how can I generalize the use declarations.
2019-10-21 10:18:54	vasilakisfil	use declarations are not types, so how do I inject those ?
2019-10-21 10:19:58	liiwi	b
2019-10-21 10:20:00	liiwi	erp
2019-10-21 10:22:58	-->	pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined ##rust
2019-10-21 10:25:26	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 10:25:30	<--	lovesegfault (~bemeurer@2600:1700:5f20:83e0::35) has quit (Ping timeout: 246 seconds)
2019-10-21 10:26:32	<--	pie__ (~pie_@unaffiliated/pie-/x-0787662) has quit (Ping timeout: 246 seconds)
2019-10-21 10:30:20	ZirconiumX	vasilakisfil: The only way I can think of is a macro
2019-10-21 10:39:33	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-21 10:44:25	-->	Coldblackice_ (~c@unaffiliated/coldblackice) has joined ##rust
2019-10-21 10:45:17	-->	hexfive (~hexfive@50.35.80.237) has joined ##rust
2019-10-21 10:45:38	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 240 seconds)
2019-10-21 10:47:55	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 250 seconds)
2019-10-21 10:49:14	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-21 10:53:39	-->	multiproc (~mark@unaffiliated/multiproc) has joined ##rust
2019-10-21 10:54:47	-->	matthias_bgg (~mbgg@37.223.137.234) has joined ##rust
2019-10-21 10:55:57	-->	Mrbuck (~Mrbuck@ec2-34-195-230-118.compute-1.amazonaws.com) has joined ##rust
2019-10-21 10:56:26	Mrbuck	did we have discord bot connected here?
2019-10-21 10:56:41	j`ey	no
2019-10-21 10:57:09	Mrbuck	so you guys so lazy ?
2019-10-21 10:57:10	Mrbuck	:P
2019-10-21 10:57:12	Mrbuck	joke
2019-10-21 11:00:38	<--	simcop2387 (8MHIexBI@p3m/member/simcop2387) has quit (Quit: ZNC - http://znc.sourceforge.net)
2019-10-21 11:01:41	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 11:02:40	<--	designwish (~designwis@51.ip-51-68-136.eu) has quit (Read error: Connection reset by peer)
2019-10-21 11:05:24	Moongoodgirl	Mrbuck: we're lazy because we don't have a bridge to Discord in particular? O.o
2019-10-21 11:08:20	Mrbuck	Moongoodgirl: oh_k
2019-10-21 11:08:32	lavalike	these bridges are a scourge, please don't
2019-10-21 11:08:45	Moongoodgirl	…
2019-10-21 11:08:51	Moongoodgirl	That was clarification, not concession.
2019-10-21 11:09:28	Moongoodgirl	I didn't wanna, y'know, accidentally misrepresent what you were saying. :V
2019-10-21 11:09:35	lavalike	and mine an imploration
2019-10-21 11:10:00	-->	designwish (~designwis@51.ip-51-68-136.eu) has joined ##rust
2019-10-21 11:11:46	-->	simcop2387 (~simcop238@p3m/member/simcop2387) has joined ##rust
2019-10-21 11:12:21	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-10-21 11:28:02	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-21 11:31:52	-->	thequux (~thequux@ptr-fzs5rlfrt77gc0ldk6i.18120a2.ip6.access.telenet.be) has joined ##rust
2019-10-21 11:37:00	<--	lawlesseel (~lawlessee@gateway/tor-sasl/lawlesseel) has quit (Ping timeout: 260 seconds)
2019-10-21 11:39:45	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 11:40:11	<--	Mrbuck (~Mrbuck@ec2-34-195-230-118.compute-1.amazonaws.com) has quit (Remote host closed the connection)
2019-10-21 11:43:12	-->	ddima (~d-goldin@mail.moulodi.com) has joined ##rust
2019-10-21 11:45:36	-->	Stanley|00 (~Stanley00@unaffiliated/stanley00) has joined ##rust
2019-10-21 11:46:37	<--	Stanley00 (~Stanley00@unaffiliated/stanley00) has quit (Ping timeout: 268 seconds)
2019-10-21 11:57:41	<--	narispo (~narispo@2a01:e0a:2a2:1590:8913:b676:50a4:f3f7) has quit (Ping timeout: 276 seconds)
2019-10-21 11:59:43	tjis	So I notice I can't use Arc<RefCell> cause refcell does not implement sync. What I actually want to do is build a hashmap in a bunch of futures, finally returning it as a result. I know that at any point there'll be only one function accessing the hashmap, and it is fine if concurrent access panics (which I thought refcell would give me). What should i be doing?
2019-10-21 12:00:37	tjis	I guess I could use Mutex instead
2019-10-21 12:00:47	Yaniel	or RwLock?
2019-10-21 12:02:02	Yaniel	so Arc<RwLock<HashMap<T,U>>>
2019-10-21 12:02:22	tjis	or rwlock but there's no concurrent access going to happen so the extra features rwlock gives don't actually matter
2019-10-21 12:04:10	-->	justsomeguy (~justsomeg@unaffiliated/--/x-3805311) has joined ##rust
2019-10-21 12:05:20	vorner	Mutex would be fine (locking an uncontended mutex is very fast). Or, there's AtomicRefCell, which is what you describe.
2019-10-21 12:05:59	vorner	But I wonder, if you can guarantee that there won't be any concurrent accesses, do you actually *need* the Arc there? Won't you get away without it, using the right combinators or something?
2019-10-21 12:06:21	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-21 12:14:58	-->	ytain (~ghfg@2607:f2c0:94cc:f800:9487:e890:502c:1f2e) has joined ##rust
2019-10-21 12:14:59	<--	XVar (~XVar@unaffiliated/xvar) has quit (Ping timeout: 268 seconds)
2019-10-21 12:17:48	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 12:17:55	-->	fanta1 (~fanta1@p200300F76BC32F005D9AD5B2FA74FB88.dip0.t-ipconnect.de) has joined ##rust
2019-10-21 12:18:18	<--	justsomeguy (~justsomeg@unaffiliated/--/x-3805311) has left ##rust
2019-10-21 12:22:21	-->	narispo (~narispo@37.164.175.149) has joined ##rust
2019-10-21 12:35:16	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-21 12:40:26	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-21 12:49:12	<--	RayS (~raysl@sdf1.xen.prgmr.com) has quit (Quit: ZNC 1.7.3 - https://znc.in)
2019-10-21 12:49:34	-->	RayS (~raysl@sdf1.xen.prgmr.com) has joined ##rust
2019-10-21 12:51:30	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 12:52:32	-->	Mateon2 (~Thunderbi@unaffiliated/mateon1) has joined ##rust
2019-10-21 12:53:14	<--	Mateon1 (~Thunderbi@unaffiliated/mateon1) has quit (Ping timeout: 240 seconds)
2019-10-21 12:53:19	--	Mateon2 is now known as Mateon1
2019-10-21 13:00:35	<--	rople (rople@gateway/vpn/privateinternetaccess/rople) has quit (Ping timeout: 265 seconds)
2019-10-21 13:03:58	-->	XVar (~XVar@unaffiliated/xvar) has joined ##rust
2019-10-21 13:17:53	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-21 13:21:40	-->	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has joined ##rust
2019-10-21 13:29:16	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 13:29:35	-->	jose_neta (~anonymous@40.211.37.188.rev.vodafone.pt) has joined ##rust
2019-10-21 13:44:13	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-21 13:46:53	tjis	atomicrefcell looks very nice
2019-10-21 13:48:06	-->	phwalkr (~phwalkr@2001:1284:f013:5b1f:6931:4a15:8996:81e9) has joined ##rust
2019-10-21 13:49:44	tjis	vorner: My specific problem is that I got an FnMut closure that captured the hashmap. I can't move the hashmap out of the closure on last call cause there's no way for rust to know that it is indeed the last call
2019-10-21 13:54:52	<--	fanta1 (~fanta1@p200300F76BC32F005D9AD5B2FA74FB88.dip0.t-ipconnect.de) has quit (Quit: fanta1)
2019-10-21 13:54:53	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-21 13:56:21	vorner	You could somehow capture only &mut HashMap or pass it to each call of the closure, maybe.
2019-10-21 13:57:18	-->	fanta1 (~fanta1@p200300F76BC32F005D9AD5B2FA74FB88.dip0.t-ipconnect.de) has joined ##rust
2019-10-21 13:57:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-21 13:58:25	tjis	I'm working with tokio/futures, so lifetimes would be an issue
2019-10-21 14:10:10	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 14:16:57	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Quit: __gotcha)
2019-10-21 14:17:19	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-21 14:21:48	-->	Nahual (~Nahual@unaffiliated/nahual) has joined ##rust
2019-10-21 14:23:59	<--	L29Ah (~L29Ah@unaffiliated/l29ah) has left ##rust
2019-10-21 14:24:11	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Ping timeout: 246 seconds)
2019-10-21 14:31:58	-->	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has joined ##rust
2019-10-21 14:34:12	-->	L29Ah (~L29Ah@unaffiliated/l29ah) has joined ##rust
2019-10-21 14:37:09	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 250 seconds)
2019-10-21 14:38:03	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-21 14:39:08	-->	fsasm (~fsasm@62.178.93.7) has joined ##rust
2019-10-21 14:40:50	<--	L29Ah (~L29Ah@unaffiliated/l29ah) has left ##rust
2019-10-21 14:49:27	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 14:52:16	-->	tmager (~Thunderbi@146.115.18.74) has joined ##rust
2019-10-21 14:53:29	-->	p8m (~ident1@2604:2d80:5f81:e700::80) has joined ##rust
2019-10-21 14:54:29	<--	fsasm (~fsasm@62.178.93.7) has quit (Ping timeout: 250 seconds)
2019-10-21 14:55:02	<--	fanta1 (~fanta1@p200300F76BC32F005D9AD5B2FA74FB88.dip0.t-ipconnect.de) has quit (Quit: fanta1)
2019-10-21 15:02:53	-->	jbg (~jbg@cz.rf.net.nz) has joined ##rust
2019-10-21 15:03:57	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Ping timeout: 268 seconds)
2019-10-21 15:06:04	-->	lauromoura__ (~lauromour@2804:7f5:f380:4d43:f8dc:e6a:a6c1:795b) has joined ##rust
2019-10-21 15:07:02	-->	localhorse (uid18992@gateway/web/irccloud.com/x-isconqeutlwacdug) has joined ##rust
2019-10-21 15:09:20	<--	lauromoura_ (~lauromour@2804:7f5:f380:3fe:a014:e879:58be:2a69) has quit (Ping timeout: 246 seconds)
2019-10-21 15:09:30	-->	fsasm (~fsasm@62.178.93.7) has joined ##rust
2019-10-21 15:09:56	-->	foodoo (~foodoo@static.227.205.46.78.clients.your-server.de) has joined ##rust
2019-10-21 15:09:56	-->	Mrbuck (~Mrbuck@ec2-34-195-230-118.compute-1.amazonaws.com) has joined ##rust
2019-10-21 15:13:16	-->	DeltaHeavy (~DeltaHeav@unaffiliated/deltaheavy) has joined ##rust
2019-10-21 15:13:41	<--	phwalkr (~phwalkr@2001:1284:f013:5b1f:6931:4a15:8996:81e9) has quit (Quit: Leaving...)
2019-10-21 15:16:02	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-21 15:16:11	de-vri-es	I'm trying to get actions-rs/clippy-check (the github action) to work. I made a small test repository and added some warnings, but I don't see the annotations or the summary on github :[
2019-10-21 15:16:16	de-vri-es	test repo here: https://github.com/de-vri-es/test-clippy-check/pull/1
2019-10-21 15:17:17	de-vri-es	the workflow is pretty much identical to the example from https://github.com/actions-rs/clippy-check
2019-10-21 15:17:32	de-vri-es	did I do something wrong?
2019-10-21 15:22:26	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 240 seconds)
2019-10-21 15:22:47	<--	Mrbuck (~Mrbuck@ec2-34-195-230-118.compute-1.amazonaws.com) has quit (Remote host closed the connection)
2019-10-21 15:25:20	-->	zxq9 (~zxq9@FL1-119-244-161-173.okn.mesh.ad.jp) has joined ##rust
2019-10-21 15:29:22	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-21 15:30:15	-->	L29Ah (~L29Ah@unaffiliated/l29ah) has joined ##rust
2019-10-21 15:31:34	<--	noracodes (~quassel@qaul.net/dev/noracodes) has quit (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
2019-10-21 15:32:24	jbg	de-vri-es: did you sign up for the github actions public beta? :)
2019-10-21 15:32:33	de-vri-es	yeah :)
2019-10-21 15:32:47	de-vri-es	the action does run, and the output shows the warnings, but they don't appear as annotations
2019-10-21 15:32:56	jbg	ah i see
2019-10-21 15:34:16	de-vri-es	weird thing is, I also cloned the examples repository from actions-rs, and added some warnings there
2019-10-21 15:34:22	de-vri-es	in that fork, the annotations work
2019-10-21 15:34:54	-->	xsoultartar (~xsoultart@210.161.134.36) has joined ##rust
2019-10-21 15:36:12	-->	royal_screwup21 (3e1f7b01@gateway/web/cgi-irc/kiwiirc.com/ip.62.31.123.1) has joined ##rust
2019-10-21 15:38:27	nl3dee	hi all,
2019-10-21 15:39:02	<--	xsoultartar (~xsoultart@210.161.134.36) has quit (Client Quit)
2019-10-21 15:39:07	nl3dee	I can't find if it's possible to build a macro with a repeated pattern that contains some optional part (defined with `?`)
2019-10-21 15:39:12	nl3dee	https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=bf3191993f376473d2cefb68ad494c50
2019-10-21 15:39:29	nl3dee	any help would be appreciated :)
2019-10-21 15:41:50	nl3dee	I can call the pattern with the optional part directly, but I can't if it's part of the repetition
2019-10-21 15:42:13	nl3dee	I mean, it's called but the optional part is discarded
2019-10-21 15:42:41	nl3dee	or I get the error "attempted to repeat an expression containing no syntax variables matched as repeating at this depth"
2019-10-21 15:42:50	nl3dee	which I can't really understand :(
2019-10-21 15:46:13	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Remote host closed the connection)
2019-10-21 15:47:27	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-21 15:49:46	<--	syphar (~syphar@p200300C3FF13B501CDB716D2BA57EF3B.dip0.t-ipconnect.de) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-21 15:49:57	tjis	is there something like a hashmap for when you just got a handful of values and actually storing it as a hashmap is a bit overkill?
2019-10-21 15:50:12	tjis	like, I still want the guarantees that I don't have duplicate keys but it should probably store as a vec or something
2019-10-21 15:50:47	-->	flaviodesousa (~flaviodes@213.187.85.4) has joined ##rust
2019-10-21 15:51:06	jbg	a hashmap isn't exactly an obese structure, have you found that the memory usage is excessive for your application?
2019-10-21 15:51:17	tjis	no, I'm just prematurely optimizing
2019-10-21 15:51:40	jbg	must be nice to have so much time to kill ;)
2019-10-21 15:51:56	tjis	I.. don't...
2019-10-21 15:52:02	tjis	so I guess hashmap it is
2019-10-21 15:54:06	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-21 15:54:19	-->	turion (~turion@93.240.237.218) has joined ##rust
2019-10-21 15:58:13	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 268 seconds)
2019-10-21 16:00:30	the_bugyi_man	Hey all. I want to write some integration tests for this new CLI app I'm writing (https://github.com/bbugyi200/vshlog). I feel like the easiest way to do this would be to test `main()` directly. In Python I would just make main's signature be `main(argv=None)`, let `argv` default to `sys.argv` and then only actually send in arguments manually during testing. What is the rustic equivalent to this? Do I have to
2019-10-21 16:00:33	the_bugyi_man	write another function for `main()` to wrap (e.g. `run(argv)`)?
2019-10-21 16:02:29	danieldg	the_bugyi_man: yes
2019-10-21 16:02:48	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-21 16:03:02	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-21 16:03:07	the_bugyi_man	danieldg: Boo. :(
2019-10-21 16:03:07	danieldg	or have main() { let options = parse_args(); run(options) }
2019-10-21 16:03:27	danieldg	then just test run using an options struct that you build
2019-10-21 16:04:22	the_bugyi_man	danieldg: Ok. Thanks. I was hoping for a different way. I guess `main()` should have a very minimal body anyway, so this is probably the best way.
2019-10-21 16:05:03	danieldg	you could also test the actual application by running it as a command...
2019-10-21 16:05:04	the_bugyi_man	*anyway though
2019-10-21 16:05:38	jbg	yeah, i would probably just have the integration tests be out-of-process, and run the app as a command passing the necessary args in. seems much cleaner
2019-10-21 16:06:03	<--	narispo (~narispo@37.164.175.149) has quit (Ping timeout: 264 seconds)
2019-10-21 16:08:38	the_bugyi_man	@jbg @danieldg Yeah. Maybe. I really like how in my rust code so far all of the unit tests are right next to the code they test. Its like built-in documentation that you can't let go stale (otherwise the CI pipeline will fail). I would like this same benefit for the integration tests.
2019-10-21 16:09:17	danieldg	./yourapp --test foo_test
2019-10-21 16:10:10	danieldg	though that might be harder to do in reality, depening on the test
2019-10-21 16:12:21	the_bugyi_man	The more I think about it, the more I like the `run(argv)` option. I initialize logging inside of `main()` too and would like to leave that out of the integration tests. Using `run(argv)` gives me a good way to do that.
2019-10-21 16:13:14	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 240 seconds)
2019-10-21 16:13:32	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-10-21 16:14:10	<--	hussam (uid193284@gateway/web/irccloud.com/x-bsigupxdmqgfbwli) has quit
2019-10-21 16:19:49	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-21 16:20:57	<--	jose_neta (~anonymous@40.211.37.188.rev.vodafone.pt) has quit (Quit: jose_neta)
2019-10-21 16:23:18	-->	hussam (uid193284@gateway/web/irccloud.com/x-qmlafdflzlavaipe) has joined ##rust
2019-10-21 16:25:20	-->	baali (~baali@106.207.140.94) has joined ##rust
2019-10-21 16:26:30	-->	brool (~grendel@2600:1700:7d20:ae60:2c68:fddb:7f86:c16b) has joined ##rust
2019-10-21 16:27:28	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 16:27:29	-->	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined ##rust
2019-10-21 16:31:10	-->	narispo (~narispo@37.166.20.145) has joined ##rust
2019-10-21 16:37:00	<--	pedro4 (sid145515@gateway/web/irccloud.com/x-fezoboxkkcgnsvlq) has quit
2019-10-21 16:37:08	-->	federico1 (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-10-21 16:38:01	-->	pedro4 (~pedro4@194.187.251.155) has joined ##rust
2019-10-21 16:39:15	<--	mr64bit (~mr64bit@dynamic-acs-24-101-245-231.zoominternet.net) has quit (Quit: Bye.)
2019-10-21 16:39:31	-->	mr64bit (~mr64bit@dynamic-acs-24-101-245-231.zoominternet.net) has joined ##rust
2019-10-21 16:42:13	nl3dee	in case someone want the answer of my previous question: https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=8f81cacf4196403a186c91409254f11a
2019-10-21 16:42:25	nl3dee	seems like the optional argument have to be named
2019-10-21 16:42:57	-->	lompik (~lompik@unaffiliated/lompik) has joined ##rust
2019-10-21 16:44:02	<--	dowwie (~dowwie@unaffiliated/dowwie) has quit (Ping timeout: 240 seconds)
2019-10-21 16:44:13	-->	federico_ (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-10-21 16:47:17	<--	federico1 (~federico1@opensuse/member/Federico-Mena) has quit (Ping timeout: 240 seconds)
2019-10-21 16:53:26	delYsid	error-chain vs failure: I hear failure is destined to be standardized?  From my limited experience, I pretty much prefer error-chain though.  Are the two equivalent?  Should I invest the time to move to failure now?  Or are they going to coexist for the foreseeable future?
2019-10-21 16:53:48	delYsid	I kind of dont get failure when reading the docs, while the declarative nature of the rror_chain! macro is pretty appealing to me.
2019-10-21 16:54:05	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-10-21 16:57:25	<--	narispo (~narispo@37.166.20.145) has quit (Ping timeout: 265 seconds)
2019-10-21 17:00:58	<--	baali (~baali@106.207.140.94) has quit (Read error: Connection reset by peer)
2019-10-21 17:06:51	<--	efm (~efm@vpn.tummy.com) has quit (Quit: Konversation terminated!)
2019-10-21 17:06:55	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 17:09:31	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-10-21 17:10:01	dutchie	i should probably look into error handling more sophisticated than `type Result<T> = std::result::Result<T, Box<dyn Error>>`
2019-10-21 17:15:18	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Ping timeout: 245 seconds)
2019-10-21 17:26:25	-->	baali (~baali@106.207.140.94) has joined ##rust
2019-10-21 17:29:50	-->	jose_neta (~anonymous@a94-132-89-254.cpe.netcabo.pt) has joined ##rust
2019-10-21 17:31:01	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
2019-10-21 17:31:38	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-21 17:32:02	-->	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined ##rust
2019-10-21 17:32:12	-->	climbingturtle (~climbingt@c213-89-14-151.bredband.comhem.se) has joined ##rust
2019-10-21 17:33:31	<--	ytain (~ghfg@2607:f2c0:94cc:f800:9487:e890:502c:1f2e) has quit (Ping timeout: 250 seconds)
2019-10-21 17:36:07	-->	Lord_of_Life_ (~Lord@unaffiliated/lord-of-life/x-0885362) has joined ##rust
2019-10-21 17:37:03	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Ping timeout: 265 seconds)
2019-10-21 17:38:15	<--	Lord_of_Life_ (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Remote host closed the connection)
2019-10-21 17:39:57	-->	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has joined ##rust
2019-10-21 17:42:53	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-21 17:44:38	<--	Lord_of_Life (~Lord@unaffiliated/lord-of-life/x-0885362) has quit (Client Quit)
2019-10-21 17:44:59	<--	jose_neta (~anonymous@a94-132-89-254.cpe.netcabo.pt) has quit (Quit: jose_neta)
2019-10-21 17:50:17	-->	fanta1 (~fanta1@p200300F76BC32F001047B3926836E688.dip0.t-ipconnect.de) has joined ##rust
2019-10-21 17:52:18	<--	matthias_bgg (~mbgg@37.223.137.234) has quit (Ping timeout: 268 seconds)
2019-10-21 17:53:25	-->	t7 (~tommo@2a00:23c5:1284:fc00:1060:ff4d:42f9:1bcc) has joined ##rust
2019-10-21 17:53:32	<--	lord| (~solenodic@unaffiliated/solenodic) has quit (Ping timeout: 268 seconds)
2019-10-22 09:05:18	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-22 09:05:18	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-22 09:05:18	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-22 09:05:18	--	Channel ##rust: 559 nicks (2 ops, 0 voices, 557 normals)
2019-10-22 09:05:34	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-22 09:08:39	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-10-22 09:08:49	delYsid	OK, I am passing it to HashMap::insert, so thats probably one of those special cases
2019-10-22 09:09:25	mstruebing	fixed it by using the `rust` docker container from dockerhub instead of some predefined cargo github action
2019-10-22 09:09:26	Moongoodgirl	Ahh…yeah, I would expect type mismatches if the type of the HashMap isn't annotated or constrained somehow.
2019-10-22 09:09:44	Moongoodgirl	for example…
2019-10-22 09:10:38	Moongoodgirl	evalr: use std::collections::HashMap; fn foo() {} fn bar() {} let mut map = HashMap::new(); map.insert('f', foo); map.insert('b', bar);
2019-10-22 09:10:40	--	Notice(evalr): error[E0308]: mismatched types
2019-10-22 09:10:42	--	Notice(evalr): ~~~ Full output: https://play.rust-lang.org/?gist=4c2bd5c574843b717b89fb890489ec7f&version=stable&mode=debug
2019-10-22 09:11:14	Moongoodgirl	here the type of HashMap is inferred to be `HashMap<&'static str, _::foo>` because of the first insert()
2019-10-22 09:12:15	Moongoodgirl	evalr: use std::collections::HashMap; fn foo() {} fn bar() {} let mut map: HashMap<&'static str, fn()> = HashMap::new(); map.insert('f', foo); map.insert('b', bar);
2019-10-22 09:12:18	--	Notice(evalr): error[E0308]: mismatched types
2019-10-22 09:12:20	--	Notice(evalr): ~~~ Full output: https://play.rust-lang.org/?gist=454ac4ccc26749db93746b8e5384072e&version=stable&mode=debug
2019-10-22 09:12:38	Moongoodgirl	uh. those are chars, not strings
2019-10-22 09:12:44	Moongoodgirl	I know this language, I swear >.>
2019-10-22 09:12:54	Moongoodgirl	evalr: use std::collections::HashMap; fn foo() {} fn bar() {} let mut map: HashMap<char, fn()> = HashMap::new(); map.insert('f', foo); map.insert('b', bar);
2019-10-22 09:12:59	--	Notice(evalr): ()
2019-10-22 09:14:08	Moongoodgirl	If you return the map, it's also a non-issue (because you have to write the type of the map in the function signature, and of course you'll write `fn()` for the value type rather than any specific function type)
2019-10-22 09:18:24	delYsid	Strange, I return the map from a function, but I still get very weird mismatch errors if I dont use func as Func.
2019-10-22 09:18:37	delYsid	Anyway, its ok, only a minor thing.
2019-10-22 09:19:05	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 09:19:09	Moongoodgirl	That's odd. Can you post the code in question?
2019-10-22 09:19:41	delYsid	let me see.
2019-10-22 09:19:52	<--	neptunepink (~neptune@173-13-139-237-sfba.hfc.comcastbusiness.net) has quit (Ping timeout: 244 seconds)
2019-10-22 09:20:08	Moongoodgirl	evalr: use std::collections::HashMap; fn foo() {} fn bar() {} fn new() -> HashMap<char, fn()> { let mut map = HashMap::new(); map.insert('f', foo); map.insert('b', bar); map }
2019-10-22 09:20:11	--	Notice(evalr): error[E0308]: mismatched types
2019-10-22 09:20:12	--	Notice(evalr): ~~~ Full output: https://play.rust-lang.org/?gist=7bfb6bf52f9c06c061370544569b640d&version=stable&mode=debug
2019-10-22 09:20:33	delYsid	https://blind.guru/main.rs
2019-10-22 09:22:30	delYsid	If I write "wetter_orf_at as Handler" it builds.
2019-10-22 09:23:12	Moongoodgirl	I don't understand this inference
2019-10-22 09:24:07	Moongoodgirl	It seems pretty obvious to me that the type of the map is well-known because of the function's return type
2019-10-22 09:24:13	Moongoodgirl	and that should trigger coercions
2019-10-22 09:24:52	Moongoodgirl	It looks like, instead, the type is being inferred based on the first insert() call, and then it's conflicting with the type in the signature?
2019-10-22 09:24:53	Moongoodgirl	wtf
2019-10-22 09:25:08	Arnavion	Moongoodgirl: The type isn't known at the time of the .insert()
2019-10-22 09:25:21	Arnavion	Moongoodgirl: Insert an   if false { return map; }   before the .insert() and it'll work
2019-10-22 09:25:39	-->	neptunepink (~neptune@173-13-139-237-sfba.hfc.comcastbusiness.net) has joined ##rust
2019-10-22 09:25:55	Moongoodgirl	evalr: use std::collections::HashMap; fn foo() {} fn bar() {} fn new() -> HashMap<char, fn()> { let mut map = HashMap::new(); if false { return map } map.insert('f', foo); map.insert('b', bar); map }
2019-10-22 09:25:57	--	Notice(evalr): ()
2019-10-22 09:26:01	Moongoodgirl	waaat
2019-10-22 09:26:44	Moongoodgirl	I don't get it. It's one variable; the variable is returned, so its type must be the type written in the function signature
2019-10-22 09:27:07	Arnavion	The "variable is returned" step happens after the "call .insert() on this variable" step
2019-10-22 09:27:08	Moongoodgirl	and that applies to the variable in general, not just after specific points in code as written or control flow
2019-10-22 09:27:26	Arnavion	The type analysis does follow the order of written code
2019-10-22 09:27:31	delYsid	I tend to hit weird corner cases just by playing around :-)
2019-10-22 09:27:33	Arnavion	(I swear I've had this conversation with you before)
2019-10-22 09:27:35	Moongoodgirl	what. :(
2019-10-22 09:27:53	Moongoodgirl	that's…a bit yikes
2019-10-22 09:28:23	Kinnison	Your issue, most likely, is that you've used fn() as a type, rather than &dyn Fn()
2019-10-22 09:28:55	Moongoodgirl	Kinnison: that's not it; all of these types coerce to `fn() -> ()`
2019-10-22 09:29:12	Arnavion	(And a   &dyn Fn()   won't have anything to borrow from)
2019-10-22 09:29:24	delYsid	Kinnison: Last time someone told me to use &dyn Fn over fn it turned out they were giving bad advice.
2019-10-22 09:29:29	 *	Kinnison boggles
2019-10-22 09:29:32	Moongoodgirl	the issue here is, as Arn_vion said, that type analysis follows the order of code as written :/
2019-10-22 09:30:19	Kinnison	Oh I see
2019-10-22 09:30:25	Moongoodgirl	delYsid: well, function trait objects are more inclusive than just functions
2019-10-22 09:30:31	Moongoodgirl	but sometimes you just don't need that
2019-10-22 09:30:32	delYsid	So, is using as Handler ok in this case, or should I write it differently somehow?
2019-10-22 09:30:53	Moongoodgirl	I mean, there's no problem with writing `as Handler`
2019-10-22 09:30:59	Moongoodgirl	it's fine, and it'll force the issue
2019-10-22 09:31:11	Arnavion	It won't accidentally compile something that isn't a Handler, so there's no problem
2019-10-22 09:31:21	delYsid	OK.
2019-10-22 09:31:24	Arnavion	It's not like   as i32   where you have to worry about truncation etc
2019-10-22 09:31:26	Moongoodgirl	personally, I would prefer annotating the type of the map in the declaration
2019-10-22 09:31:36	Moongoodgirl	just a `: HashMap<_, Handler>`
2019-10-22 09:31:57	Kinnison	Does anyone have a link to a good explanation of what the difference is between a function type and a dyn Fn* ?
2019-10-22 09:32:49	delYsid	Kinnison: AIUI, static vs. dynamic dispatch?
2019-10-22 09:33:13	Kinnison	hmm
2019-10-22 09:33:17	Moongoodgirl	`fn ..` are regular functions. fn items have unique types, but coerce to `fn ..`. Non-capturing closures also coerce to `fn ..`.
2019-10-22 09:33:55	Moongoodgirl	The trait objects, on the other hand, let you use capturing closures and anything that implements the traits, too.
2019-10-22 09:34:23	Kinnison	Aha thanks
2019-10-22 09:34:31	 *	Kinnison should reread all of that part of the stdlib docs
2019-10-22 09:34:38	Kinnison	Clearly it's something I've not grokked properly
2019-10-22 09:34:55	Moongoodgirl	There are three traits. Choosing one means making a tradeoff between what the callee of the API can do and what the caller of the API can do.
2019-10-22 09:36:07	-->	matthias_bgg (~mbgg@95.169.226.6) has joined ##rust
2019-10-22 09:36:17	-->	cmr_z (~cmr@oftn/oswg-member/cmr) has joined ##rust
2019-10-22 09:36:20	 *	Kinnison nods
2019-10-22 09:36:26	Moongoodgirl	FnOnce moves the callable (the closure or whatever it is), so you can only call it once. Closures that move from the environment have to be used as `FnOnce`.
2019-10-22 09:36:45	Moongoodgirl	FnMut takes a mutable reference, so you can call it multiple times
2019-10-22 09:36:55	Kinnison	Aaah, so fn() is effectively a plain function pointer, where Fn* represent a function pointer with a (optional?) capture context
2019-10-22 09:37:11	Moongoodgirl	Fn takes an immutable reference, so you can call it multiple times, and…also call it multiple times at the same time? I guess?
2019-10-22 09:37:27	Moongoodgirl	Kinnison: It's a trait, so it can be anything at all. :P
2019-10-22 09:37:35	Moongoodgirl	(well…once the trait stabilizes, that is)
2019-10-22 09:37:37	Kinnison	heh fair
2019-10-22 09:38:12	-->	panicbit2 (~panicbit@p57ADED42.dip0.t-ipconnect.de) has joined ##rust
2019-10-22 09:39:08	Moongoodgirl	capturing closures are implemented as anonymous types with a function pointer plus fields to store references or ownership of the captures, and implementing whichever of the Fn* traits are appropriate
2019-10-22 09:39:47	Kinnison	Aha
2019-10-22 09:39:58	Kinnison	Thank you, that was clear and comprehensible
2019-10-22 09:40:08	 *	Kinnison puts Fn, FnMut, and FnOnce onto his reading list
2019-10-22 09:40:27	<--	panicbit (~panicbit@p5B09E2F9.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2019-10-22 09:41:19	Moongoodgirl	^.^ .
2019-10-22 09:41:26	Arnavion	evalr:   fn foo() -> Vec<i32> { let mut x = Default::default(); x.push(5); x }   // Moongoodgirl: Here's a simpler example of type inference going in the direction of written code rather than back-propagating from the return site
2019-10-22 09:41:29	--	Notice(evalr): error[E0282]: type annotations needed
2019-10-22 09:41:31	--	Notice(evalr): ~~~ Full output: https://play.rust-lang.org/?gist=fe0135f8274a9080bfa43a6450a9b834&version=stable&mode=debug
2019-10-22 09:41:48	Moongoodgirl	Arnavion :(
2019-10-22 09:41:52	Arnavion	Especially "type must be known at this point"
2019-10-22 09:41:59	Moongoodgirl	Geez
2019-10-22 09:42:27	<--	panicbit2 (~panicbit@p57ADED42.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2019-10-22 09:42:31	Moongoodgirl	Are there plans to change this?
2019-10-22 09:42:40	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-22 09:42:43	Arnavion	I don't know, but I doubt it
2019-10-22 09:42:57	Moongoodgirl	First instance in code as written makes sense as a final fallback, but there are many things that should be done first…
2019-10-22 09:43:11	-->	panicbit2 (~panicbit@p57ADEC64.dip0.t-ipconnect.de) has joined ##rust
2019-10-22 09:43:29	Moongoodgirl	starting with function signatures, and going through interactions with other things that have known types
2019-10-22 09:43:46	Moongoodgirl	and /lastly/ if you still don't know what it is, make inferences based on the first usage written in the code
2019-10-22 09:44:28	Arnavion	(Funnily enough   fn foo() -> i32 { let mut x = Default::default(); x += 5; x }   has no problem compiling, because {number} is special I guess)
2019-10-22 09:46:17	Arnavion	Actually
2019-10-22 09:46:25	Arnavion	evalr: #[derive(Default)] struct S; impl std::ops::AddAssign<i32> for S { fn add_assign(&mut self, other: i32) { } } fn foo() -> S { let mut x = Default::default(); std::ops::AddAssign::add_assign(&mut x, 5); x }
2019-10-22 09:46:28	--	Notice(evalr): ()
2019-10-22 09:46:40	Arnavion	I guess it's just   .method()   that requires the type
2019-10-22 09:46:56	Arnavion	because of needing to know where to look it up from, I guess
2019-10-22 09:48:53	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined ##rust
2019-10-22 09:51:46	-->	b5509cd (4d679bb8@gateway/web/cgi-irc/kiwiirc.com/ip.77.103.155.184) has joined ##rust
2019-10-22 09:54:43	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 09:57:01	--	zorton is now known as ZORTON
2019-10-22 10:02:42	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-22 10:03:24	Arnavion	https://github.com/arsing/openssl-pkcs11-demo/blob/master/src/pkcs11.rs#L31-L58   Is there a way to write this with Entry combinators? Or at least without the repetition of lines 34-38 with lines 51-55 ?
2019-10-22 10:03:54	Arnavion	(though technically the two   entry.insert()   calls have different signatures, so they're not exactly identical)
2019-10-22 10:09:36	-->	multiproc (~mark@unaffiliated/multiproc) has joined ##rust
2019-10-22 10:15:57	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 246 seconds)
2019-10-22 10:16:39	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 246 seconds)
2019-10-22 10:20:10	--	ZORTON is now known as Zorton
2019-10-22 10:20:16	<--	turion (~turion@93.240.237.218) has quit (Quit: Leaving.)
2019-10-22 10:20:23	<--	lovesegfault (~bemeurer@2600:1700:5f20:83e0::35) has quit (Quit: WeeChat 2.6)
2019-10-22 10:26:03	<--	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has quit (Quit: Leaving)
2019-10-22 10:26:08	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
2019-10-22 10:26:55	<--	nekron (~nekron@noordsee.de) has quit (Remote host closed the connection)
2019-10-22 10:27:52	-->	nekron (~nekron@noordsee.de) has joined ##rust
2019-10-22 10:27:57	-->	royal_screwup21 (2ee94e14@gateway/web/cgi-irc/kiwiirc.com/ip.46.233.78.20) has joined ##rust
2019-10-22 10:28:00	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-22 10:29:25	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 10:31:19	-->	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has joined ##rust
2019-10-22 10:31:58	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-22 10:34:48	-->	xsoultartar (~xsoultart@133.91.253.129) has joined ##rust
2019-10-22 10:37:23	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-10-22 10:37:25	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Quit: WeeChat 2.4)
2019-10-22 10:37:44	-->	multiproc (~mark@unaffiliated/multiproc) has joined ##rust
2019-10-22 10:41:02	<--	royal_screwup21 (2ee94e14@gateway/web/cgi-irc/kiwiirc.com/ip.46.233.78.20) has quit (Remote host closed the connection)
2019-10-22 10:44:01	-->	baali (~baali@59.98.185.91) has joined ##rust
2019-10-22 10:46:30	-->	Coldblackice_ (~c@unaffiliated/coldblackice) has joined ##rust
2019-10-22 10:50:29	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 250 seconds)
2019-10-22 10:50:48	<--	hussam (uid193284@gateway/web/irccloud.com/x-qmlafdflzlavaipe) has quit (Quit: Connection closed for inactivity)
2019-10-22 10:55:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-22 10:57:01	-->	royal_screwup21 (c1f066d2@gateway/web/cgi-irc/kiwiirc.com/ip.193.240.102.210) has joined ##rust
2019-10-22 10:57:41	<--	royal_screwup21 (c1f066d2@gateway/web/cgi-irc/kiwiirc.com/ip.193.240.102.210) has quit (Remote host closed the connection)
2019-10-22 10:58:10	-->	hussam (uid193284@gateway/web/irccloud.com/x-hzkvrodzjpssfncl) has joined ##rust
2019-10-22 10:59:57	faern	I'm running rustfmt on travis with `cargo fmt -- --check`. In the last few days it started failing with `error: no such subcommand: `fmt``. It does work on the stable Rust Travis builds, but not nightly. Does anyone have any idea why `cargo-fmt` might be possible to find on one toolchain but not the other?
2019-10-22 11:00:47	Kinnison	Travis now defaults to the minimal profile
2019-10-22 11:00:56	Kinnison	you need to `rustup component add rustfmt` if you want `cargo fmt` to work
2019-10-22 11:01:19	Kinnison	Nightly doesn't always *have* rustfmt
2019-10-22 11:01:34	Kinnison	so you may also need some extra effort to make it work
2019-10-22 11:02:23	faern	I run all of this in docker. And I get rustfmt with the `-c rustfmt` argument to the new shiny rustup install. And it did work last week. It just magically stopped working recently.
2019-10-22 11:02:55	faern	I mean. I can see from the build it does install rustfmt. And I can see that it has `/root/.cargo/bin/cargo-fmt`. but `cargo fmt` still fails with the above error.
2019-10-22 11:03:49	faern	Great news travis swapped to the minimal setup very fast. But since I do this in docker I need to install rustup+rust myself. I'm also using the minimal profile.
2019-10-22 11:04:29	faern	And if I change `cargo fmt` into `cargo-fmt` (since that's what the binary is called), I get a different error: `Error during execution of `cargo metadata`: error: could not find `Cargo.toml` in `/travis` or any parent directory`
2019-10-22 11:05:17	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-22 11:05:26	Kinnison	If you do -c on the rustup-init line, it won't backtrack for you
2019-10-22 11:05:35	faern	But just above that I do `cwd && ls -la` and I see that I'm in /travis and it *does* have Cargo.toml. I'm wondering if it's something with how docker bind-mounts the folder or something. As I said, this just stopped working without anyone touching anything. So I suspect a change in either travis or rustfmt
2019-10-22 11:05:37	Kinnison	because rustup-init *forces* the install in order to get you a toolchain up front
2019-10-22 11:05:44	faern	Kinnison: Oh. I thought that was exactly what -c was supposed to do?
2019-10-22 11:05:47	Kinnison	You *might* prefer doing --default-toolchain none on the rustup-init
2019-10-22 11:05:51	Kinnison	and then do an install with -c
2019-10-22 11:06:06	Kinnison	Yeah, it's a bit awkward but the idea is to ensure that rustup-init always gives you *something*
2019-10-22 11:06:13	faern	WAT. I explicitly tried that but -c was not a valid argument when I tried.
2019-10-22 11:06:17	Kinnison	it should be warning you about components which were missing but forced
2019-10-22 11:06:32	Kinnison	faern: `rustup toolchain install nightly -c rustfmt` should do what you want
2019-10-22 11:06:42	-->	lompik (~lompik@unaffiliated/lompik) has joined ##rust
2019-10-22 11:06:48	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 11:06:50	Kinnison	faern: but only if the toolchain isn't already installed
2019-10-22 11:07:03	Kinnison	We're looking at a --permit-downgrades type option to add components, permitting downgrades
2019-10-22 11:07:04	faern	Wow. Ok
2019-10-22 11:07:21	Kinnison	but for now, the UX on all this is brand new and use-cases are wanted
2019-10-22 11:07:34	Kinnison	If you have a good description of your use-case and how we can make it better, please do file an issue if there's not one matching
2019-10-22 11:08:17	faern	So only way to make it backtrack is --default-toolchain none and then rustup toolchain install nightly -c rustfmt. That will backtrack to last working rustfmt?
2019-10-22 11:08:56	Kinnison	yep
2019-10-22 11:09:37	faern	Cool. Will try that.
2019-10-22 11:09:43	-->	jose_neta (~anonymous@40.211.37.188.rev.vodafone.pt) has joined ##rust
2019-10-22 11:09:47	Kinnison	Good luck :D
2019-10-22 11:10:01	faern	If they use the same flag. Clear documentation about which one backtracks and which one does not would be a good improvement :)
2019-10-22 11:11:17	Kinnison	Yeah, the forcing of rustup-init was a last-minute thing to deal with a horrible problem we had when we weren't doing that :D
2019-10-22 11:11:49	<--	ycjung (~hallabada@141.223.107.7) has quit (Quit: WeeChat 2.6)
2019-10-22 11:13:08	<--	Stanley00 (~Stanley00@unaffiliated/stanley00) has quit (Remote host closed the connection)
2019-10-22 11:13:31	<--	t8 (~tommo@2a00:23c5:1284:fc00:dc58:2d93:27af:9017) has quit (Remote host closed the connection)
2019-10-22 11:14:58	faern	So, what you suggested will probably help me in the long run, when rustfmt is unavailable next time. But it does not solve the issue of `cargo fmt` not finding `cargo-fmt`. As I said, the rustfmt install did work before this as well :)
2019-10-22 11:15:06	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-10-22 11:15:07	-->	Stanley00 (~Stanley00@unaffiliated/stanley00) has joined ##rust
2019-10-22 11:15:15	-->	t7 (~tommo@2a00:23c5:1284:fc00:f921:eb5a:8488:5266) has joined ##rust
2019-10-22 11:15:36	Kinnison	cargo-fmt is provided by the rustfmt component I think
2019-10-22 11:15:41	delYsid	Uhh, the scraper crate is pretty amazing.
2019-10-22 11:15:58	faern	Kinnison: Yes, the binary is there. But `cargo fmt` does not find it ¯\(o_º)/¯
2019-10-22 11:16:08	<--	Stanley00 (~Stanley00@unaffiliated/stanley00) has quit (Remote host closed the connection)
2019-10-22 11:16:52	-->	kai (~kai@samba/team/kai) has joined ##rust
2019-10-22 11:17:15	Kinnison	the binary is a rustup proxy I think
2019-10-22 11:18:05	-->	artblanc (~Arturo@176.56.75.2) has joined ##rust
2019-10-22 11:18:21	--	kai is now known as kblin
2019-10-22 11:26:18	-->	Stanley00 (~Stanley00@unaffiliated/stanley00) has joined ##rust
2019-10-22 11:33:40	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 252 seconds)
2019-10-22 11:35:30	-->	cmdaemon (cmdaemon@gateway/vpn/privateinternetaccess/cmdaemon) has joined ##rust
2019-10-22 11:36:18	-->	panicbit3 (~panicbit@p57ADE88D.dip0.t-ipconnect.de) has joined ##rust
2019-10-22 11:38:02	<--	panicbit2 (~panicbit@p57ADEC64.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2019-10-22 11:45:45	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 11:47:57	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2019-10-22 11:52:28	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Quit: osa1)
2019-10-22 11:56:38	-->	ycjung (~hallabada@141.223.107.7) has joined ##rust
2019-10-22 12:01:25	<--	cmdaemon (cmdaemon@gateway/vpn/privateinternetaccess/cmdaemon) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-22 12:06:33	-->	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has joined ##rust
2019-10-22 12:07:27	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-10-22 12:08:42	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-22 12:09:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-22 12:21:07	-->	__gotcha1 (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-22 12:21:10	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Read error: Connection reset by peer)
2019-10-22 12:21:11	--	__gotcha1 is now known as __gotcha
2019-10-22 12:22:05	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 12:24:31	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-22 12:28:38	<--	narispo (~narispo@2a01:e0a:2a2:1590:8913:b676:50a4:f3f7) has quit (Ping timeout: 276 seconds)
2019-10-22 12:29:08	-->	narispo (~narispo@2a01:e0a:2a2:1590:8913:b676:50a4:f3f7) has joined ##rust
2019-10-22 12:33:11	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 276 seconds)
2019-10-22 12:35:48	<--	pepper_chico (~pepper_ch@gateway/tor-sasl/pepperchico/x-70212520) has quit (Remote host closed the connection)
2019-10-22 12:37:24	-->	pepper_chico (~pepper_ch@gateway/tor-sasl/pepperchico/x-70212520) has joined ##rust
2019-10-22 12:54:59	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-22 12:56:14	-->	pupskucheen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-10-22 12:58:04	<--	artblanc (~Arturo@176.56.75.2) has quit (Ping timeout: 268 seconds)
2019-10-22 12:59:35	<--	pupskucheen (~pupskuche@unaffiliated/pupskuchen) has quit (Client Quit)
2019-10-22 12:59:50	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Ping timeout: 276 seconds)
2019-10-22 13:00:14	-->	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-10-22 13:06:45	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Remote host closed the connection)
2019-10-22 13:07:17	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 13:12:57	<--	stalled (~stalled@unaffiliated/stalled) has quit (Ping timeout: 240 seconds)
2019-10-22 13:16:06	-->	nl3dee (~nl3dee@aclermont-ferrand-653-1-2-211.w86-207.abo.wanadoo.fr) has joined ##rust
2019-10-22 13:17:28	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-22 13:17:49	-->	ytain (~ghfg@2607:f2c0:957c:fe00:6dc2:5780:4bf7:ada4) has joined ##rust
2019-10-22 13:19:42	-->	libertyprime (~libertypr@124.197.60.232) has joined ##rust
2019-10-22 13:20:59	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-10-22 13:23:38	-->	tartarsauce (~xsoultart@2001:268:c0a2:ce72:4970:547c:e2a4:9b17) has joined ##rust
2019-10-22 13:26:51	<--	xsoultartar (~xsoultart@133.91.253.129) has quit (Ping timeout: 240 seconds)
2019-10-22 13:30:53	<--	rople (rople@gateway/vpn/privateinternetaccess/rople) has quit (Ping timeout: 265 seconds)
2019-10-22 13:31:10	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-22 13:36:17	<--	libertyprime (~libertypr@124.197.60.232) has quit (Quit: Lost terminal)
2019-10-22 13:37:08	<--	jose_neta (~anonymous@40.211.37.188.rev.vodafone.pt) has quit (Quit: jose_neta)
2019-10-22 13:38:27	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-22 13:39:18	-->	libertyprime (~libertypr@124.197.60.232) has joined ##rust
2019-10-22 13:40:03	<--	david2 (~david2@212-186-25-215.cable.dynamic.surfer.at) has quit (Ping timeout: 240 seconds)
2019-10-22 13:40:43	<--	tartarsauce (~xsoultart@2001:268:c0a2:ce72:4970:547c:e2a4:9b17) has quit (Ping timeout: 245 seconds)
2019-10-22 13:43:57	<--	beatleboy07 (~beatleboy@c-24-17-50-149.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2019-10-22 13:44:43	-->	mkulke (3e601b02@62.96.27.2) has joined ##rust
2019-10-22 13:45:07	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 250 seconds)
2019-10-22 13:48:41	-->	stalled (~stalled@unaffiliated/stalled) has joined ##rust
2019-10-22 13:51:23	<--	mkulke (3e601b02@62.96.27.2) has quit (Ping timeout: 260 seconds)
2019-10-22 13:51:36	<--	libertyprime (~libertypr@124.197.60.232) has quit (Quit: leaving)
2019-10-22 13:52:55	-->	imsnif (~aram@178-191-226-21.adsl.highway.telekom.at) has joined ##rust
2019-10-22 13:54:27	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 13:55:53	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-22 13:59:47	-->	artblanc (~Arturo@176.56.75.2) has joined ##rust
2019-10-22 13:59:51	<--	finwevi (~quassel@2a01:e0a:157:80a0:216:3eff:fe5e:6c7b) has left ##rust ("https://quassel-irc.org - Chat comfortably. Anywhere.")
2019-10-22 14:00:31	<--	samrg472 (~samrg472@gateway/tor-sasl/samrg472) has quit (Remote host closed the connection)
2019-10-22 14:00:46	-->	samrg472 (~samrg472@gateway/tor-sasl/samrg472) has joined ##rust
2019-10-22 14:01:33	<--	baali (~baali@59.98.185.91) has quit (Ping timeout: 245 seconds)
2019-10-22 14:03:56	<--	ycjung (~hallabada@141.223.107.7) has quit (Quit: WeeChat 2.6)
2019-10-22 14:03:57	la_mettrie	"error[E0623]: lifetime mismatch - these two types are declared with different lifetimes... ...but data from `object_a` flows into `object_b` here"
2019-10-22 14:03:59	la_mettrie	but my whole program is designed so that data is supposed to flow between those two objects
2019-10-22 14:04:49	<--	artblanc (~Arturo@176.56.75.2) has quit (Quit: Leaving)
2019-10-22 14:14:45	j`ey	paste code
2019-10-22 14:15:06	-->	Nahual (~Nahual@unaffiliated/nahual) has joined ##rust
2019-10-22 14:16:08	j`ey	is object b borrowing from a?
2019-10-22 14:18:03	-->	ycjung (~hallabada@141.223.107.7) has joined ##rust
2019-10-22 14:18:43	-->	multiproc (~mark@unaffiliated/multiproc) has joined ##rust
2019-10-22 14:22:42	<--	llorllal1 (~llorllale@152.0.160.141) has quit (Quit: WeeChat 1.9.1)
2019-10-22 14:23:02	la_mettrie	why the compiler doesn't tell where these lifetime requirements come from? yesterday this compiled fine. now i don't know why it now demands some lifetimes for a certain variable
2019-10-22 14:23:29	ZirconiumX	Show us the error message
2019-10-22 14:24:30	j`ey	im assuming you changed stuff since yesterday
2019-10-22 14:25:38	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-22 14:25:45	la_mettrie	error message is there above
2019-10-22 14:28:23	j`ey	look at the changes you made since yesterday
2019-10-22 14:30:08	la_mettrie	in rust the program has to be designed so that the data does not flow between two different objects because if compiler demands lifetimes for them, then it all gets distorted?
2019-10-22 14:31:23	j`ey	is that the entire error message?
2019-10-22 14:32:46	j`ey	https://github.com/rust-lang/rust/issues/44409 heh 2year old issues about this error
2019-10-22 14:33:02	la_mettrie	the error message has some more ofc  https://pastebin.com/JAW1HSfv
2019-10-22 14:33:17	-->	hexfive (~hexfive@50.35.80.237) has joined ##rust
2019-10-22 14:34:56	j`ey	you could try change it to change_gridunit_texture<'a>(gridarg: &'a mut Gridvec, arg1: &'a mut SDLMasterVars,
2019-10-22 14:35:06	j`ey	but i thought that was the default
2019-10-22 14:38:31	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 14:41:02	wucke13	How can I put a thing a thing in a struct, which doesn't have a size known at compile time
2019-10-22 14:42:19	j`ey	Box usually
2019-10-22 14:43:19	-->	tmager (~Thunderbi@96.78.200.121) has joined ##rust
2019-10-22 14:43:40	-->	DeltaHeavy (~DeltaHeav@unaffiliated/deltaheavy) has joined ##rust
2019-10-22 14:43:50	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Ping timeout: 276 seconds)
2019-10-22 14:43:53	la_mettrie	okay, not it complains that data flows from object X to the same object. wtf...  and it points out only one type on the parameter list but speaks of "two types"  https://pastebin.com/B24bWaXu
2019-10-22 14:44:13	wucke13	As I need the thing also in a another thread, I tryied adding Arc<thingtype> to the struct, though that cauuses an error:
2019-10-22 14:44:46	wucke13	the trait `mavlink::connection::MavConnection` is not implemented for `std::boxed::Box<dyn mavlink::connection::MavConnection + std::marker::Send + std::marker::Sync>`
2019-10-22 14:45:03	j`ey	la_mettrie: nice
2019-10-22 14:52:58	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-22 14:55:19	jbg	wucke13: show some code. it sounds like you defined the type as Arc<Thing> but are passing a Box<Thing> when initialising it
2019-10-22 14:55:20	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-10-22 14:57:24	jbg	iirc Box should be unnecessary there. Arc already heap-allocates so Arc<Thing> should be sufficient
2019-10-22 15:01:23	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-10-22 15:05:07	-->	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has joined ##rust
2019-10-22 15:05:47	faern	Still banging my head against the issue where `cargo metadata` fails with `error: could not find `Cargo.toml` in `/travis` or any parent directory` even though I can show the file is really there. Clearly visible here: https://travis-ci.com/mullvad/mullvadvpn-app/jobs/248272965#L298-L316
2019-10-22 15:06:08	faern	Fails on nightly, works on stable+beta. But works on all three release channels when I run the very same script and docker container locally... :/
2019-10-22 15:06:31	<--	lauromoura__ (~lauromour@2804:7f5:f380:4d43:f8dc:e6a:a6c1:795b) has quit (Remote host closed the connection)
2019-10-22 15:06:44	-->	jose_neta (~anonymous@40.211.37.188.rev.vodafone.pt) has joined ##rust
2019-10-22 15:06:50	-->	lauromoura__ (~lauromour@2804:7f5:f380:4d43:2dac:68b0:cbf8:c9f5) has joined ##rust
2019-10-22 15:07:34	<--	mjs2600 (mjs2600mat@gateway/shell/matrix.org/x-wthvodiayzpcwtin) has quit (Write error: Connection reset by peer)
2019-10-22 15:07:43	<--	flacks (flacksmatr@gateway/shell/matrix.org/x-chbouhbgxypuyold) has quit (Write error: Connection reset by peer)
2019-10-22 15:07:44	<--	alec[m] (alecowlsio@gateway/shell/matrix.org/x-qnrhrwhwoaigxzyn) has quit (Remote host closed the connection)
2019-10-22 15:07:47	<--	msrd0 (msrd0msrd0@gateway/shell/matrix.org/x-dvotvkqodqewrkve) has quit (Read error: Connection reset by peer)
2019-10-22 15:07:51	<--	siraben (sirabenmat@gateway/shell/matrix.org/x-rtlzjlaldvmiodao) has quit (Read error: Connection reset by peer)
2019-10-22 15:07:51	<--	gauteh (gautehmatr@gateway/shell/matrix.org/x-jhrvfzfcsxyybtbo) has quit (Remote host closed the connection)
2019-10-22 15:07:54	<--	colemickens (colemicken@pdpc/supporter/professional/geomyidae) has quit (Write error: Connection reset by peer)
2019-10-22 15:07:58	<--	ilmari_ (ilmariilma@perl/developer/ilmari) has quit (Write error: Connection reset by peer)
2019-10-22 15:07:58	<--	dwagenk (dwagenkcom@gateway/shell/matrix.org/x-yyvdjvkrxrdtqrmk) has quit (Write error: Connection reset by peer)
2019-10-22 15:08:00	<--	jose_neta (~anonymous@40.211.37.188.rev.vodafone.pt) has quit (Client Quit)
2019-10-22 15:09:35	<--	Mateon1 (~Thunderbi@unaffiliated/mateon1) has quit (Remote host closed the connection)
2019-10-22 15:09:57	-->	Mateon1 (~Thunderbi@unaffiliated/mateon1) has joined ##rust
2019-10-22 15:11:38	-->	jose_neta (~anonymous@40.211.37.188.rev.vodafone.pt) has joined ##rust
2019-10-22 15:15:32	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 15:17:34	madprops	is there a way to make a program run a function when it exits in any way?
2019-10-22 15:19:38	faern	madprops: Put it at the end of your main function? :D
2019-10-22 15:19:52	faern	madprops: Or use one of the signal hook libraries that exist if you are targeting *nix
2019-10-22 15:22:24	madprops	faern, wondering if I could use signal_hook crate to registar any kind of signal
2019-10-22 15:22:34	madprops	thought probably i should limit it to a couple
2019-10-22 15:22:56	faern	Many signals are not even exit signals. You probably want SIGTERM
2019-10-22 15:23:23	wucke13	jbg: Sure! https://paste.krebsco.de/yECxXG4c
2019-10-22 15:23:23	faern	if your process is sent a SIGKILL you won't be able to run any function. Because the kernel will kill you, it's nothing any process can do anything about.
2019-10-22 15:25:28	hodapp	woo! I ordered the Rust book finally
2019-10-22 15:26:41	Xatenev	hodapp, wooo
2019-10-22 15:26:56	Xatenev	hodapp, is that the same thing as the online book
2019-10-22 15:26:59	Xatenev	just printed?
2019-10-22 15:28:11	hodapp	whatever this one is: https://nostarch.com/Rust2018
2019-10-22 15:28:19	la_mettrie	many APIs have an option to run a function when a window is closed
2019-10-22 15:28:33	hodapp	I was aiming to work a bit on the ESP32 in Rust but it looks like this is all still quite bleeding-edge
2019-10-22 15:28:54	Xatenev	hm yeah i think thats the one thats online
2019-10-22 15:29:39	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-22 15:30:05	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-22 15:34:53	-->	kreyren (~kreyren@94.113.101.16) has joined ##rust
2019-10-22 15:35:06	<--	kreyren (~kreyren@94.113.101.16) has left ##rust ("Leaving")
2019-10-22 15:38:05	<--	ycjung (~hallabada@141.223.107.7) has quit (Quit: WeeChat 2.6)
2019-10-22 15:38:25	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-22 15:42:50	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 265 seconds)
2019-10-22 15:44:28	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-22 15:44:30	-->	royal_screwup21 (2ee94e1c@gateway/web/cgi-irc/kiwiirc.com/ip.46.233.78.28) has joined ##rust
2019-10-22 15:51:22	delYsid	First time since I started to use Rust that I had something compile that didn't work (hang). Pretty good statistics so far.  Still, this was a surprise.
2019-10-22 15:51:41	j`ey	logic error?
2019-10-22 15:51:50	delYsid	proc.stdin.as_mut().unwrap().write_all(text.as_bytes())?;
2019-10-22 15:52:20	delYsid	Cut&pasto.  Got this line from the web...  Can you spot the problem?
2019-10-22 15:53:42	-->	federico_ (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-10-22 15:54:03	delYsid	taking stdin as a ref will prevent Drop, and therefore the subprocess deadlocks when reading from the pipe output.
2019-10-22 15:54:13	delYsid	Remove the as_mut() and everything is fine.
2019-10-22 15:54:55	Yaniel	well, rust promises to be safe, not to never deadlock :P
2019-10-22 15:55:35	Yaniel	anyway, gotta love stdin shenanigans, they always end up biting
2019-10-22 15:56:28	delYsid	Yeah, guessed that.  I am actually pretty happy with what I get from rustc...
2019-10-22 15:57:48	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 15:58:37	doomba	error: component 'rustfmt' for target 'x86_64-unknown-freebsd' is unavailable for download for channel stable
2019-10-22 15:59:02	doomba	rustup installs working rustc and cargo but there are no rustfmt and rls
2019-10-22 16:00:13	-->	Nickeeh (~quassel@bulbasaur.sjorsgielen.nl) has joined ##rust
2019-10-22 16:00:50	j`ey	freebsd is tier2, that might be the reason
2019-10-22 16:01:42	ishw0r	https://users.rust-lang.org/t/ideas-for-redesigning-the-rust-logo/26051/63 LOL
2019-10-22 16:01:42	doomba	ah looks like https://github.com/rust-lang/rust/issues/62558 is the reason
2019-10-22 16:03:05	 *	ishw0r chuckled a bit..
2019-10-22 16:03:31	ishw0r	anywho. <3 rayon
2019-10-22 16:04:30	-->	dfin (~dsd@xdsl-188-154-174-181.adslplus.ch) has joined ##rust
2019-10-22 16:05:10	delYsid	hmm, cssparser is missing an impl Error for ParseError
2019-10-22 16:06:27	dfin	hi. Is there any way to remove the match in the expression: let idx = match some_result { Ok(idx) => idx, Err(idx) => idx }?
2019-10-22 16:08:07	faern	dfin: Not that I'm aware of. You have a Result<X, X> where both variants have the same type? That would require some special impl<X> for Result<X, X> { pub fn unwrap_any(self) -> X } which I don't think exists.
2019-10-22 16:09:19	<--	royal_screwup21 (2ee94e1c@gateway/web/cgi-irc/kiwiirc.com/ip.46.233.78.28) has quit (Remote host closed the connection)
2019-10-22 16:11:32	faern	dfin: If you find yourself repeating this a lot in your crate, you might consider adding a local trait and implement it for Result<X, X> in order to get this functionality locally :)
2019-10-22 16:12:07	faern	Or just a standalone function fn<X>(result: Result<X, X>) -> X
2019-10-22 16:19:16	-->	osa1_ (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-22 16:19:55	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-22 16:20:57	<--	Coldblackice_ (~c@unaffiliated/coldblackice) has quit (Ping timeout: 268 seconds)
2019-10-22 16:25:50	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Quit: osa1)
2019-10-22 16:26:13	-->	baali (~baali@106.207.153.147) has joined ##rust
2019-10-22 16:26:15	--	osa1_ is now known as osa1
2019-10-22 16:26:58	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-22 16:27:35	<--	timemage (~timemage@unaffiliated/timemage) has quit (Read error: No route to host)
2019-10-22 16:36:03	<--	amitizle (~amitizle@vmi213363.contaboserver.net) has quit (Ping timeout: 240 seconds)
2019-10-22 16:40:06	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 16:45:51	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 246 seconds)
2019-10-22 16:50:53	<--	baali (~baali@106.207.153.147) has quit (Quit: Leaving.)
2019-10-22 16:50:56	<--	b5509cd (4d679bb8@gateway/web/cgi-irc/kiwiirc.com/ip.77.103.155.184) has quit (Remote host closed the connection)
2019-10-22 16:51:09	wucke13	jbg: Did the past work for you?
2019-10-22 16:51:59	jbg	wucke13: yes it did, but I was afk :) having a look now
2019-10-22 16:52:10	wucke13	Oh, thank you :)
2019-10-22 16:53:15	-->	porky11 (~porky11@p200300F843C0CED4068D38FFFEA832A5.dip0.t-ipconnect.de) has joined ##rust
2019-10-22 16:58:31	jbg	wucke13: mavlink::connect returns a Result<Box<dyn MavConnection + Send + Sync>>
2019-10-22 16:58:32	jbg	https://docs.rs/mavlink/0.6.0/mavlink/fn.connect.html
2019-10-22 16:59:19	jbg	so after you unwrap the result and wrap it in Arc, you have an Arc<Box<dyn MavConnection + Send + Sync>>
2019-10-22 16:59:46	jbg	and the error message is correctly telling you that you can't assign that to an Arc<MavConnection> (which is deprecated syntax for Arc<dyn MavConnection>)
2019-10-22 16:59:46	wucke13	And that is bad because?
2019-10-22 17:00:02	wucke13	Ahh
2019-10-22 17:00:18	jbg	you should just be able to update the type on the struct field
2019-10-22 17:02:00	jbg	however, note that Arc<Box<T>> is generally redundant
2019-10-22 17:02:11	jbg	and Arc implements From<Box<T>>: https://doc.rust-lang.org/std/sync/struct.Arc.html#impl-From%3CBox%3CT%3E%3E
2019-10-22 17:02:38	wucke13	Won't that removing Arc break the thread spawned?
2019-10-22 17:02:57	jbg	so, instead of Arc::new(...), you could do let mavconn: Arc<_> = mavlink::connect(...).unwrap().into();
2019-10-22 17:03:22	jbg	converting the Box into an Arc
2019-10-22 17:03:47	wucke13	I more or less copied that with the Arc from mavlinks example https://github.com/mavlink/rust-mavlink/blob/master/src/bin/mavlink-dump.rs
2019-10-22 17:03:49	Arnavion	wucke13: Arc<Box<T>> is redundant with Arc<T> because Arc already stores the T with indirection
2019-10-22 17:03:58	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Remote host closed the connection)
2019-10-22 17:04:47	wucke13	Ahh
2019-10-22 17:06:22	jbg	btw, sounds like you're working on something quite interesting :) i've flown plenty of drones and keep meaning to try some hacking :)
2019-10-22 17:06:33	-->	baali (~baali@106.207.153.147) has joined ##rust
2019-10-22 17:06:36	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 252 seconds)
2019-10-22 17:07:10	wucke13	It's part of my bachelor thesis. I'm trying to build a proof of concept programming which translates some subset of MAVLink to MSP flight controllers, like iNAV and Betaflight.
2019-10-22 17:08:05	jbg	nice!
2019-10-22 17:09:53	wucke13	And this code is going to be a convenience wrapper around mavlink, as the mavlink rust implementation doesn't offer non-blocking recv :D
2019-10-22 17:11:05	wucke13	I'm getting a lot of followup errors after implementing your suggested change
2019-10-22 17:12:46	jbg	pastebin the new code and the errors?
2019-10-22 17:13:04	wucke13	I'll do, hang on a moment :)
2019-10-22 17:13:19	-->	multiproc (~mark@unaffiliated/multiproc) has joined ##rust
2019-10-22 17:15:08	wucke13	Code: https://paste.krebsco.de/aP6ufm4Q , error: https://paste.krebsco.de/h3XaDk67
2019-10-22 17:15:51	ishw0r	wooo
2019-10-22 17:16:17	jbg	I think you just need to add the + Send + Sync bounds
2019-10-22 17:16:21	jbg	Arc<MavConnection + Send + Sync>
2019-10-22 17:16:23	-->	timemage (~timemage@unaffiliated/timemage) has joined ##rust
2019-10-22 17:16:30	jbg	alternatively, do Arc<_> and the compiler will infer the type for you
2019-10-22 17:17:15	wucke13	Arc<_> will make the clone in line 26 fail
2019-10-22 17:17:33	jbg	are you sure? i don't think so, because the type is known at that point
2019-10-22 17:17:48	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Quit: osa1)
2019-10-22 17:18:01	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-22 17:18:05	wucke13	Adding + Send + Sync to line 22 works. About <_>, I will send you the error
2019-10-22 17:18:29	wucke13	https://paste.krebsco.de/MaAVjNDP
2019-10-22 17:18:38	jbg	ah, i didn't realise you'd tried it - i am a bit surprised, because line 22 should contain enough information for the compiler to know the type completely
2019-10-22 17:19:06	jbg	oh, i think the former error is a consequence of the latter error
2019-10-22 17:19:23	jbg	with the _, your struct field will need to have the + Send + Sync bounds on it
2019-10-22 17:19:33	jbg	which i am guessing it did not
2019-10-22 17:20:04	wucke13	Ah ok. It would make sence to have that on the struct field, as otherwise there may be instances of the struct which may not work, right?
2019-10-22 17:20:39	jbg	it would be a good idea to have it there, as if you write code later that depends on sending or sharing the MavConnection between threads, you'll probably need those bounds expressed there
2019-10-22 17:22:07	wucke13	Unfortunately, adding it only to the struct still keeps up the error about line 26 (the .clone()), as the compiler is missing a type annotation there
2019-10-22 17:22:45	jbg	ah well, i guess you'll have to be more verbose with the types. i don't fully understand why Arc<_> isn't enough in this case, but in your position i'd just express the type fully and leave it at that :)
2019-10-22 17:23:02	wucke13	Will do so :)
2019-10-22 17:23:09	wucke13	Thank you for the detailed help!
2019-10-22 17:23:37	jbg	no problem, good luck with your thesis! i'll have to get onto programming some drones with Rust :)
2019-10-22 17:25:44	<--	tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has quit (Ping timeout: 260 seconds)
2019-10-22 17:25:46	-->	climbingturtle (~climbingt@c213-89-14-151.bredband.comhem.se) has joined ##rust
2019-10-22 17:26:53	-->	tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has joined ##rust
2019-10-22 17:27:16	wucke13	jbg: Definetely! I'm eager on having more and more components in the ecosystem written in rust and clearly decomposed, like thats my personal goal in my research :D
2019-10-22 17:35:51	wucke13	How would I match on the io::Error ErrorKind?
2019-10-22 17:36:08	<--	jose_neta (~anonymous@40.211.37.188.rev.vodafone.pt) has quit (Quit: jose_neta)
2019-10-22 17:36:23	Moongoodgirl	there's a kind() method
2019-10-22 17:36:30	ishw0r	found it pretty neat `Rayon's uses a work-stealing scheduler` (https://docs.rs/rayon/1.2.0/rayon/struct.ThreadPool.html#method.install)
2019-10-22 17:36:37	Moongoodgirl	You can match on ErrorKind, but not exhaustively
2019-10-22 17:37:17	Moongoodgirl	in my experience, checking for one or two specific variants is usually the most common (and that often flattened into an outer match, rather than having a dedicated match block just for the kind)
2019-10-22 17:37:23	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Ping timeout: 250 seconds)
2019-10-22 17:38:29	wucke13	But `Err(e) if e.kind() == io::ErrorKind::WouldBlock =>`  complains about `moves value into pattern guard`
2019-10-22 17:38:57	Moongoodgirl	`Err(ref e)` to borrow instead of moving it
2019-10-22 17:39:36	wucke13	Neat, thank you!
2019-10-22 17:42:10	Moongoodgirl	Mmhmm :)
2019-10-22 17:42:25	Moongoodgirl	You usually don't need ref much anymore
2019-10-22 17:42:38	-->	jhfrontz (b8397101@cpe-184-57-113-1.columbus.res.rr.com) has joined ##rust
2019-10-22 17:42:42	Moongoodgirl	Using a field in a pattern guard is one of the cases where you do
2019-10-22 17:43:34	<--	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has quit (Quit: Leaving)
2019-10-22 17:43:53	-->	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has joined ##rust
2019-10-22 17:44:22	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 252 seconds)
2019-10-22 17:46:35	jhfrontz	I'm getting a weird error (using the latest nightly) -- `cargo clean` is reporting "error: could not find `Cargo.toml` in `/builds/jhf/functionary` or any parent directory" (even though there is definitely a readable Cargo.toml in the current directory).  I googled around and there was some indication that this was a catch-all error for other
2019-10-22 17:46:35	jhfrontz	unlikely error conditions.  But I'm not really sure how to debug it.
2019-10-22 17:46:38	<--	Stanley00 (~Stanley00@unaffiliated/stanley00) has quit (Read error: Connection reset by peer)
2019-10-22 17:46:47	<--	OmniMancer (~Paul@101.100.137.239) has quit (Quit: Leaving.)
2019-10-22 17:47:16	Arnavion	RUST_LOG=debug cargo clean
2019-10-22 17:47:17	-->	aLeSD (~aLeSD@122.red-80-24-12.staticip.rima-tde.net) has joined ##rust
2019-10-22 17:47:30	Arnavion	or trace, if that's not enough
2019-10-22 17:51:46	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##rust
2019-10-23 10:06:11	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-23 10:06:11	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-23 10:06:11	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-23 10:06:11	--	Channel ##rust: 565 nicks (2 ops, 0 voices, 563 normals)
2019-10-23 10:06:28	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-23 10:11:53	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-23 10:13:44	-->	t3rtius (~user@2a02:2f0a:450a:9b00:8a78:4f45:b48:c1d4) has joined ##rust
2019-10-23 10:14:22	<--	t3rtius (~user@2a02:2f0a:450a:9b00:8a78:4f45:b48:c1d4) has quit (Quit: ##namespace)
2019-10-23 10:15:10	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 10:15:48	-->	t3rtius (~user@2a02:2f0a:450a:9b00:8a78:4f45:b48:c1d4) has joined ##rust
2019-10-23 10:17:12	<--	t3rtius (~user@2a02:2f0a:450a:9b00:8a78:4f45:b48:c1d4) has quit (Remote host closed the connection)
2019-10-23 10:19:54	-->	t3rtius (~user@2a02:2f0a:450a:9b00:8a78:4f45:b48:c1d4) has joined ##rust
2019-10-23 10:19:57	<--	pupskucheen (~pupskuche@unaffiliated/pupskuchen) has quit (Read error: Connection reset by peer)
2019-10-23 10:22:51	-->	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-10-23 10:31:10	-->	baali (~baali@59.98.235.70) has joined ##rust
2019-10-23 10:39:39	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 246 seconds)
2019-10-23 10:42:20	-->	multiproc (~mark@unaffiliated/multiproc) has joined ##rust
2019-10-23 10:43:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-23 10:46:39	<--	emilsp (~emilsp@freenode/staff/emilsp) has quit (Ping timeout: 633 seconds)
2019-10-23 10:47:16	<--	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has quit (Ping timeout: 268 seconds)
2019-10-23 10:47:58	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 10:49:33	-->	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has joined ##rust
2019-10-23 10:53:18	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Quit: osa1)
2019-10-23 10:53:48	-->	emilsp (~emilsp@freenode/staff/emilsp) has joined ##rust
2019-10-23 11:03:01	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-23 11:03:01	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-23 11:03:01	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-23 11:03:01	--	Channel ##rust: 566 nicks (2 ops, 0 voices, 564 normals)
2019-10-23 11:03:17	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-23 11:04:03	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Ping timeout: 245 seconds)
2019-10-23 11:06:17	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-23 11:08:34	-->	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-10-23 11:15:37	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-10-23 11:17:15	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-23 11:21:14	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 11:27:21	-->	murla (~murla@146.120.13.152) has joined ##rust
2019-10-23 11:31:37	<--	baali (~baali@59.98.235.70) has quit (Quit: Leaving.)
2019-10-23 11:38:20	<--	t3rtius (~user@2a02:2f0a:450a:9b00:8a78:4f45:b48:c1d4) has quit (Ping timeout: 276 seconds)
2019-10-23 11:45:28	-->	t7 (~tommo@2a00:23c5:1284:fc00:d531:a822:5915:81b5) has joined ##rust
2019-10-23 11:45:38	-->	fsasm (~fsasm@62.178.93.7) has joined ##rust
2019-10-23 11:49:16	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-23 11:52:20	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 12:04:27	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 240 seconds)
2019-10-23 12:07:38	-->	baali (~baali@117.241.129.141) has joined ##rust
2019-10-23 12:08:34	<--	murla (~murla@146.120.13.152) has quit (Ping timeout: 265 seconds)
2019-10-23 12:09:19	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Ping timeout: 260 seconds)
2019-10-23 12:09:40	-->	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-10-23 12:10:43	<--	Coldblackice_ (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 245 seconds)
2019-10-23 12:14:20	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-23 12:15:29	-->	murla (~murla@146.120.13.152) has joined ##rust
2019-10-23 12:15:54	-->	lineus (~lineus@dynamic-acs-24-101-67-254.zoominternet.net) has joined ##rust
2019-10-23 12:20:43	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-23 12:20:53	-->	lineus_ (~lineus@dynamic-acs-24-101-67-254.zoominternet.net) has joined ##rust
2019-10-23 12:21:39	<--	lineus (~lineus@dynamic-acs-24-101-67-254.zoominternet.net) has quit (Ping timeout: 240 seconds)
2019-10-23 12:24:47	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 12:25:03	-->	libertyprime (~libertypr@124.197.60.232) has joined ##rust
2019-10-23 12:25:19	-->	t3rtius (~user@2a02:2f0a:450a:9b00:8a78:4f45:b48:c1d4) has joined ##rust
2019-10-23 12:34:36	<--	pedro4 (sid145515@gateway/web/irccloud.com/x-rcerpicnzrcbqlfw) has quit
2019-10-23 12:36:04	<--	murla (~murla@146.120.13.152) has quit (Ping timeout: 264 seconds)
2019-10-23 12:41:20	-->	pedro4 (~pedro4@194.187.251.155) has joined ##rust
2019-10-23 12:41:30	-->	multiproc (~mark@unaffiliated/multiproc) has joined ##rust
2019-10-23 12:42:32	<--	GnarlyBob (chris@2600:3c03::f03c:91ff:fee0:8443) has quit (Quit: brb)
2019-10-23 12:48:19	-->	Coldblackice_ (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-10-23 12:48:25	-->	GnarlyBob (chris@2600:3c03::f03c:91ff:fee0:8443) has joined ##rust
2019-10-23 12:48:42	<--	t3rtius (~user@2a02:2f0a:450a:9b00:8a78:4f45:b48:c1d4) has quit (Quit: ERC has quit.)
2019-10-23 12:49:58	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 268 seconds)
2019-10-23 12:50:36	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 268 seconds)
2019-10-23 12:54:03	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 246 seconds)
2019-10-23 12:56:46	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-23 12:58:41	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 13:02:37	<--	AbedB (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-10-23 13:07:26	-->	vn971 (~quassel@2a02:7aa0:1619::bac5:9483) has joined ##rust
2019-10-23 13:10:37	vn971	I have a "metaquestion" I guess. Why does clippy make a warning on a code like that
2019-10-23 13:10:38	vn971	`something.function().function2().another_function() == false`
2019-10-23 13:10:38	vn971	It proposes to instead write `!something....`
2019-10-23 13:10:38	vn971	I find the `!something....` syntax, however, much less readable if the main body is big. Basically, most of us read code from left to right. Having a negation on the leftmost position requires from us to remember the negation and not make a mistake with it. Putting it on the rightmost position, however, would save us from this effort, and we'd only encounter the negation when we already have a boolean.
2019-10-23 13:11:59	Stanley00	vn971: how about !another_funtion(something.function()...) ?
2019-10-23 13:13:21	Moongoodgirl	comparing booleans is generally considered bad style
2019-10-23 13:13:29	vn971	Stanley00: here, I guess negation is nice near the "boolean-returning" function. So I'd be OK with clippy throwing a warning here. This way of writing still requires you to keep more things in memory, so it is not ideal.
2019-10-23 13:13:38	Moongoodgirl	although you do make a pretty good argument
2019-10-23 13:14:00	vn971	Moongoodgirl: that could be true, but in both scenarios we still compare them..
2019-10-23 13:14:01	Moongoodgirl	as with basically everything style, the most important thing is to be consistent
2019-10-23 13:14:25	Moongoodgirl	so if this is your project, feel free to change the lint settings and add a note to your style document :)
2019-10-23 13:15:42	-->	ot (~css@unaffiliated/css) has joined ##rust
2019-10-23 13:15:44	Moongoodgirl	vn971: by /compare/, I mean `$bool == true`, `$bool == false`, `bool != true`, and `$bool != false`
2019-10-23 13:15:45	vn971	Moongoodgirl: then again that would be lack of consistency for contributors, and the need to have non-standard configuration.. Is it OK to ask on clippy-s default behavior?
2019-10-23 13:15:47	Stanley00	another counter argument is, if the method chain is long enough that it hard to keep in memory, you better write predict function for it
2019-10-23 13:15:54	Moongoodgirl	where $bool is an expression of type bool
2019-10-23 13:16:01	Moongoodgirl	I was trying to avoid having to write all that out :P
2019-10-23 13:16:31	Moongoodgirl	generally the expectation is that you write `$bool` or `!$bool`
2019-10-23 13:16:46	Moongoodgirl	vn971: …actually, better idea. not()
2019-10-23 13:17:30	Moongoodgirl	you do have to import a trait, but it gives you postfix negation without being redundant and (mostly) without falling afoul of that style guideline
2019-10-23 13:18:21	vn971	Moongoodgirl: but why would we have a lint that reduces readability or requires the reader to keep more things in valuable memory to begin with?
2019-10-23 13:18:52	Moongoodgirl	evalr: use std::ops::Not; let bool_ = true; if bool_.not() {}
2019-10-23 13:18:54	--	Notice(evalr): ()
2019-10-23 13:19:17	Moongoodgirl	vn971: <Moongoodgirl> comparing booleans is generally considered bad style
2019-10-23 13:19:20	Moongoodgirl	<Moongoodgirl> generally the expectation is that you write `$bool` or `!$bool`
2019-10-23 13:19:59	_0x40_	why not just `let var = function().function2()...` before the if?
2019-10-23 13:20:08	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-23 13:21:34	vn971	_0x40_: you could do that. But is it desired to have a work-around instead of fixing clippy, *IF* we consider that the behavior can be improved?
2019-10-23 13:21:50	Stanley00	vn971: think about if bool_ == true; if bool_ != true; if bool_ == false; if bool_ != false; you have to check both comparator and value. if bool_ and if !bool_ is shorter, and easier to read
2019-10-23 13:23:52	vn971	Stanley00: !bool is shorter, that is true. If it is a super-trivial expression, it might even help. For longer chained ones, however, you really have to keep in mind the negation while continuing to read left-to-right.
2019-10-23 13:23:52	vn971	`!something.function().function().is_good()`  <--- given 1 second to read the code, does it check that something is good or bad?
2019-10-23 13:25:25	Stanley00	vn971: you already got recommend about .not(), and also, let meaningful_condition_name = ...; if !meanful_condition_name is not just a workaround
2019-10-23 13:25:34	Moongoodgirl	(`!is_*()` might even be considered an antipattern, though I'm not sure. Generally they come in sets. For sure you wouldn't use `!maybe.is_some()`; that's what `is_none()` is for.)
2019-10-23 13:26:40	-->	aLeSD (~aLeSD@122.red-80-24-12.staticip.rima-tde.net) has joined ##rust
2019-10-23 13:26:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-23 13:27:25	-->	ytain (~ghfg@2607:f2c0:9254:6e00:1d08:48ca:3c9a:50ea) has joined ##rust
2019-10-23 13:27:29	_0x40_	I think having large expressions in the if condition is bad style in and of itself. Using `let` with a descriptive variable name will make it much clearer at first glance what the code is doing.
2019-10-23 13:29:13	Stanley00	totally agree
2019-10-23 13:30:37	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 13:31:52	<--	ytain (~ghfg@2607:f2c0:9254:6e00:1d08:48ca:3c9a:50ea) has quit (Ping timeout: 264 seconds)
2019-10-23 13:33:16	vn971	while I agree that you should avoid large `if` expressions and that you can use `.not()`, does it really answer the clippy question? The question is why does clippy give a warning on suffix `== false`, but _does_ recommend `!` instead. If clippy would just complain about `if` body being too big, that would be understandable.
2019-10-23 13:34:05	vn971	its recommendation for `!` is at question specifically.
2019-10-23 13:34:14	Stanley00	does clippy have checking for if body being too big?
2019-10-23 13:34:25	vn971	Stanley00: not that I'm aware of.
2019-10-23 13:34:50	Stanley00	then, you can try create an issue/request for them then
2019-10-23 13:35:04	Moongoodgirl	The lint probably exists because `== true` is considered bad style.
2019-10-23 13:35:44	vn971	Moongoodgirl: writing that would indeed be bad, and we should prevent that in a linter.
2019-10-23 13:35:49	Moongoodgirl	In favor of using just the boolean expression, or `!`
2019-10-23 13:36:18	Moongoodgirl	…hang on, doesn't clippy have descriptions for all of the lints?
2019-10-23 13:36:46	j`ey	Moongoodgirl: patches welcome :p
2019-10-23 13:37:04	Moongoodgirl	j`ey: ?
2019-10-23 13:37:29	Moongoodgirl	ugh, the clippy website is terrible
2019-10-23 13:37:52	Moongoodgirl	>Why this is bad: Unnecessary code.
2019-10-23 13:38:05	Moongoodgirl	hmm, no justification here
2019-10-23 13:39:00	vn971	it says: "error: equality checks against false can be replaced by a negation"  to me
2019-10-23 13:39:59	vn971	ah, on the link. Nevermind.
2019-10-23 13:43:53	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-23 13:45:03	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-23 13:47:27	-->	murarth_ (murarth@gateway/vpn/privateinternetaccess/murarth) has joined ##rust
2019-10-23 13:47:57	<--	murarth (murarth@gateway/vpn/privateinternetaccess/murarth) has quit (Ping timeout: 240 seconds)
2019-10-23 13:47:57	--	murarth_ is now known as murarth
2019-10-23 13:48:01	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-23 13:56:03	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-23 13:56:45	-->	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has joined ##rust
2019-10-23 13:58:02	la_mettrie	SDL-Rust docs say that in some cases lifetimes of SDL_Texture variables become too complex and then unsafe textures are needed.  I wonder if my program has such complex lifetimes after all. There is a 2D vector (like 300x300 or so) populated with objects each containing one SDL_Texture. These textures are often changed or erased and objects holding them are often thrown into same functions with other structs
2019-10-23 13:58:04	la_mettrie	objects where they interact.
2019-10-23 13:58:34	la_mettrie	*other struct objects
2019-10-23 13:59:50	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 14:01:20	-->	sven^ (~quassel@unaffiliated/sven/x-8293843) has joined ##rust
2019-10-23 14:03:06	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-23 14:06:06	<--	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has quit (Ping timeout: 252 seconds)
2019-10-23 14:07:33	<--	flaviodesousa (~flaviodes@213.187.85.4) has quit (Quit: KVIrc 4.9.3 Aria http://www.kvirc.net/)
2019-10-23 14:08:29	<--	rustacean (~whateverg@111.65.57.55) has quit (Ping timeout: 276 seconds)
2019-10-23 14:11:13	-->	wildermind (uid300433@gateway/web/irccloud.com/x-lqjnkhavkokmjbns) has joined ##rust
2019-10-23 14:14:10	voker57	they probably become too complex when you send them to GPU and back
2019-10-23 14:14:38	-->	AbedB (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has joined ##rust
2019-10-23 14:15:56	-->	murla (~murla@146.120.13.152) has joined ##rust
2019-10-23 14:16:42	-->	Nahual (~Nahual@unaffiliated/nahual) has joined ##rust
2019-10-23 14:17:58	-->	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has joined ##rust
2019-10-23 14:20:02	Moongoodgirl	la_mettrie: I'm not familiar with SDL, but be advised that writing unsafe code means shouldering a lot of responsibility. If it turns out that you do need to get into unsafe APIs or other unsafe code, you should probably read the Nomicon first.
2019-10-23 14:20:03	<--	Coldblackice_ (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 240 seconds)
2019-10-23 14:21:30	la_mettrie	"more responsibility". even more than in non-memory-safe languages?
2019-10-23 14:22:29	-->	ytain (~ghfg@2607:f2c0:9376:4000:f5e7:d7c9:ba3d:60d4) has joined ##rust
2019-10-23 14:23:16	Moongoodgirl	Writing C also means shouldering a lot of responsibility. Too many people don't take it seriously enough, or don't fully understand the implications and intricacies of the language.
2019-10-23 14:25:14	<--	sean__ (~sean@ks3323102.kimsufi.com) has quit (Ping timeout: 240 seconds)
2019-10-23 14:27:46	-->	AbedB_ (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has joined ##rust
2019-10-23 14:27:54	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-10-23 14:28:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-23 14:29:02	Moongoodgirl	In Safe Rust, everything that would be a UB heisenbug in C is a compile-time error instead.
2019-10-23 14:29:27	Moongoodgirl	Using unsafe features means that's no longer the case.
2019-10-23 14:29:38	Moongoodgirl	I urge you to use `unsafe` carefully, judiciously, and sparingly.
2019-10-23 14:30:40	<--	AbedB (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has quit (Ping timeout: 264 seconds)
2019-10-23 14:32:52	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 14:37:54	-->	tmager (~Thunderbi@96.78.200.121) has joined ##rust
2019-10-23 14:43:13	<--	airwind (~belovent@cr-01.anx09.lju.si.anexia-it.com) has quit (Quit: airwind)
2019-10-23 14:43:13	--	Elfo_ is now known as Elfo
2019-10-23 14:45:55	-->	crockwork (~crockwork@66.205.193.158) has joined ##rust
2019-10-23 14:51:23	-->	aep (~aep@libqxt/developer/aep) has joined ##rust
2019-10-23 14:51:47	aep	does anyone remember the cargo bug where no-default-features won't apply and the workaround?
2019-10-23 14:52:17	aep	i.e. i specified default-features = false but cargo.lock will still show _some_ default dependencies
2019-10-23 14:54:19	aep	likely pulled in by an optional dependency again having that crate as dependency with default features enabled
2019-10-23 15:00:39	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-23 15:01:21	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-10-23 15:05:09	-->	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has joined ##rust
2019-10-23 15:05:41	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 15:06:52	-->	lauromoura_ (~lauromour@2804:7f5:f380:994a:6814:40ab:89ed:f0d0) has joined ##rust
2019-10-23 15:08:09	-->	federico_ (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-10-23 15:09:09	<--	lauromoura (~lauromour@2804:7f5:f380:4d43:2dac:68b0:cbf8:c9f5) has quit (Ping timeout: 246 seconds)
2019-10-23 15:14:08	<--	_Vi (~vi@2001:470:7bd6:1000::2) has quit (Ping timeout: 276 seconds)
2019-10-23 15:19:22	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-10-23 15:22:44	<--	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has quit (Quit: WeeChat 2.6)
2019-10-23 15:22:57	-->	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has joined ##rust
2019-10-23 15:29:53	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-23 15:33:43	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 15:34:38	-->	jhfrontz (~Adium@cpe-184-57-113-1.columbus.res.rr.com) has joined ##rust
2019-10-23 15:37:47	-->	Fairy (~Fairy@unaffiliated/fairy) has joined ##rust
2019-10-23 15:40:01	-->	alexozer (~alexozer@pool-173-49-130-2.phlapa.fios.verizon.net) has joined ##rust
2019-10-23 15:40:51	<--	alexozer (~alexozer@pool-173-49-130-2.phlapa.fios.verizon.net) has left ##rust ("WeeChat 2.6")
2019-10-23 15:42:35	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-23 15:46:38	<--	baali (~baali@117.241.129.141) has quit (Ping timeout: 276 seconds)
2019-10-23 15:47:28	-->	ksqsf (~user@223.246.35.213) has joined ##rust
2019-10-23 15:49:32	<--	jenny-m (~jdm-@167.100.78.229) has quit (Quit: Leaving...)
2019-10-23 15:58:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-23 16:03:54	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 16:19:55	<--	libertyprime (~libertypr@124.197.60.232) has quit (Quit: leaving)
2019-10-23 16:26:22	-->	pepper_chico (~pepper_ch@gateway/tor-sasl/pepperchico/x-70212520) has joined ##rust
2019-10-23 16:26:27	<--	ksqsf (~user@223.246.35.213) has quit (Ping timeout: 240 seconds)
2019-10-23 16:27:20	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-23 16:27:24	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-23 16:29:05	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-23 16:30:34	-->	fanta1 (~fanta1@p200300F76BC35C0074F2DD1634864D79.dip0.t-ipconnect.de) has joined ##rust
2019-10-23 16:33:16	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 16:39:26	georgemp	Hi..anybody have any recommendations for mixing Cargo and Conan (C/C++ Package Manager). I've come across ConanCargoWrapper (which doesn't seem to be maintained any longer) and conan-rs. Anything else out there? Thanks
2019-10-23 16:40:48	<--	imsnif (~aram@178-191-226-21.adsl.highway.telekom.at) has quit (Remote host closed the connection)
2019-10-23 16:41:01	<--	ytain (~ghfg@2607:f2c0:9376:4000:f5e7:d7c9:ba3d:60d4) has quit (Ping timeout: 250 seconds)
2019-10-23 16:43:39	<--	efm (~efm@vpn.tummy.com) has quit (Read error: Connection reset by peer)
2019-10-23 16:44:53	<--	meandi_2 (~meandi@dyndsl-178-142-253-104.ewe-ip-backbone.de) has quit (Read error: Connection reset by peer)
2019-10-23 16:48:57	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-10-23 16:50:50	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-23 16:53:02	-->	safe (~safe@unaffiliated/safe) has joined ##rust
2019-10-23 16:56:35	murla	How can I run both usual and ignored tests via cargo test?
2019-10-23 16:57:52	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-23 16:58:05	Kinnison	murla: cargo test -- --include-ignored
2019-10-23 16:58:35	-->	_Vi (~vi@vi-server.org) has joined ##rust
2019-10-23 16:58:57	murla	Kinnison, isn't it nightly only?
2019-10-23 16:59:04	Kinnison	I just got that from stable IIRC
2019-10-23 16:59:07	 *	Kinnison checks
2019-10-23 16:59:15	Kinnison	1.37.0
2019-10-23 16:59:20	Kinnison	so it should be stable
2019-10-23 16:59:57	murla	weird, I use 1.38 but it says it's only available for nightly
2019-10-23 17:00:32	murla	> error: The "include-ignored" flag is only accepted on the nightly compiler
2019-10-23 17:00:32	murla	error: test failed, to rerun pass '--lib'
2019-10-23 17:01:06	Kinnison	Oh so it does
2019-10-23 17:01:07	murla	(2 lines) am I possibly doing anything wrong?
2019-10-23 17:01:08	<--	jamm (~jamm@unaffiliated/jamm) has quit (Ping timeout: 245 seconds)
2019-10-23 17:01:10	 *	Kinnison boggles
2019-10-23 17:01:26	Kinnison	Why would the --help show it if it's nightly only?
2019-10-23 17:01:28	Kinnison	that's very confusing
2019-10-23 17:01:38	Kinnison	I apologise
2019-10-23 17:01:56	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 17:01:59	Kinnison	I guess you want `cargo +nightly test -- --include-ignored` then :/
2019-10-23 17:02:35	vn971	I've created the issue for clippy warning: https://github.com/rust-lang/rust-clippy/issues/4717
2019-10-23 17:02:38	<--	DeltaHeavy (~DeltaHeav@unaffiliated/deltaheavy) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-23 17:02:40	murla	I've found this issue closed a long time ago https://github.com/rust-lang/rust/pull/55053
2019-10-23 17:03:08	 *	murla checks cargo test -- --help 
2019-10-23 17:04:13	Kinnison	that's where I found --include-ignored but I had just made and built a fresh project with stable to find that out
2019-10-23 17:04:14	Kinnison	v.odd
2019-10-23 17:04:23	<--	fanta1 (~fanta1@p200300F76BC35C0074F2DD1634864D79.dip0.t-ipconnect.de) has quit (Quit: fanta1)
2019-10-23 17:04:52	murla	well, cargo is 1.38 for sure
2019-10-23 17:05:01	murla	--include-ignored is shown in help
2019-10-23 17:05:26	Kinnison	it seems very odd that the help would tell you a flag which you can't use
2019-10-23 17:07:37	murla	makes sense, of course
2019-10-23 17:08:13	murla	well, everything fails for me with this error (cargo +nightly, invoking nightly cargo binary directly too)
2019-10-23 17:08:27	murla	something is wrong with my setup, I guess
2019-10-23 17:08:49	-->	DeltaHeavy (~DeltaHeav@unaffiliated/deltaheavy) has joined ##rust
2019-10-23 17:10:26	-->	tsaka__ (~torstein@dslb-188-102-222-125.188.102.pools.vodafone-ip.de) has joined ##rust
2019-10-23 17:10:30	-->	stephaneyfx (~stephaney@184.68.160.234) has joined ##rust
2019-10-23 17:10:37	Kinnison	lemme install nightly
2019-10-23 17:13:04	Kinnison	Okay yep, same error here
2019-10-23 17:13:06	Kinnison	so not your fault at all
2019-10-23 17:13:15	Kinnison	Something very squiffy is going on
2019-10-23 17:13:17	<--	ellcs (~mantel@212.12.60.67) has quit (Ping timeout: 240 seconds)
2019-10-23 17:13:29	Kinnison	I suggest you file a bug on rust-lang/rust :D
2019-10-23 17:13:40	Kinnison	Hopefully they'll either tell you the fix, or admit there's a bug to fix
2019-10-23 17:14:12	murla	Kinnison, thank you very much for checking it out
2019-10-23 17:14:22	murla	I know I'm not alone now :)
2019-10-23 17:14:36	Kinnison	No problem, I'm sorry I couldn't find the right answer for you, but at least you know it's not your system at fault
2019-10-23 17:15:09	murla	I'll add a reminder for myself to file a report
2019-10-23 17:16:29	<--	KeyJoo (~KeyJoo@46.249.6.99) has quit (Quit: KeyJoo)
2019-10-23 17:16:33	<--	lauromoura_ (~lauromour@2804:7f5:f380:994a:6814:40ab:89ed:f0d0) has quit (Ping timeout: 246 seconds)
2019-10-23 17:18:36	Kinnison	👍
2019-10-23 17:19:57	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-10-23 17:23:12	<--	david2 (~david2@212-186-25-215.cable.dynamic.surfer.at) has quit (Ping timeout: 246 seconds)
2019-10-23 17:24:39	<--	efm (~efm@vpn.tummy.com) has quit (Remote host closed the connection)
2019-10-23 17:25:00	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Ping timeout: 268 seconds)
2019-10-23 17:27:42	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-10-23 17:28:13	<--	lovesegfault (~bemeurer@2600:1700:5f20:83e0::35) has quit (Ping timeout: 245 seconds)
2019-10-23 17:28:51	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-23 17:32:05	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-23 17:33:13	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 17:34:35	-->	lauromoura (~lauromour@2804:7f5:f380:aeee:6814:40ab:89ed:f0d0) has joined ##rust
2019-10-23 17:38:51	<--	nl3dee (~nl3dee@aclermont-ferrand-653-1-2-211.w86-207.abo.wanadoo.fr) has quit (Ping timeout: 240 seconds)
2019-10-23 17:39:54	-->	climbingturtle (~climbingt@c213-89-14-151.bredband.comhem.se) has joined ##rust
2019-10-23 17:42:36	-->	ytain (~ghfg@2607:f2c0:95a4:6800:2cd5:ead3:6ed7:a1d2) has joined ##rust
2019-10-23 17:44:32	-->	gnu3ra (~gnu3ra@c-98-226-242-1.hsd1.il.comcast.net) has joined ##rust
2019-10-23 17:45:44	<--	ot (~css@unaffiliated/css) has quit (Quit: ChatZilla 0.9.93 [Firefox 56.0/20170929190952])
2019-10-23 17:50:45	<--	wildermind (uid300433@gateway/web/irccloud.com/x-lqjnkhavkokmjbns) has quit (Quit: Connection closed for inactivity)
2019-10-23 17:56:38	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 276 seconds)
2019-10-23 17:56:54	-->	ytain_ (~ghfg@2607:f2c0:9256:c00:cc58:a36:97c0:30e8) has joined ##rust
2019-10-23 17:57:23	<--	ytain (~ghfg@2607:f2c0:95a4:6800:2cd5:ead3:6ed7:a1d2) has quit (Ping timeout: 245 seconds)
2019-10-23 17:59:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 246 seconds)
2019-10-23 18:00:30	-->	o01eg (~o01eg@2a02:2698:82b:11be:79b8:a0ee:dede:8230) has joined ##rust
2019-10-23 18:01:44	-->	learning1 (~pi@121.121.99.187) has joined ##rust
2019-10-23 18:02:27	<--	learningc (~pi@121.122.105.195) has quit (Ping timeout: 240 seconds)
2019-10-23 18:03:34	-->	hexfive (~hexfive@50.35.80.237) has joined ##rust
2019-10-23 18:03:46	-->	tmager1 (~Thunderbi@146.115.18.74) has joined ##rust
2019-10-23 18:04:47	<--	matthias_bgg (~mbgg@95.169.226.6) has quit (Ping timeout: 265 seconds)
2019-10-23 18:04:49	<--	Xatenev (~I@87.190.19.178) has quit (Quit: Leaving)
2019-10-23 18:05:31	<--	tmager (~Thunderbi@96.78.200.121) has quit (Ping timeout: 250 seconds)
2019-10-23 18:05:31	--	tmager1 is now known as tmager
2019-10-23 18:05:33	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-23 18:06:53	<--	L29Ah (~L29Ah@unaffiliated/l29ah) has left ##rust
2019-10-23 18:07:49	-->	fanta1 (~fanta1@p200300F76BC35C0074F2DD1634864D79.dip0.t-ipconnect.de) has joined ##rust
2019-10-23 18:08:00	<--	fsasm (~fsasm@62.178.93.7) has quit (Ping timeout: 246 seconds)
2019-10-23 18:15:03	<--	rrooij (~rrooij@unaffiliated/rroij) has quit (Quit: WeeChat 2.6)
2019-10-23 18:15:11	<--	aLeSD (~aLeSD@122.red-80-24-12.staticip.rima-tde.net) has quit (Remote host closed the connection)
2019-10-24 10:39:40	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-24 10:39:40	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-24 10:39:40	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-24 10:39:40	--	Channel ##rust: 565 nicks (2 ops, 0 voices, 563 normals)
2019-10-24 10:39:56	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-24 10:43:18	<--	lopsided98 (~quassel@c-73-149-219-1.hsd1.ma.comcast.net) has quit (Quit: No Ping reply in 180 seconds.)
2019-10-24 10:43:51	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 264 seconds)
2019-10-24 10:44:47	-->	lopsided98 (~quassel@2601:18a:0:ff60::5a4e) has joined ##rust
2019-10-24 10:52:18	jellie	Hey, let me just ask because I'm lost. Is it possible to store a struct in less than 1 byte? Here's my code I'm probably screwing up in many ways https://gist.github.com/urbanslug/d17158502fc00805ef1bbb863c1fe260
2019-10-24 10:54:34	-->	t7 (~tommo@2a00:23c5:1284:fc00:a5dd:11f7:4d88:e9e7) has joined ##rust
2019-10-24 10:57:21	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-24 10:57:30	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-24 10:57:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-24 10:59:57	<--	pie_ (~pie_@unaffiliated/pie-/x-0787662) has quit (Ping timeout: 250 seconds)
2019-10-24 11:01:27	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 11:03:23	j`ey	jellie: nah
2019-10-24 11:03:56	Moongoodgirl	wait, does packed_struct even do packed vectors?
2019-10-24 11:04:46	j`ey	jellie: even a bool is a byte
2019-10-24 11:05:21	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-10-24 11:05:31	jellie	Moongoodgirl: It seems to be doing something interesting in that example
2019-10-24 11:06:01	jellie	I also realized that a hex value is a 4 bit value which means it's also possible to use hex as a type haha
2019-10-24 11:06:35	jellie	j`ey: Might you know why Rust would umm "waste" this memory?
2019-10-24 11:06:58	j`ey	jellie: cos CPUs cant access memory at that granularity
2019-10-24 11:07:00	Moongoodgirl	jellie: to be honest, I'm not sure what this example is demonstrating
2019-10-24 11:07:23	Moongoodgirl	jellie: bit-level addressing isn't worth it
2019-10-24 11:07:26	jellie	j`ey: Al I see
2019-10-24 11:07:55	j`ey	jellie: wasting 4bits isnt bad
2019-10-24 11:08:05	Moongoodgirl	jellie: you'd need three extra bits in a pointer to address at the bit level, but because of padding and alignment, the pointer size would have to /double/(!) in most cases
2019-10-24 11:08:12	jellie	Moongoodgirl: I was trying to see if I was going to see two contiguous values in a byte
2019-10-24 11:08:22	Moongoodgirl	so the entire stack doesn't support bit-level addressing
2019-10-24 11:08:28	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-10-24 11:08:41	jellie	but I figured the stack stores values in bytes
2019-10-24 11:08:57	jellie	I think I've seen something like that done in D and/or C
2019-10-24 11:09:00	Moongoodgirl	you can do packing, but then it's more expensive and complicated to access
2019-10-24 11:09:21	Moongoodgirl	it's that tradeoff between space and time
2019-10-24 11:09:21	jellie	Moongoodgirl: Not to mention I don't know what I'm doing
2019-10-24 11:09:30	jellie	:)
2019-10-24 11:09:57	Moongoodgirl	jellie: Okay. How much data do you need in memory at once?
2019-10-24 11:10:02	j`ey	you can pack two 4bits in a u8 yup
2019-10-24 11:10:13	jellie	j`ey: How?
2019-10-24 11:10:23	j`ey	just have a u8!
2019-10-24 11:10:27	jellie	Well I'd like to store a chromosome
2019-10-24 11:10:31	j`ey	and then use shifts
2019-10-24 11:10:43	jellie	I don't know how much I need but let me tell you what I want
2019-10-24 11:10:52	jellie	I read these files that have ascii text
2019-10-24 11:11:11	jellie	they can be many gigz. The current one I'm using is 10G
2019-10-24 11:11:17	Moongoodgirl	jellie: Unless it's really a whole lot, where /really a whole lot/ has a fairly specific meaning, this is premature optimization
2019-10-24 11:11:19	faern	Sounds like premature optimization. Do the obvious implementation and test it. Only change it if there is a performance bottleneck.
2019-10-24 11:11:21	jellie	the mem on the comp is 128G
2019-10-24 11:12:04	jellie	I then I have to split this data on the 10G file depending on another file, a VCF, that could also be gigz but the current one is about 70M.
2019-10-24 11:12:09	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Quit: osa1)
2019-10-24 11:12:28	jellie	When I split this I'll be building a graph, something like a network, to show variation.
2019-10-24 11:12:33	jellie	Have I lost you?
2019-10-24 11:12:59	jellie	Moongoodgirl: Okay I'll consider it premature optimization for now
2019-10-24 11:13:07	jellie	I doubt I'll run out of memory
2019-10-24 11:13:37	jellie	I've seen people use protobuf to help with the packing maybe but I'm not sure exactly how
2019-10-24 11:13:57	jellie	I'm not a systems programmer at all.
2019-10-24 11:14:50	Kinnison	Protobufs are a wire format, not efficient for live-set use
2019-10-24 11:15:43	-->	ellcs (~mantel@212.12.60.67) has joined ##rust
2019-10-24 11:16:04	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-24 11:16:14	Moongoodgirl	<Moongoodgirl> jellie: Generally, for operating on data in a running program, you trade a bit of size for simplicity and ease of use (and make it more compact when you serialize)
2019-10-24 11:16:59	Kinnison	indeedy
2019-10-24 11:17:21	Moongoodgirl	It might also be possible to do things in a streaming way, so you only have a small part of the data set in memory at once
2019-10-24 11:17:50	<--	lord| (~solenodic@unaffiliated/solenodic) has quit (Read error: Connection reset by peer)
2019-10-24 11:17:56	jellie	Moongoodgirl: That's actually what I'm thinking of doing
2019-10-24 11:17:57	j`ey	jellie: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=7ed716937e4617c3aba4934920281663
2019-10-24 11:17:58	Moongoodgirl	generating statistics on the data sounds like it would be suited to that
2019-10-24 11:18:05	j`ey	just a little demo of storing 2x4bits
2019-10-24 11:18:11	jellie	Strean per chromosome inot memory
2019-10-24 11:18:25	jellie	j`ey: Let me look at it
2019-10-24 11:18:30	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 11:18:41	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-10-24 11:19:28	faern	jellie: Keep in mind that if you store multiple things in a single byte you will need to do bitmasking and similar to access and write to the data. So it will cost a lot more CPU to represent the data in memory like this.
2019-10-24 11:19:53	j`ey	some more :P
2019-10-24 11:20:19	<--	Mateon1 (~Thunderbi@unaffiliated/mateon1) has quit (Remote host closed the connection)
2019-10-24 11:20:52	jellie	faern: I'm willing to try it
2019-10-24 11:20:55	j`ey	jellie: that packed struct might be able to automate some of this, ive never used it
2019-10-24 11:21:03	jellie	but I also am worried about programming time
2019-10-24 11:21:22	j`ey	just do the simple thing, with a nice api :-)
2019-10-24 11:21:38	Kinnison	I think you're trying to prematurely optimise.  Write you code so that you abstract the storage of the bases, and then you can worry about a more compact storage format later if you need to
2019-10-24 11:21:57	Kinnison	e.g. always refer to bases by their index into the sequence, not by any kind of borrow
2019-10-24 11:22:10	jellie	j`ey: I'm still trying to understand your code :) I'm not even done with the rust book reminds me of https://github.com/biod/BioD/blob/57c81f275faab5cdec4746bfc7af81e31bac0f69/bio/core/base.d#L64
2019-10-24 11:22:34	jellie	Kinnison: I think you're right
2019-10-24 11:22:43	jellie	Plus I need to deliver a good damn tool in time
2019-10-24 11:22:48	j`ey	jellie: basically you take an 8 bit number and store 4 bits in the top half and 4 in the lower half
2019-10-24 11:23:09	jellie	j`ey: Ah
2019-10-24 11:23:19	<--	JonnyCodewalker (~JonnyCode@ip5f5ad6d2.dynamic.kabel-deutschland.de) has left ##rust ("Leaving")
2019-10-24 11:23:20	jellie	easier to write a bug like that though
2019-10-24 11:23:25	jellie	and to debug
2019-10-24 11:23:33	jellie	compared to an enum
2019-10-24 11:23:38	j`ey	yes, that's why you write a nice API that you can swap out later on!
2019-10-24 11:24:32	-->	lord| (~solenodic@unaffiliated/solenodic) has joined ##rust
2019-10-24 11:24:46	jellie	j`ey: Thanks
2019-10-24 11:24:58	jellie	I'll put a pin on this and optimize later
2019-10-24 11:25:12	j`ey	sounds like a plan!
2019-10-24 11:26:00	-->	mychat18 (~user@bzq-79-179-32-81.red.bezeqint.net) has joined ##rust
2019-10-24 11:27:37	-->	andirc8089 (~andirc808@mycraft1.powered.by.lunarbnc.net) has joined ##rust
2019-10-24 11:27:55	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-24 11:29:30	<--	mychat18 (~user@bzq-79-179-32-81.red.bezeqint.net) has left ##rust ("Closing Window")
2019-10-24 11:29:36	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-24 11:30:53	<--	slomo (~slomo@unaffiliated/slomo) has quit (Ping timeout: 252 seconds)
2019-10-24 11:33:17	-->	slomo (~slomo@unaffiliated/slomo) has joined ##rust
2019-10-24 11:34:52	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 11:36:30	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 268 seconds)
2019-10-24 11:41:13	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-10-24 11:42:46	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 11:54:23	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 268 seconds)
2019-10-24 11:57:03	delYsid	Are there any plans to add accessibility support to servo?
2019-10-24 11:58:51	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-24 12:01:36	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-24 12:02:39	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 12:10:26	<--	panicbit3 (~panicbit@p57ADE88D.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2019-10-24 12:11:50	-->	fsasm (~fsasm@62.178.93.7) has joined ##rust
2019-10-24 12:11:53	-->	pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined ##rust
2019-10-24 12:12:04	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-24 12:12:46	Yaniel	probably not, servo is not really being developed to be a standalone browser
2019-10-24 12:13:17	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 240 seconds)
2019-10-24 12:13:24	-->	ev4rist3 (~phoenix@x4e37c364.dyn.telefonica.de) has joined ##rust
2019-10-24 12:13:28	Yaniel	rather it serves as a testing ground for stuff to be merged into firefox later
2019-10-24 12:14:56	<--	dwagenk (dwagenkcom@gateway/shell/matrix.org/x-pfzregtwxbfeyyqn) has quit (Quit: 30 day idle timeout.)
2019-10-24 12:15:05	-->	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-10-24 12:20:15	delYsid	ok.
2019-10-24 12:25:13	<--	rrooij (~rrooij@unaffiliated/rroij) has quit (Ping timeout: 268 seconds)
2019-10-24 12:28:14	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-24 12:32:29	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 12:35:15	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 12:37:39	-->	panicbit3 (~panicbit@p57ADE88D.dip0.t-ipconnect.de) has joined ##rust
2019-10-24 12:38:10	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 268 seconds)
2019-10-24 12:41:15	-->	Coldblackice_ (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-10-24 12:41:17	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 252 seconds)
2019-10-24 12:42:23	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 252 seconds)
2019-10-24 12:43:24	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 12:43:35	<--	brnzz (~brnzz@185.104.181.38) has quit (Quit: The Lounge - https://thelounge.chat)
2019-10-24 12:44:28	-->	brnzz (~brnzz@185.104.181.38) has joined ##rust
2019-10-24 12:46:17	<--	m0rphism (~m0rphism@149.172.82.115) has quit (Ping timeout: 240 seconds)
2019-10-24 12:51:07	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 268 seconds)
2019-10-24 12:55:28	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-24 12:56:36	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 12:57:14	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-24 12:58:15	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-10-24 13:01:17	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 250 seconds)
2019-10-24 13:02:31	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 13:03:30	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-10-24 13:04:28	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-24 13:05:52	<--	Coldblackice_ (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 252 seconds)
2019-10-24 13:09:36	-->	ytain (~ghfg@2607:f2c0:937a:ac00:e968:153d:d1a3:2206) has joined ##rust
2019-10-24 13:09:36	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 13:11:54	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-24 13:12:03	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 264 seconds)
2019-10-24 13:14:53	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 245 seconds)
2019-10-24 13:17:14	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 13:21:30	<--	hexfive (~hexfive@50.35.80.237) has quit (Quit: WeeChat 2.6)
2019-10-24 13:21:38	<--	learning1 (~pi@121.121.99.187) has quit (Ping timeout: 240 seconds)
2019-10-24 13:22:34	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 268 seconds)
2019-10-24 13:25:46	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 13:30:20	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 246 seconds)
2019-10-24 13:33:42	-->	learning1 (~pi@121.121.99.187) has joined ##rust
2019-10-24 13:34:13	<--	multiproc (~mark@unaffiliated/multiproc) has quit (Ping timeout: 250 seconds)
2019-10-24 13:34:36	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 13:34:53	<--	jamm (~jamm@unaffiliated/jamm) has quit (Ping timeout: 245 seconds)
2019-10-24 13:38:56	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 240 seconds)
2019-10-24 13:42:39	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-24 13:44:09	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 13:47:44	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 13:48:57	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 265 seconds)
2019-10-24 13:51:54	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 13:54:05	<--	mutin-s (~s-mutin@85.234.114.134) has quit (Remote host closed the connection)
2019-10-24 13:54:30	-->	mutin-s (~s-mutin@85.234.114.134) has joined ##rust
2019-10-24 13:57:06	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 268 seconds)
2019-10-24 13:58:04	<--	crockwork (~crockwork@155.98.132.5) has quit (Quit: crockwork)
2019-10-24 13:58:31	<--	lord| (~solenodic@unaffiliated/solenodic) has quit (Read error: Connection reset by peer)
2019-10-24 13:59:52	-->	lord| (~solenodic@unaffiliated/solenodic) has joined ##rust
2019-10-24 14:00:17	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 14:08:50	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 246 seconds)
2019-10-24 14:10:54	-->	Mateon1 (~Thunderbi@unaffiliated/mateon1) has joined ##rust
2019-10-24 14:11:04	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 14:12:24	la_mettrie	This game-of-life example code with unsafe textures has a strange function structure. Just look at the last lines of the code. There is additional main function there. Without unsafe textures the same example has normal functions.  What does this mean?  So, unsafe textures have to be used through as modules or how this code is supposed to be run?
2019-10-24 14:12:26	la_mettrie	https://github.com/Rust-SDL2/rust-sdl2/blob/master/examples/game-of-life-unsafe-textures.rs
2019-10-24 14:12:55	la_mettrie	*-through
2019-10-24 14:13:40	-->	Nahual (~Nahual@unaffiliated/nahual) has joined ##rust
2019-10-24 14:15:08	-->	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-10-24 14:16:12	-->	mawk (mawk@serveur.io) has joined ##rust
2019-10-24 14:16:13	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 268 seconds)
2019-10-24 14:16:17	<--	mawk (mawk@serveur.io) has left ##rust ("Leaving")
2019-10-24 14:17:28	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-24 14:17:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-24 14:19:04	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 14:21:16	-->	ave_milia (ave@gateway/vpn/privateinternetaccess/avemilia) has joined ##rust
2019-10-24 14:21:53	-->	_xor (~xor@74.215.46.133) has joined ##rust
2019-10-24 14:22:14	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 14:24:14	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 268 seconds)
2019-10-24 14:24:29	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 276 seconds)
2019-10-24 14:26:26	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 14:28:27	-->	multiproc (~mark@unaffiliated/multiproc) has joined ##rust
2019-10-24 14:30:43	Yaniel	without unsafe textures the example does absolutely nothing
2019-10-24 14:31:08	Yaniel	it has two mains, one is compiled when the "unsafe_textures" feature is enabled, the other is compiled when that feature is not enabled
2019-10-24 14:31:37	Yaniel	I'm guessing this is mainly to prevent builds from failing
2019-10-24 14:35:43	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 245 seconds)
2019-10-24 14:36:57	la_mettrie	thanks
2019-10-24 14:37:00	la_mettrie	i tried to apply similar treatment to my own code, but it seems to fail with sdl2::gfx
2019-10-24 14:37:02	la_mettrie	I have a line "use sdl2::gfx::primitives::DrawRenderer;" there (with that "#[cfg(feature = "unsafe_textures")]" line above it) and the compiler says: error: linking with `cc` failed: exit code: 1 [...] cannot find -lSDL2_gfx
2019-10-24 14:37:46	<--	raeken (~quassel@gate.reality-bytes.com) has quit (Ping timeout: 265 seconds)
2019-10-24 14:38:08	<--	airwind (~belovent@cr-01.anx09.lju.si.anexia-it.com) has quit (Quit: airwind)
2019-10-24 14:39:03	-->	federico_ (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-10-24 14:39:31	<--	pie_ (~pie_@unaffiliated/pie-/x-0787662) has quit (Read error: Connection reset by peer)
2019-10-24 14:39:38	-->	raeken (~quassel@gate.reality-bytes.com) has joined ##rust
2019-10-24 14:40:02	-->	tmager (~Thunderbi@96.78.200.121) has joined ##rust
2019-10-24 14:41:39	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 14:46:30	Yaniel	do you have SDL2_gfx installed?
2019-10-24 14:50:27	la_mettrie	yes, I could use those primitives (like line drawing command) before I added those cfg-lines
2019-10-24 14:51:25	la_mettrie	hmm, or maybe the code didn't get compiled for the other reasons but i think it never complained about SDL2_gfx
2019-10-24 14:52:02	Yaniel	sdl2_gfx is separate from sdl2
2019-10-24 14:52:02	la_mettrie	i think i have the proper line in Cargo.toml, gfx = ["sdl2-sys/gfx"]
2019-10-24 14:52:14	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Ping timeout: 246 seconds)
2019-10-24 14:55:39	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-24 14:58:58	la_mettrie	okay, their Cargo.toml contains also a line ""
2019-10-24 14:59:02	la_mettrie	"required-features = ["gfx"]"
2019-10-24 14:59:07	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 14:59:22	la_mettrie	but i don't know how that can be included to my Cargo.toml which has no [[example]] lines
2019-10-24 14:59:57	Yaniel	uhh let me hit the cargo docs for you
2019-10-24 15:01:05	Yaniel	https://doc.rust-lang.org/cargo/reference/manifest.html#the-required-features-field-optional
2019-10-24 15:01:53	Yaniel	but I think what you need is https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features
2019-10-24 15:04:07	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-10-24 15:05:13	-->	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-10-24 15:06:38	-->	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has joined ##rust
2019-10-24 15:09:11	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Ping timeout: 265 seconds)
2019-10-24 15:11:11	-->	keep_learning (96cbd2d5@gateway/web/cgi-irc/kiwiirc.com/ip.150.203.210.213) has joined ##rust
2019-10-24 15:13:25	-->	p8m (~user1@196.245.151.211) has joined ##rust
2019-10-24 15:14:32	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 276 seconds)
2019-10-24 15:28:11	<--	_Vi (~vi@2001:470:7bd6:1000::2) has quit (Ping timeout: 276 seconds)
2019-10-24 15:28:59	-->	DeltaHeavy (~DeltaHeav@unaffiliated/deltaheavy) has joined ##rust
2019-10-24 15:32:02	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-24 15:32:27	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 264 seconds)
2019-10-24 15:36:17	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 15:37:04	-->	heeen (heeen@endboss.org) has joined ##rust
2019-10-24 15:37:16	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-24 15:39:08	heeen	https://gist.github.com/rust-play/c77f3f741c477bbdb3956ffd4a0ae556
2019-10-24 15:39:15	heeen	can someone help me figure this out
2019-10-24 15:39:29	heeen	how do I get InstanceExtensions from RawInstanceExtensions
2019-10-24 15:40:10	<--	lord| (~solenodic@unaffiliated/solenodic) has quit (Read error: Connection reset by peer)
2019-10-24 15:41:56	<--	danieldg (~me@about/networking/240.0.0.0/danieldg) has quit (Ping timeout: 268 seconds)
2019-10-24 15:42:16	-->	lord| (~solenodic@unaffiliated/solenodic) has joined ##rust
2019-10-24 15:43:25	-->	jenny-m (~jdm-@2605:8d80:6e0:bdf7:899d:afa2:a193:12e5) has joined ##rust
2019-10-24 15:45:39	-->	danieldg (~me@about/networking/240.0.0.0/danieldg) has joined ##rust
2019-10-24 15:46:14	<--	juga (~juga@unaffiliated/juga) has quit (Remote host closed the connection)
2019-10-24 15:51:45	-->	b5509cd (50c14a9e@gateway/web/cgi-irc/kiwiirc.com/ip.80.193.74.158) has joined ##rust
2019-10-24 15:52:33	--	Elfo_ is now known as Elfo
2019-10-24 15:57:19	<--	b5509cd (50c14a9e@gateway/web/cgi-irc/kiwiirc.com/ip.80.193.74.158) has quit (Remote host closed the connection)
2019-10-24 16:04:11	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Ping timeout: 260 seconds)
2019-10-24 16:07:11	<--	ExoUNX (~ExoUNX@unaffiliated/exounx) has quit (Ping timeout: 265 seconds)
2019-10-24 16:09:04	<--	jellie (~zipper@unaffiliated/zipper) has quit (Ping timeout: 268 seconds)
2019-10-24 16:10:16	-->	baali (~baali@59.98.184.26) has joined ##rust
2019-10-24 16:11:59	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Quit: WeeChat 2.4)
2019-10-24 16:12:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-24 16:17:09	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 16:19:29	-->	clarete (~user@pool-108-46-36-53.nycmny.fios.verizon.net) has joined ##rust
2019-10-24 16:20:38	-->	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-10-24 16:23:01	<--	lawlesseel (~lawlessee@gateway/tor-sasl/lawlesseel) has quit (Remote host closed the connection)
2019-10-24 16:23:33	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Remote host closed the connection)
2019-10-24 16:24:46	-->	murla (~murla@146.120.13.152) has joined ##rust
2019-10-24 16:25:02	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-24 16:26:09	murla	Kinnison, I've submitted the issue for cargo test -- --include-ignored https://github.com/rust-lang/cargo/issues/7540. Let's see what folks find out.
2019-10-24 16:26:12	chin-tastic	heeen: if you're referring to vulkano, there's a `From` impl, so just use `.into()` on your raw one.
2019-10-24 16:27:04	-->	Coldblackice_ (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-10-24 16:27:27	heeen	chin-tastic: I was missing a ref
2019-10-24 16:27:45	heeen	chin-tastic: but it turns out the resulting InstanceExtensions object is just empty
2019-10-24 16:28:51	-->	justanotheruser (justanothe@gateway/vpn/nordvpn/justanotheruser) has joined ##rust
2019-10-24 16:29:14	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 240 seconds)
2019-10-24 16:30:00	chin-tastic	Gross.
2019-10-24 16:32:34	-->	felix34 (~muh@5.2.76.19) has joined ##rust
2019-10-24 16:33:50	felix34	If I want several modules to share a common interface, what's the recommended way to write a set of tests that apply to all the modules (or crates)?
2019-10-24 16:33:55	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-24 16:35:32	ZirconiumX	felix34: That "common interface" is a trait, and you can write a test that takes in that trait as a parameter and runs the test on it
2019-10-24 16:36:37	<--	Coldblackice_ (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 240 seconds)
2019-10-24 16:38:33	felix34	ZirconiumX: ok, and the test will be run on everything that implements the trait, so that e.g the test will verify tht calling .foo() on StructA and StructB is both possible and returns the correct result?
2019-10-24 16:42:03	Kinnison	murla: I *think* it's likely to need to be on rust-lang/rust not rust-lang/cargo, but it's a good starting point :D
2019-10-24 16:43:37	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-24 16:45:00	ZirconiumX	felix34: sure
2019-10-24 16:46:00	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-24 16:46:05	ZirconiumX	Although "calling .foo() on StructA and StructB is ... possible" is mandated by Rust requiring you to implement a function with the same signature as the one in the trait
2019-10-24 16:46:14	ZirconiumX	So if you don't implement the function you get a compile error
2019-10-24 16:46:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-24 16:49:15	<--	ave_milia (ave@gateway/vpn/privateinternetaccess/avemilia) has quit (Quit: f)
2019-10-24 16:49:55	felix34	ZirconiumX: well it could panic at compile time with "TODO: add functionality here" :) the idea is to have the tests verify function to...
2019-10-24 16:51:06	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 16:51:09	ZirconiumX	That's fair
2019-10-24 16:51:17	felix34	* panic at run time
2019-10-24 16:52:53	-->	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has joined ##rust
2019-10-24 16:57:17	-->	b5509cd (50f93895@gateway/web/cgi-irc/kiwiirc.com/ip.80.249.56.149) has joined ##rust
2019-10-24 16:57:55	<--	OmniMancer (~Paul@101.100.137.239) has quit (Quit: Leaving.)
2019-10-24 16:57:59	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-24 17:00:46	asm89	I'm struggling to turn a futures::Stream<T> into a futures::Stream<&T>. Am I wrong in expecting some straightfoward-ish way to do this? My Google fu failing me?
2019-10-24 17:00:59	asm89	For iteration over collections I look at iter and into_iter.
2019-10-24 17:02:12	sfackler	you would need to buffer the entire stream of Ts into a Vec or something like that
2019-10-24 17:03:05	asm89	seems that way
2019-10-24 17:03:15	asm89	but I'm trying to make this streaming
2019-10-24 17:04:02	felix34	asm89: buffer into a channel?
2019-10-24 17:04:41	asm89	I've been using buffer_unordered() from streamext. I guess that's buffering, so buffering elsewhere myself won't hurt.
2019-10-24 17:05:54	asm89	ok, I'll try to shuffle some things around
2019-10-24 17:06:08	asm89	I might up cloning this data for now to unblock myself
2019-10-24 17:06:21	asm89	I guess I need to adjust something in my mental model when it comes to working with iterators vs streams. :)
2019-10-24 17:11:24	jebrosen	I don't think this changes from iterators to streams
2019-10-24 17:12:46	jebrosen	In Iterator<T> or Stream<T> the consumer is responsible for keeping the T alive as long as it needs, in Iterator<&T> or Stream<&T> the producer guarantees all of the items live for some time (usually as long as the container the items are in is alive)
2019-10-24 17:13:50	<--	rrooij (~rrooij@unaffiliated/rroij) has quit (Quit: WeeChat 2.6)
2019-10-24 17:15:52	j`ey	I have this in my Cargo.toml https://paste.rs/90M, but I get warning: unused manifest key: source
2019-10-24 17:15:57	j`ey	what am i missing?
2019-10-24 17:16:05	j`ey	(cargo 1.34)
2019-10-24 17:17:26	j`ey	oh it goes in .cargo/config
2019-10-24 17:21:13	<--	raeken (~quassel@gate.reality-bytes.com) has quit (Ping timeout: 268 seconds)
2019-10-24 17:21:18	-->	raeken_ (~quassel@gate.reality-bytes.com) has joined ##rust
2019-10-24 17:21:37	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 265 seconds)
2019-10-24 17:21:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-24 17:22:06	<--	brainproxy (~michael@pdpc/supporter/gold/brainproxy) has quit (Quit: WeeChat 2.6)
2019-10-24 17:24:11	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-24 17:24:22	-->	lawlesseel (~lawlessee@gateway/tor-sasl/lawlesseel) has joined ##rust
2019-10-24 17:25:50	<--	ellcs (~mantel@212.12.60.67) has quit (Ping timeout: 276 seconds)
2019-10-24 17:26:42	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-24 17:27:15	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 17:27:37	-->	ellcs (~mantel@212.12.60.67) has joined ##rust
2019-10-24 17:35:33	asm89	jebrosen: agreed, but convincing the compiler that the Stream<&T> doesn't live longer than Stream<T> I think is trickier.
2019-10-24 17:36:49	jebrosen	You can't turn an iterator over T into an Iterator over &T, either - I'm not sure what is "trickier" than what here
2019-10-24 17:37:05	<--	ellcs (~mantel@212.12.60.67) has quit (Ping timeout: 265 seconds)
2019-10-24 17:39:48	jebrosen	Slightly related: what wants a Stream<&T> anyway?
2019-10-24 17:40:31	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-24 17:41:59	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-24 17:50:04	<--	b5509cd (50f93895@gateway/web/cgi-irc/kiwiirc.com/ip.80.249.56.149) has quit (Remote host closed the connection)
2019-10-24 17:50:24	murla	Kinnison, but why on rust repo, not cargo one?
2019-10-24 17:50:50	Kinnison	Because I *think* the thing processing the flags after the "--" is the generated test, rather than cargo
2019-10-24 17:51:13	-->	climbingturtle (~climbingt@c213-89-14-151.bredband.comhem.se) has joined ##rust
2019-10-24 17:54:58	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-24 17:57:37	<--	talchas (~user@c-73-222-34-238.hsd1.ca.comcast.net) has quit (Ping timeout: 240 seconds)
2019-10-24 17:58:29	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-10-24 17:59:06	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-24 18:00:35	-->	talchas (~user@c-73-158-252-30.hsd1.ca.comcast.net) has joined ##rust
2019-10-24 18:00:40	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 264 seconds)
2019-10-24 18:00:46	<--	raeken_ (~quassel@gate.reality-bytes.com) has quit (Ping timeout: 265 seconds)
2019-10-24 18:00:55	-->	raeken (~quassel@gate.reality-bytes.com) has joined ##rust
2019-10-24 18:02:27	-->	mszyszko (~mszyszko@2a02:908:1866:7620:1bc7:cc66:b4f3:df17) has joined ##rust
2019-10-25 09:01:51	--	irc: disconnected from server
2019-10-25 09:02:27	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-25 09:02:27	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-25 09:02:27	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-25 09:02:27	--	Channel ##rust: 561 nicks (2 ops, 0 voices, 559 normals)
2019-10-25 09:02:47	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-25 09:10:28	<--	jellie (~zipper@unaffiliated/zipper) has quit (Quit: WeeChat 2.6)
2019-10-25 09:17:48	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-25 09:18:54	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-25 09:22:27	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 09:22:55	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-10-25 09:31:26	<--	arecaceae (root@gateway/vpn/privateinternetaccess/arecaceae) has quit (Remote host closed the connection)
2019-10-25 09:31:50	-->	arecaceae (root@gateway/vpn/privateinternetaccess/arecaceae) has joined ##rust
2019-10-25 09:36:52	-->	crockwork (~crockwork@155.98.132.1) has joined ##rust
2019-10-25 09:45:27	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-25 09:45:27	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-25 09:45:27	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-25 09:45:27	--	Channel ##rust: 563 nicks (2 ops, 0 voices, 561 normals)
2019-10-25 09:45:42	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-25 09:46:09	<--	heftig (heftig@archlinux/developer/heftig) has quit (Quit: heftig)
2019-10-25 09:46:46	-->	heftig (heftig@archlinux/developer/heftig) has joined ##rust
2019-10-25 09:47:17	<--	OmniMancer (~Paul@101.100.137.239) has quit (Quit: Leaving.)
2019-10-25 09:55:47	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-25 09:58:15	-->	matthias_bgg (~mbgg@37.223.137.234) has joined ##rust
2019-10-25 09:59:42	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 09:59:59	<--	Arnavion (arnavion@unaffiliated/arnavion) has quit (Remote host closed the connection)
2019-10-25 10:00:13	-->	Arnavion (arnavion@unaffiliated/arnavion) has joined ##rust
2019-10-25 10:02:42	<--	guzzlefry (~guzzlefry@unaffiliated/guzzlefry) has quit (Ping timeout: 246 seconds)
2019-10-25 10:03:50	-->	cseder (~weechat@2a01:79e:3401:d0f8:6db9:3e80:8f1f:ffb2) has joined ##rust
2019-10-25 10:10:50	<--	cseder (~weechat@2a01:79e:3401:d0f8:6db9:3e80:8f1f:ffb2) has quit (Quit: $sudo rm -rf / # Because Life Sucks)
2019-10-25 10:15:20	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-25 10:17:42	-->	pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined ##rust
2019-10-25 10:18:55	<--	safe (~safe@unaffiliated/safe) has quit (Read error: Connection reset by peer)
2019-10-25 10:22:11	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Remote host closed the connection)
2019-10-25 10:22:24	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-25 10:28:01	-->	guzzlefry (~guzzlefry@unaffiliated/guzzlefry) has joined ##rust
2019-10-25 10:28:08	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-25 10:31:41	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-25 10:31:59	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-25 10:32:16	-->	karoofish (karoofish@gateway/shell/suchznc/x-qrhbazectpylbhiu) has joined ##rust
2019-10-25 10:36:40	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-25 10:40:40	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 10:42:32	-->	jamm (~jamm@unaffiliated/jamm) has joined ##rust
2019-10-25 10:45:50	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-25 10:46:04	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Ping timeout: 252 seconds)
2019-10-25 10:48:15	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-25 10:50:12	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-25 10:50:28	<--	proycon (~proycon@ip4da1229d.direct-adsl.nl) has quit (Remote host closed the connection)
2019-10-25 10:56:33	-->	AbedB_ (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has joined ##rust
2019-10-25 10:57:32	<--	AbedB (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has quit (Ping timeout: 276 seconds)
2019-10-25 10:59:41	-->	aLeSD (~aLeSD@host241-59-dynamic.171-212-r.retail.telecomitalia.it) has joined ##rust
2019-10-25 11:00:05	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-10-25 11:08:14	felix34	how do I look at documentation offline for a crate? for example I can do `rustup doc std::io` but not `rustup doc reqwest`
2019-10-25 11:09:40	oherrala	if you have the crate as a dependency for project, run cargo doc
2019-10-25 11:10:10	oherrala	and it will build the docs for your project as well as all dependencies
2019-10-25 11:12:12	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-25 11:13:28	<--	crockwork (~crockwork@155.98.132.1) has quit (Quit: crockwork)
2019-10-25 11:13:29	-->	ellcs (~mantel@212.12.60.67) has joined ##rust
2019-10-25 11:16:00	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-25 11:17:29	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 11:17:37	jbg	felix34: the docs are in target/doc - to open the docs for reqwest open target/doc/reqwest/index.html - that assumes that you have reqwest as a dep of course.
2019-10-25 11:18:34	felix34	oherrala: thanks! currently building, we'll see if that does it
2019-10-25 11:19:06	oherrala	jbg, felix34; or cargo doc --open
2019-10-25 11:20:10	felix34	why am I getting unused code warnings from code that is only referenced by a `mod` statement in `lib.rs`?
2019-10-25 11:23:23	oherrala	felix34: if the lib itself is not using the function in question and it's not made public, then it can be considered as unused
2019-10-25 11:23:25	Kinnison	if it's not used, and it's not public, then it will give that warning
2019-10-25 11:23:29	Kinnison	snap!
2019-10-25 11:23:55	felix34	oherrala: aha, ok
2019-10-25 11:25:23	felix34	oherrala: `cargo doc` built a bunch of stuff and I can open the docs with `cargo doc --open` butit's all specific to this crate... is thre no general way to get crate docs accessible, or to view just the docs for a specific crate (like reqwest)?
2019-10-25 11:26:01	felix34	would ideally like to be able to read crate docs offline while writing code, rather than after the code is written / etc
2019-10-25 11:26:25	Kinnison	You have to have downloaded and built the docs for a crate in order to view them offline
2019-10-25 11:26:34	Kinnison	hence `cargo doc` as the suggestion
2019-10-25 11:26:47	felix34	ok, well good to know then
2019-10-25 11:26:49	Kinnison	On the left you should see a list of all the deps so you can pick whatever dep crate you wanted
2019-10-25 11:26:59	Kinnison	Otherwise you're essentially asking for an offline mirror of docs.rs :D
2019-10-25 11:27:38	felix34	yeah, or just a central directory in my home dir with all the docs from all the crates I've downloaded in the past
2019-10-25 11:28:12	Kinnison	:D
2019-10-25 11:28:20	Kinnison	Not an awful idea
2019-10-25 11:30:44	Moongoodgirl	install crate docs in `~/.cargo/share/doc`?
2019-10-25 11:35:27	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-25 11:42:58	<--	cmdaemon (cmdaemon@gateway/vpn/privateinternetaccess/cmdaemon) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-25 11:49:47	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-25 11:51:20	-->	dn2k (~er@unaffiliated/dn2k) has joined ##rust
2019-10-25 11:52:51	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-25 11:58:03	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 12:06:27	-->	Elfo (~Elfo@unaffiliated/elfo) has joined ##rust
2019-10-25 12:06:50	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-10-25 12:12:20	<--	infinee (~infinee@061093245022.static.ctinets.com) has quit (Read error: Connection reset by peer)
2019-10-25 12:12:27	-->	murla (~murla@146.120.13.152) has joined ##rust
2019-10-25 12:12:49	-->	infinee (~infinee@061093245022.static.ctinets.com) has joined ##rust
2019-10-25 12:18:47	<--	dutchie (~jholland@unaffiliated/dutchie) has quit (Ping timeout: 276 seconds)
2019-10-25 12:18:47	<--	richardwhiuk (richardwhi@scarlet.richardwhiuk.com) has quit (Ping timeout: 276 seconds)
2019-10-25 12:20:15	-->	dutchie (~jholland@unaffiliated/dutchie) has joined ##rust
2019-10-25 12:26:53	-->	crockwork (~crockwork@66.205.193.158) has joined ##rust
2019-10-25 12:35:18	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-25 12:40:11	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 12:41:06	-->	cukier (sid268358@gateway/web/irccloud.com/x-ldkrcvvgqtspqkgn) has joined ##rust
2019-10-25 12:49:21	<--	murla (~murla@146.120.13.152) has quit (Ping timeout: 265 seconds)
2019-10-25 12:51:10	-->	b5509cd (4d679bb8@gateway/web/cgi-irc/kiwiirc.com/ip.77.103.155.184) has joined ##rust
2019-10-25 12:56:44	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Ping timeout: 260 seconds)
2019-10-25 12:59:09	<--	airwind (~belovent@cr-01.anx09.lju.si.anexia-it.com) has quit (Quit: airwind)
2019-10-25 12:59:32	-->	murla (~murla@146.120.13.152) has joined ##rust
2019-10-25 13:04:14	-->	ytain (~ghfg@2607:f2c0:925e:3500:9c63:84a9:db64:825e) has joined ##rust
2019-10-25 13:11:21	<--	b5509cd (4d679bb8@gateway/web/cgi-irc/kiwiirc.com/ip.77.103.155.184) has quit (Remote host closed the connection)
2019-10-25 13:12:04	<--	murla (~murla@146.120.13.152) has quit (Ping timeout: 265 seconds)
2019-10-25 13:14:47	<--	jamm (~jamm@unaffiliated/jamm) has quit (Quit: Leaving)
2019-10-25 13:15:59	-->	OmniMancer (~Paul@101.100.137.239) has joined ##rust
2019-10-25 13:17:28	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-25 13:22:39	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 13:25:06	<--	hexfive (~hexfive@50.35.80.237) has quit (Quit: WeeChat 2.6)
2019-10-25 13:26:03	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 246 seconds)
2019-10-25 13:33:44	-->	b5509cd (4d679bb8@gateway/web/cgi-irc/kiwiirc.com/ip.77.103.155.184) has joined ##rust
2019-10-25 13:38:05	<--	narispo (~narispo@2a01:e35:2fbc:8b90:843d:a277:747d:479e) has quit (Ping timeout: 276 seconds)
2019-10-25 13:38:37	<--	jgkamat (~jgkamat@qutebrowser/dev/jgkamat) has quit (Ping timeout: 240 seconds)
2019-10-25 13:44:00	-->	narispo (~narispo@2a01:e35:2fbc:8b90:843d:a277:747d:479e) has joined ##rust
2019-10-25 13:47:11	<--	matthias_bgg (~mbgg@37.223.137.234) has quit (Ping timeout: 276 seconds)
2019-10-25 13:50:20	jbg	i wonder how big that folder would get. i have 20 or so fairly large rust projects, and the dep tree often has several versions of some crates (despite me trying to submit PRs as often as possible to get people to update deps)
2019-10-25 13:50:36	jbg	i guess any centralised doc folder would need to keep docs for every version you use of every crate you use
2019-10-25 13:51:08	jbg	it would presumably grow without bounds, since whatever maintains it wouldn't really know if you stopped using an old version or if you just started using a newer version (but still have the old version around)
2019-10-25 13:51:12	jbg	or maybe you'd only do direct deps?
2019-10-25 13:51:32	jbg	so you'd have a smaller version of the same problem
2019-10-25 13:55:39	<--	Smjert (~Smjert@unaffiliated/smjert) has quit (Quit: ZNC 1.6.1 - http://znc.in)
2019-10-25 13:56:54	-->	Smjert (~Smjert@unaffiliated/smjert) has joined ##rust
2019-10-25 13:58:55	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-25 13:58:56	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 252 seconds)
2019-10-25 13:59:35	oherrala	cargo doc already build docs of dependencies of a project so its quite easy to keep all necessary docs at hand for correct versions of deps.
2019-10-25 14:00:22	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Remote host closed the connection)
2019-10-25 14:02:19	-->	jgkamat (~jgkamat@qutebrowser/dev/jgkamat) has joined ##rust
2019-10-25 14:04:43	-->	AbedB__ (~AbedBhuty@173.239.197.23) has joined ##rust
2019-10-25 14:04:46	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 14:05:07	jbg	oherrala: yes, i wasn't referring to any difficulty, but rather the constantly-growing nature of a hypothetical ~/.cargo/share/doc
2019-10-25 14:05:39	jbg	it would be very easy to make cargo doc output all its docs there, but every time a dep updates you'd get another version of the docs of that dep added there
2019-10-25 14:06:00	jbg	and you wouldn't know if you could remove the old version, because another crate might depend on that old version
2019-10-25 14:06:41	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-25 14:08:28	<--	AbedB_ (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has quit (Ping timeout: 264 seconds)
2019-10-25 14:10:17	oherrala	my project with 334 crates generated 548MB of docs and 24k files. That's average of 1.7MB/crate and 73 files/crate.
2019-10-25 14:11:01	oherrala	I was actually expecting more files per crate
2019-10-25 14:11:05	Yaniel	that's a lot of html
2019-10-25 14:12:23	-->	AbedB_ (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has joined ##rust
2019-10-25 14:12:33	oherrala	Yaniel: yeah, html is really poor way to distribute docs. It's lots of small files. Really I/O intensive.
2019-10-25 14:12:55	oherrala	as has been seen with Rust's docs itself.
2019-10-25 14:13:22	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-25 14:13:44	Yaniel	I don't think the number of files is the problem
2019-10-25 14:15:08	-->	fredmorcos (~fredmorco@141.143.213.11) has joined ##rust
2019-10-25 14:15:08	<--	fredmorcos (~fredmorco@141.143.213.11) has quit (Remote host closed the connection)
2019-10-25 14:15:09	-->	Nahual (~Nahual@unaffiliated/nahual) has joined ##rust
2019-10-25 14:15:42	Yaniel	and html itself wouldn't even be that bad for the most part
2019-10-25 14:15:47	-->	fredmorcos (~fredmorco@141.143.213.11) has joined ##rust
2019-10-25 14:15:49	<--	fredmorcos (~fredmorco@141.143.213.11) has quit (Client Quit)
2019-10-25 14:16:03	<--	AbedB__ (~AbedBhuty@173.239.197.23) has quit (Ping timeout: 240 seconds)
2019-10-25 14:16:11	Yaniel	but looking at the Iterator page there's a few hundred kb in fonts and a megabyte or two of javascript
2019-10-25 14:16:20	-->	baali (~baali@59.98.239.163) has joined ##rust
2019-10-25 14:16:43	-->	AbedB__ (~AbedBhuty@173.239.197.142) has joined ##rust
2019-10-25 14:17:41	jbg	i ran `cargo doc` on every crate in my ~/dev/ and ended up with ~9 GiB of docs
2019-10-25 14:18:07	jbg	which is workable, but the unbounded growth of a centralised folder as any dependency makes an update would probably become unworkable quickly
2019-10-25 14:18:22	Yaniel	how smart is it even wrt sharing said fonts and js between crates
2019-10-25 14:18:40	jbg	unless you did it as something that indexed the crates you had so that it could know when it could prune something
2019-10-25 14:19:08	jbg	which requires knowledge of where you keep your crates, so probably out of scope for `cargo` itself
2019-10-25 14:19:11	Moongoodgirl	Indexing every project that exists on the system seems impractical
2019-10-25 14:19:13	Moongoodgirl	yeah
2019-10-25 14:19:37	jbg	but without that, you can't know if, say, phf==0.7.1 is still used by some crate on your system or not, so you can't know if you can ditch the docs for it
2019-10-25 14:19:50	-->	fredmorcos (~fredmorco@141.143.213.11) has joined ##rust
2019-10-25 14:19:50	<--	fredmorcos (~fredmorco@141.143.213.11) has quit (Client Quit)
2019-10-25 14:20:13	<--	Derriick (~Derriick@254.218.203.77.rev.sfr.net) has quit (Ping timeout: 265 seconds)
2019-10-25 14:20:31	Moongoodgirl	You could use heuristics based on atimes, present versions, and disk usage to decide when to drop a particular doc
2019-10-25 14:20:42	<--	AbedB_ (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has quit (Ping timeout: 265 seconds)
2019-10-25 14:20:55	-->	AbedB_ (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has joined ##rust
2019-10-25 14:21:03	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-10-25 14:21:11	jbg	that would be quite annoying when i encounter a problem with something and find that the old version of xyz crate that it depends on had its docs pruned because i never looked at them before
2019-10-25 14:21:32	jbg	i probably look at some crate's docs for the first time on a daily basis
2019-10-25 14:21:41	<--	AbedB__ (~AbedBhuty@173.239.197.142) has quit (Ping timeout: 268 seconds)
2019-10-25 14:22:12	Moongoodgirl	…that makes it sound like you never want to delete docs.
2019-10-25 14:22:15	jbg	and running `cargo tree -d` or similar on any fairly large project will show that the existence of a newer version doesn't make it less likely that you're still using an older version
2019-10-25 14:22:23	Yaniel	some sort of rustdocd could potentially be neat actually
2019-10-25 14:22:24	jbg	i never want to delete docs for something that is still depended on
2019-10-25 14:22:56	Moongoodgirl	…then you have no choice but to somehow track all of the projects present.
2019-10-25 14:23:19	jbg	exactly - either that or let your doc folder grow continuously with the only pruning strategy being "delete it and recreate it"
2019-10-25 14:23:20	Yaniel	it could recursively crawl projects as cargo touches them (assuming cargo gets hooks for such things)
2019-10-25 14:23:28	jbg	people seem to accept that kind of behaviour from things like docker, so maybe that would be ok :D
2019-10-25 14:23:37	jbg	but yeah, i would use a cargodocd
2019-10-25 14:23:39	<--	L29Ah (~L29Ah@unaffiliated/l29ah) has quit (Ping timeout: 240 seconds)
2019-10-25 14:23:48	Yaniel	and provide a central deduplicated archive of docs that IDEs etc could hook into
2019-10-25 14:23:52	jbg	Yaniel: nice idea. then it doesn't need to know where you keep your projects
2019-10-25 14:23:59	Moongoodgirl	I would prefer docs getting deleted and having to be regenerated
2019-10-25 14:24:38	jbg	hmm true, you could just generate the docs on-the-fly as needed
2019-10-25 14:24:41	Yaniel	the daemon can prune docs periodically if their respective projects are gone
2019-10-25 14:24:43	jbg	there's already a central storage of the crates
2019-10-25 14:24:50	Yaniel	or if there is storage pressure
2019-10-25 14:24:54	jbg	cargodocd could just be a web server
2019-10-25 14:25:01	Yaniel	maybe keep only a shortened version
2019-10-25 14:25:10	jbg	that generates docs on-the-fly
2019-10-25 14:25:17	jbg	the central storage then just becomes the cache of cargodocd
2019-10-25 14:25:21	Moongoodgirl	jbg: with the heuristics, note that the third heuristic could work both ways and be tunable. You could set a minimum size to start pruning.
2019-10-25 14:25:22	Yaniel	say, just a listing of function signatures
2019-10-25 14:26:11	Moongoodgirl	Yaniel: eh, that seems out of scope for this project. It more rustdoc's domain.
2019-10-25 14:26:13	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-25 14:26:20	Yaniel	possible
2019-10-25 14:26:42	Yaniel	hmm, do docs change depending on enabled features?
2019-10-25 14:26:52	jbg	usually docs are made with all features enabled
2019-10-25 14:26:54	Yaniel	or does cargo doc always cover everything
2019-10-25 14:27:08	-->	fredmorcos (~fredmorco@141.143.213.11) has joined ##rust
2019-10-25 14:27:16	<--	fredmorcos (~fredmorco@141.143.213.11) has quit (Remote host closed the connection)
2019-10-25 14:27:22	Yaniel	like, even when two features are mutually exclusive (is that even supported?)
2019-10-25 14:27:29	Moongoodgirl	I think they do change based on features, so you'd have to make sure to enable all features when invoking `cargo doc`?
2019-10-25 14:27:29	jbg	the simplest solution to my needs (which might differ from other people's needs), i think, would be just something that can serve docs for any crate i have downloaded
2019-10-25 14:27:42	Moongoodgirl	I don't think features can be mutually exclusive (at the cargo level)
2019-10-25 14:27:44	jbg	mutually exclusive features aren't a thing, i think - features are purely additive
2019-10-25 14:28:05	Moongoodgirl	you can cause features to be mutually exclusive though
2019-10-25 14:28:33	Moongoodgirl	consider: `#[cfg(feature(bar))] struct Foo; #[cfg(feature(baz))] struct Foo;`
2019-10-25 14:28:48	Moongoodgirl	if both features are enabled, this will fail to build
2019-10-25 14:30:36	jbg	yeah - i think that is contrary to the intent of features, and i think your docs.rs build would fail if you did that
2019-10-25 14:30:39	jbg	but it's indeed possible
2019-10-25 14:30:55	jbg	i am pretty sure docs.rs builds docs with all features enabled
2019-10-25 14:31:16	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-25 14:32:04	Yaniel	could also be interesting to have this cargodocd running on a tmpfs
2019-10-25 14:32:20	Yaniel	if one has a lot of RAM available anyway
2019-10-25 14:32:51	-->	AbedB__ (~AbedBhuty@173.239.197.23) has joined ##rust
2019-10-25 14:33:14	jbg	i'm not sure that i'm so concerned with the performance of loading my docs that the difference between ssd and ram would matter
2019-10-25 14:35:36	jbg	once the docs are generated they should load extremely fast even if it's spinning rust they're loading from. if they have to be generated (never looked at before, or pruned out due to storage pressure, or whatever) then i guess there'd be a multi-second latency to generate them anyway, so where you store them becomes even less significant
2019-10-25 14:36:50	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 14:37:14	<--	AbedB_ (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has quit (Ping timeout: 276 seconds)
2019-10-25 14:37:34	-->	AbedB_ (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has joined ##rust
2019-10-25 14:38:51	<--	AbedB__ (~AbedBhuty@173.239.197.23) has quit (Ping timeout: 240 seconds)
2019-10-25 14:38:57	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 268 seconds)
2019-10-25 14:39:54	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-25 14:40:20	oherrala	jbg: docs.rs builds with default features only
2019-10-25 14:40:28	-->	AbedB__ (~AbedBhuty@173.239.197.142) has joined ##rust
2019-10-25 14:40:36	jbg	oherrala: ah, glad to be corrected. good to know
2019-10-25 14:40:46	oherrala	jbg: see for example this crate which doesn't have default features: https://docs.rs/buffering/
2019-10-25 14:41:03	jbg	now that i think about it, crates with alternative implementations for things (e.g. platform-specific) might have mutually-exclusive features in the manner that Moongoodgirl described
2019-10-25 14:41:11	jbg	right
2019-10-25 14:41:53	oherrala	jbg: and crate maintainer can control what features docs.rs builds, see https://docs.rs/about under "Metadata for custom builds"
2019-10-25 14:42:45	-->	Derriick (~Derriick@254.218.203.77.rev.sfr.net) has joined ##rust
2019-10-25 14:44:17	<--	AbedB_ (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has quit (Ping timeout: 240 seconds)
2019-10-25 14:46:22	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-25 14:46:34	-->	lawlesseel (~lawlessee@gateway/tor-sasl/lawlesseel) has joined ##rust
2019-10-25 14:49:03	<--	dn2k (~er@unaffiliated/dn2k) has quit (Ping timeout: 245 seconds)
2019-10-25 14:49:11	oherrala	Yaniel: When writing files, the amount of files is a huge issue. Each file needs many syscalls: open, write, close. Writing thousands of small files is way too slower than writing single big one. Same is also true for reading files.
2019-10-25 14:49:59	oherrala	after the files have hit the disc, it's usually not big issue, except if you need to read many of them as fast as possible.
2019-10-25 14:51:44	oherrala	See for example here: https://github.com/rust-lang/rustup.rs/issues/1540#issuecomment-494985001 "Both 'rustc' and 'rust-std' components claimed a somewhat constant install rate of 11.7 MiB/s; 'rust-docs' varied between as low as 15 KiB/s and as high as 300 KiB/s."
2019-10-25 14:52:55	Moongoodgirl	neo fs api archive support?
2019-10-25 14:53:11	Moongoodgirl	and|or vectored file operations
2019-10-25 14:53:45	oherrala	Yaniel: and there's some notes what rustup has had to do to speed things up: https://www.reddit.com/r/rust/comments/brtec1/rustup_1183_released/eogpfgr/
2019-10-25 14:54:01	Moongoodgirl	or maybe even just a function that can atomically create a file with all the contents and metadata in just one syscall
2019-10-25 14:54:25	<--	brnzz (~brnzz@185.104.181.38) has left ##rust ("The Lounge - https://thelounge.chat")
2019-10-25 14:54:27	Moongoodgirl	that would be useful for other things too :P
2019-10-25 14:56:34	oherrala	Moongoodgirl: no wonder many things use databases instead of disc directly
2019-10-25 14:57:22	Moongoodgirl	I think that's a very small part of the story of choosing a database over flat file.
2019-10-25 14:58:43	-->	tmager (~Thunderbi@146.115.18.74) has joined ##rust
2019-10-25 15:02:08	-->	ZoomZoomZoom (~Zoom@91.151.203.4) has joined ##rust
2019-10-25 15:05:11	<--	lauromoura (~lauromour@2804:7f5:f380:aeee:1df6:5b4a:502f:b01d) has quit (Ping timeout: 276 seconds)
2019-10-25 15:07:22	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-10-25 15:09:03	-->	dozn__ (~dozn@S01069050ca3c43c3.vs.shawcable.net) has joined ##rust
2019-10-25 15:11:41	<--	stzsch (~no@2804:14d:4cd1:823f:5604:a6ff:fe8e:d858) has quit (Ping timeout: 276 seconds)
2019-10-25 15:11:57	<--	dozn_ (~dozn@S01069050ca3c43c3.vs.shawcable.net) has quit (Ping timeout: 240 seconds)
2019-10-25 15:13:10	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 15:13:29	<--	pedro4 (~pedro4@134.19.179.195) has quit (Ping timeout: 268 seconds)
2019-10-25 15:17:08	-->	stzsch (~no@2804:14d:4cd1:823f:5604:a6ff:fe8e:d858) has joined ##rust
2019-10-25 15:19:23	<--	fuzen (fuzen@fsf/member/Fuzen) has quit (Quit: ZNC - https://znc.in)
2019-10-25 15:20:54	<--	AbedB__ (~AbedBhuty@173.239.197.142) has quit (Ping timeout: 268 seconds)
2019-10-25 15:21:26	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-25 15:30:22	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-25 15:30:23	-->	lauromoura (~lauromour@2804:7f5:f380:1317:1df6:5b4a:502f:b01d) has joined ##rust
2019-10-25 15:30:39	-->	fuzen (fuzen@fsf/member/Fuzen) has joined ##rust
2019-10-25 15:38:22	-->	jenny-m (~jdm-@75.98.19.134) has joined ##rust
2019-10-25 15:42:04	<--	fuzen (fuzen@fsf/member/Fuzen) has quit (Quit: ZNC - https://znc.in)
2019-10-25 15:43:26	-->	fuzen (~fuzen@fsf/member/Fuzen) has joined ##rust
2019-10-25 15:46:03	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 246 seconds)
2019-10-25 15:48:42	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-25 15:51:01	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 15:51:57	felix34	my unit tests have the `user super::*` line in them. the compiler warns me this is an unused import, but when I take it out my tests stop working because things stop being found in that scope. what's going on?
2019-10-25 15:52:22	felix34	* that should be `use super::*`
2019-10-25 15:53:04	faern	felix34: Sounds like a bug :/ Can you try narrowing it down to a small example that you could maybe post on the playground or something?
2019-10-25 15:53:28	Moongoodgirl	Not necessarily a bug. Might just be interactions with conditional compilation.
2019-10-25 15:53:57	felix34	Moongoodgirl: I'm not doing anything special...
2019-10-25 15:54:13	Moongoodgirl	yeah, but, tests.
2019-10-25 15:54:35	<--	narispo (~narispo@2a01:e35:2fbc:8b90:843d:a277:747d:479e) has quit (Ping timeout: 276 seconds)
2019-10-25 15:54:51	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-25 15:56:14	<--	lawlesseel (~lawlessee@gateway/tor-sasl/lawlesseel) has quit (Remote host closed the connection)
2019-10-25 15:57:18	-->	lawlesseel (~lawlessee@gateway/tor-sasl/lawlesseel) has joined ##rust
2019-10-25 15:57:22	<--	kuldeep (~kuldeep@unaffiliated/kuldeepdhaka) has quit (Remote host closed the connection)
2019-10-25 15:57:37	jbg	yeah, i've had something similar before when the tests themselves are conditionally compiled but the `use` line isn't
2019-10-25 15:57:44	<--	lawlesseel (~lawlessee@gateway/tor-sasl/lawlesseel) has quit (Remote host closed the connection)
2019-10-25 15:57:51	<--	RayS (~raysl@sdf1.xen.prgmr.com) has quit (Quit: ZNC 1.7.3 - https://znc.in)
2019-10-25 15:58:09	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-25 15:58:09	jbg	so when you're doing a normal build, since the tests are not compiled, it *is* an unused import
2019-10-25 15:58:40	felix34	jbg: aha, so how do I mark the `mod test` bundle for only compiling when testing?
2019-10-25 15:58:51	-->	narispo (~narispo@37.171.34.46) has joined ##rust
2019-10-25 15:59:59	-->	RayS (~raysl@sdf1.xen.prgmr.com) has joined ##rust
2019-10-25 16:00:08	jbg	just put #[cfg(test)] on it
2019-10-25 16:02:11	felix34	jbg: that did it, thanks!
2019-10-25 16:03:38	<--	Nahual (~Nahual@unaffiliated/nahual) has quit (Ping timeout: 245 seconds)
2019-10-25 16:09:41	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-25 16:16:37	-->	Nahual (~Nahual@unaffiliated/nahual) has joined ##rust
2019-10-25 16:19:15	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-25 16:25:15	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 16:26:54	-->	kolyad (~kolyad@196.245.151.213) has joined ##rust
2019-10-25 16:27:08	-->	NicTrib (~NicTrib@2600:380:5056:247e:1d64:e859:ccda:ee65) has joined ##rust
2019-10-25 16:27:29	<--	kolyad (~kolyad@196.245.151.213) has quit (Client Quit)
2019-10-25 16:30:04	<--	NicTrib (~NicTrib@2600:380:5056:247e:1d64:e859:ccda:ee65) has quit (Remote host closed the connection)
2019-10-25 16:32:37	esotericnonsense	are there any linters that can comprehensively cover the various 'possible gotchas' in rust code? for example, highlight expect, unwrap, highlight iterating a result or option, anything that's an "oops I ignored an error condition here by mistake"
2019-10-25 16:32:47	esotericnonsense	perhaps clippy or cargo check with some strict option set or something?
2019-10-25 16:33:01	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-25 16:33:11	esotericnonsense	or like #[disallow(esotericnonsense_was_lazy)] ?
2019-10-25 16:34:36	Moongoodgirl	unwrap() and especially expect() aren't antipatterns
2019-10-25 16:35:08	Moongoodgirl	a lint on implicitly iterating over Option or Result, though…I'd use that
2019-10-25 16:44:14	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-25 16:48:27	jbg	unwrap() is definitely considered an antipattern in some of our code
2019-10-25 16:48:58	-->	matthias_bgg (~mbgg@95.169.226.6) has joined ##rust
2019-10-25 16:49:01	jbg	not to the level of "this definitely indicates a problem", but we generally have a comment next to any use of unwrap() justifying it if it's not obvious
2019-10-25 16:50:25	jbg	we'd definitely appreciate some lint that pointed them out. esotericnonsense, i don't know of one
2019-10-25 16:51:32	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Ping timeout: 268 seconds)
2019-10-25 16:52:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-25 16:53:20	<--	fuzen (~fuzen@fsf/member/Fuzen) has quit (Quit: ZNC - https://znc.in)
2019-10-25 16:53:57	-->	fuzen (fuzen@fsf/member/Fuzen) has joined ##rust
2019-10-25 16:54:23	-->	murla (~murla@146.120.13.152) has joined ##rust
2019-10-25 16:57:22	-->	AbedB (~AbedBhuty@bzq-79-179-37-110.red.bezeqint.net) has joined ##rust
2019-10-25 16:58:25	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 17:00:20	<--	ellcs (~mantel@212.12.60.67) has quit (Remote host closed the connection)
2019-10-25 17:04:48	<--	baali (~baali@59.98.239.163) has quit (Quit: Leaving.)
2019-10-25 17:05:02	<--	Xatenev (~I@87.190.19.178) has quit (Quit: Leaving)
2019-10-25 17:05:48	<--	slomo (~slomo@unaffiliated/slomo) has quit (Read error: Connection reset by peer)
2019-10-25 17:06:06	-->	slomo (~slomo@unaffiliated/slomo) has joined ##rust
2019-10-25 17:07:57	<--	RayS (~raysl@sdf1.xen.prgmr.com) has quit (Quit: ZNC 1.7.5 - https://znc.in)
2019-10-25 17:10:16	-->	RayS (~raysl@sdf1.xen.prgmr.com) has joined ##rust
2019-10-25 17:10:43	<--	ZoomZoomZoom (~Zoom@91.151.203.4) has quit (Quit: Leaving)
2019-10-25 17:12:15	<--	jenny-m (~jdm-@75.98.19.134) has quit (Quit: Leaving...)
2019-10-25 17:12:30	<--	efm (~efm@vpn.tummy.com) has quit (Remote host closed the connection)
2019-10-25 17:25:04	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-25 17:25:04	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-25 17:25:04	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-25 17:25:04	--	Channel ##rust: 568 nicks (2 ops, 0 voices, 566 normals)
2019-10-25 17:25:20	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-25 17:28:13	<--	_Vi (~vi@2001:470:7bd6:1000::2) has quit (Ping timeout: 245 seconds)
2019-10-25 17:29:41	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-25 17:31:08	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 245 seconds)
2019-10-25 17:34:28	<--	b5509cd (4d679bb8@gateway/web/cgi-irc/kiwiirc.com/ip.77.103.155.184) has quit (Quit: Ping timeout (120 seconds))
2019-10-25 17:34:57	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-25 17:35:40	-->	cmdaemon (cmdaemon@gateway/vpn/privateinternetaccess/cmdaemon) has joined ##rust
2019-10-25 17:36:56	-->	jenny-m (~jdm-@2620:101:80f2:224:a53e:9214:b931:a272) has joined ##rust
2019-10-25 17:37:39	-->	Deesl (~bsdboy@redhat/deesl) has joined ##rust
2019-10-25 17:45:38	<--	stalled (~stalled@unaffiliated/stalled) has quit (Ping timeout: 265 seconds)
2019-10-25 17:48:26	delYsid	Is there a macro somewhere that provides an impl for FromStr for an enum?
2019-10-25 17:48:54	-->	mszyszko (~mszyszko@185.244.214.211) has joined ##rust
2019-10-25 17:49:00	jbg	enum_utils has a derive for FromStr
2019-10-25 17:49:18	jbg	i think enum_derive also does
2019-10-25 17:51:37	<--	narispo (~narispo@37.171.34.46) has quit (Ping timeout: 240 seconds)
2019-10-25 17:52:21	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-25 17:54:30	-->	narispo (~narispo@2a01:e35:2fbc:8b90:843d:a277:747d:479e) has joined ##rust
2019-10-25 17:55:04	-->	stephaneyfx (~stephaney@184.68.160.234) has joined ##rust
2019-10-25 17:56:13	<--	slomo (~slomo@unaffiliated/slomo) has quit (Quit: Leaving)
2019-10-28 09:59:47	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-28 09:59:47	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-28 09:59:47	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-28 09:59:47	--	Channel ##rust: 562 nicks (2 ops, 0 voices, 560 normals)
2019-10-28 10:00:03	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-28 10:11:32	<--	eythian (~quassel@fsf/member/eythian) has quit (Quit: No Ping reply in 180 seconds.)
2019-10-28 10:13:25	-->	eythian (~quassel@fsf/member/eythian) has joined ##rust
2019-10-28 10:19:23	-->	aLeSD (~aLeSD@host241-59-dynamic.171-212-r.retail.telecomitalia.it) has joined ##rust
2019-10-28 10:20:46	<--	slomo (~slomo@unaffiliated/slomo) has quit (Read error: Connection reset by peer)
2019-10-28 10:21:33	-->	slomo (~slomo@unaffiliated/slomo) has joined ##rust
2019-10-28 10:27:47	leaves	With Rust 2018, are there still situations where "extern crate" is useful? I've found I could replace all my uses of "extern crate" with simple "use", even for macro crates. But I still see a lot of people use "extern crate" ...
2019-10-28 10:28:09	leaves	(See https://doc.rust-lang.org/edition-guide/rust-2018/macros/macro-changes.html)
2019-10-28 10:28:10	j`ey	leaves: in new code?
2019-10-28 10:28:30	j`ey	maybe it's 2015 code that hasnt been converted yet, or they want to remain compatible with older compilers
2019-10-28 10:28:30	leaves	j`ey: I think so.
2019-10-28 10:28:59	leaves	right -- but I wonder if "extern crate" still can do something that "use" cannot?
2019-10-28 10:29:48	j`ey	I feel there may be... but, something about macros, but I cant remembeer exactly :(
2019-10-28 10:31:24	Yaniel	the fact that #[macro_use] still exists
2019-10-28 10:31:51	Yaniel	and some crates have inter-dependent macros so you must have them all in scope
2019-10-28 10:32:41	Yaniel	I think macros are now also namespaced, which #[macro_use] extern crate foo; bypasses
2019-10-28 10:32:41	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 246 seconds)
2019-10-28 10:39:08	<--	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has quit (Read error: Connection reset by peer)
2019-10-28 10:39:21	-->	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has joined ##rust
2019-10-28 10:40:31	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-28 10:40:35	-->	tsaka__ (~torstein@ip5b403b7b.dynamic.kabel-deutschland.de) has joined ##rust
2019-10-28 10:44:17	ycjung	Hi all. I'm starting a new cargo app project. Is it a good practice to always add a separate library target besides the main app? I'm writing the code to prototype some algorithm and the main app will be a demo of it.
2019-10-28 10:44:20	faern	I quite often see newly updated crates still having `extern crate` in their documentation examples and README etc. I assume this is just because they did not update the docs yet.
2019-10-28 10:45:12	-->	kuznero (~kuznero@5.254.82.116) has joined ##rust
2019-10-28 10:46:35	kuznero	Hi All! I have probably a stupid question. At some point in my program I need to read from stdin of a current process and simulate user has typed something (by writing to stdout?): https://pastebin.com/0humg2BS Please help, as provided example can read from stdin only when user really types, but not when I write to stdout...
2019-10-28 10:47:16	<--	slomo (~slomo@unaffiliated/slomo) has quit (Quit: Leaving)
2019-10-28 10:47:26	-->	slomo (~slomo@unaffiliated/slomo) has joined ##rust
2019-10-28 10:49:17	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-10-28 10:51:08	<--	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has quit (Remote host closed the connection)
2019-10-28 10:51:21	-->	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has joined ##rust
2019-10-28 10:53:23	-->	__gotcha1 (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-28 10:53:38	<--	tsaka__ (~torstein@ip5b403b7b.dynamic.kabel-deutschland.de) has quit (Ping timeout: 245 seconds)
2019-10-28 10:56:27	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 264 seconds)
2019-10-28 10:56:29	--	__gotcha1 is now known as __gotcha
2019-10-28 10:57:08	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-10-28 10:57:49	Blub\0	kuznero: stdin/out/err are all separate file descriptors, they're not usually connected, there's no general way to "send something to stdin"
2019-10-28 10:58:20	Blub\0	kuznero: you'd have to change your code so that it doesn't use stdin directly, but something which knows when to read the simulated data and when to read the real data
2019-10-28 10:58:27	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-28 10:59:09	yrp	couldnt you just open and write to the stdin fd?
2019-10-28 10:59:55	kuznero	Hm, haven't tried that as it only implements Read trait if I remember right
2019-10-28 11:00:10	yrp	are you on linux?
2019-10-28 11:00:14	kuznero	Yes
2019-10-28 11:00:17	-->	thequux (~thequux@ptr-fzs5rlfrt77gc0ldk6i.18120a2.ip6.access.telenet.be) has joined ##rust
2019-10-28 11:00:22	yrp	open /dev/fd/0
2019-10-28 11:00:47	yrp	or proc/self/fd/0
2019-10-28 11:00:57	yrp	that will give you a file descriptor that you can write to
2019-10-28 11:01:35	kuznero	Hm, slightly hackish?
2019-10-28 11:02:05	kuznero	But perhaps writing to linux fd of a current process might help
2019-10-28 11:02:19	yrp	more than slightly
2019-10-28 11:02:27	Kinnison	You can't guarantee to be able to open those
2019-10-28 11:02:37	Kinnison	e.g. if you're running under setuid/sudo from a terminal owned by another user
2019-10-28 11:03:10	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-28 11:03:29	Kinnison	Also writing to stdin won't cause that to become available to read
2019-10-28 11:03:45	Kinnison	writing to stdin is typically only used for (odd) terminal control sequences
2019-10-28 11:03:59	kuznero	Ah, that's not good. But generally there should be a way "write" instead of a user in the same process.
2019-10-28 11:05:55	yrp	do you want the data to be available on that fd, or do you want the it to appear to the user that theyve typed some text?
2019-10-28 11:06:35	 *	liiwi notes shared memory and pipes
2019-10-28 11:06:44	kuznero	It is a workaround, I need to read something that user typed, but then I will just ignore it.
2019-10-28 11:09:03	kuznero	How do I echo into /proc/NNN/fd/0 in bash?
2019-10-28 11:10:14	-->	tsaka__ (~torstein@2a02:8109:9a80:7030:9742:1e2b:392d:ec69) has joined ##rust
2019-10-28 11:10:50	kuznero	`echo > ./0`
2019-10-28 11:11:13	kuznero	But writing to `/dev/fd/0` didn't make it available for reading, as was already mentioned.
2019-10-28 11:11:17	kuznero	Interesting
2019-10-28 11:14:32	felix34	data_source2.rs, the JSON fields may be named differently for either
2019-10-28 11:14:46	felix34	Is there any way to separate the serde JSON deserialize_with information from the struct it's associated with? For example if I want to define a struct `NewData` in common.rs, but then fill it from data_source1.rs and data_source2.rs, the JSON fields may be named differently for either
2019-10-28 11:17:59	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 11:18:39	-->	__gotcha1 (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-28 11:20:44	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Read error: Connection reset by peer)
2019-10-28 11:20:45	--	__gotcha1 is now known as __gotcha
2019-10-28 11:22:38	voker57	better use a wrapper struct
2019-10-28 11:23:00	felix34	voker57: what is a wrapper struct?
2019-10-28 11:23:24	voker57	struct DataSource1(NewData)
2019-10-28 11:23:35	voker57	then implement deserializing for it differently
2019-10-28 11:24:57	felix34	voker57: where can I read about wrapper structs in the documnetation?
2019-10-28 11:27:58	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-28 11:28:14	felix34	I've never heard of inheritance with structs
2019-10-28 11:28:49	voker57	there is no inheritance
2019-10-28 11:29:08	voker57	it's simply a new struct with one field
2019-10-28 11:30:00	felix34	voker57: if the new struct just has a field containing the main /common struct, how do I define the desierialize_with keywords for the common struct?
2019-10-28 11:30:43	felix34	a pastebin/playgroud would be very hel
2019-10-28 11:30:48	felix34	helpful
2019-10-28 11:30:51	voker57	you implement deserialize for both wrappers only
2019-10-28 11:31:03	<--	rople (rople@gateway/vpn/privateinternetaccess/rople) has quit (Ping timeout: 268 seconds)
2019-10-28 11:31:51	voker57	https://gist.github.com/30ab37f042d2c6578e4fbcbcbcdc2e83
2019-10-28 11:32:13	voker57	instead of derive, to custom deserialize with fields you need, etc
2019-10-28 11:34:08	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-28 11:34:34	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Quit: leaving)
2019-10-28 11:36:01	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 11:36:35	felix34	voker57: ah, i sthis what you mean? https://gist.github.com/rust-play/1e357ef1d520ec36906c0d8117816a49
2019-10-28 11:39:48	voker57	unfortunately wrapper struct do not work like this
2019-10-28 11:40:30	voker57	https://serde.rs/remote-derive.html
2019-10-28 11:40:32	<--	tsaka__ (~torstein@2a02:8109:9a80:7030:9742:1e2b:392d:ec69) has quit (Ping timeout: 252 seconds)
2019-10-28 11:41:14	felix34	voker57: aha, perfect, thanks!
2019-10-28 11:44:10	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Quit: Lost terminal)
2019-10-28 11:48:30	-->	DeltaHeavy (~DeltaHeav@unaffiliated/deltaheavy) has joined ##rust
2019-10-28 11:50:00	-->	tsaka__ (~torstein@ip5b403b7b.dynamic.kabel-deutschland.de) has joined ##rust
2019-10-28 11:51:58	la_mettrie	now i have unsafe sdl textures implemented but the compiler still wants struct's sdl_texture variable to have lifetime. wtf?
2019-10-28 11:52:23	<--	kuznero (~kuznero@5.254.82.116) has quit (Quit: Leaving)
2019-10-28 11:52:47	j`ey	cant help withot the code and/or the error
2019-10-28 11:53:28	la_mettrie	error https://pastebin.com/KwbisZ9r
2019-10-28 11:55:53	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 11:55:55	MechanicalError	hi
2019-10-28 11:56:49	j`ey	la_mettrie: and the Cargo.toml?
2019-10-28 11:56:50	<--	aLeSD (~aLeSD@host241-59-dynamic.171-212-r.retail.telecomitalia.it) has quit (Ping timeout: 240 seconds)
2019-10-28 11:58:10	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Client Quit)
2019-10-28 11:58:13	la_mettrie	j`ey: https://pastebin.com/cASBkyBi
2019-10-28 11:58:50	j`ey	la_mettrie: that's not enabling the sdl2 unsafe texture feature
2019-10-28 11:58:58	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 11:59:09	j`ey	you need to add it to the list on line 22
2019-10-28 12:00:38	la_mettrie	ok, thanks
2019-10-28 12:02:27	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Client Quit)
2019-10-28 12:03:08	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-10-28 12:11:05	-->	aLeSD (~aLeSD@host241-59-dynamic.171-212-r.retail.telecomitalia.it) has joined ##rust
2019-10-28 12:11:19	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-28 12:13:51	<--	virkony (~nikolay@2a02:678:50b:1100:523e:aaff:fe7c:6f48) has quit (Ping timeout: 264 seconds)
2019-10-28 12:14:36	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 12:14:43	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has left ##rust
2019-10-28 12:15:24	-->	virkony (~nikolay@2a02:678:54f:9700:523e:aaff:fe7c:6f48) has joined ##rust
2019-10-28 12:15:35	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-10-28 12:15:50	-->	mwa (~mwa@unaffiliated/mwa) has joined ##rust
2019-10-28 12:16:24	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 12:16:27	<--	aLeSD (~aLeSD@host241-59-dynamic.171-212-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2019-10-28 12:16:44	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Client Quit)
2019-10-28 12:17:03	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 12:17:25	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Client Quit)
2019-10-28 12:17:44	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 12:18:52	<--	lineus (~lineus@dynamic-acs-24-101-67-254.zoominternet.net) has quit (Ping timeout: 265 seconds)
2019-10-28 12:20:21	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Client Quit)
2019-10-28 12:21:28	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 12:22:56	<--	Philonous (~Philonous@unaffiliated/philonous) has quit (Quit: ZNC - http://znc.in)
2019-10-28 12:23:19	-->	Philonous (~Philonous@unaffiliated/philonous) has joined ##rust
2019-10-28 12:24:45	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-28 12:24:48	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-28 12:26:00	-->	lineus (~lineus@dynamic-acs-24-101-67-254.zoominternet.net) has joined ##rust
2019-10-28 12:28:02	<--	masonl (~masonl@194-193-202-239.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2019-10-28 12:29:00	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-28 12:29:00	<--	keep_learning (96cbd2d5@gateway/web/cgi-irc/kiwiirc.com/ip.150.203.210.213) has quit (Remote host closed the connection)
2019-10-28 12:30:02	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 252 seconds)
2019-10-28 12:31:29	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Ping timeout: 268 seconds)
2019-10-28 12:34:05	-->	threelights (~threeligh@129.170.194.175) has joined ##rust
2019-10-28 12:41:57	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-28 12:42:51	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-28 12:45:38	-->	noonien (uid162445@gateway/web/irccloud.com/x-hucnnvxofypcrvxs) has joined ##rust
2019-10-28 12:45:57	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-28 12:46:28	noonien	hello folks
2019-10-28 12:46:32	noonien	what's the state of async in rust?
2019-10-28 12:47:27	M-ou-se	noonien: https://areweasyncyet.rs/
2019-10-28 12:48:09	noonien	thank you!
2019-10-28 12:48:12	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-28 12:48:17	noonien	not much progress since last time i checked :(
2019-10-28 12:49:56	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-28 12:50:02	<--	learning1 (~pi@121.121.99.187) has quit (Ping timeout: 240 seconds)
2019-10-28 12:50:17	Kinnison	Progress has been steady and not really logged there
2019-10-28 12:50:32	Kinnison	Most of the core crates (tokio, hyper, etc) are ready for the release in a few weeks
2019-10-28 12:50:55	Kinnison	I expect we'll see the Rust release, and then within a few days, updates to a large proportion of the core crates
2019-10-28 12:51:03	noonien	i'm mostly interested in `async` functions
2019-10-28 12:51:04	Kinnison	With others coming in later as things settle
2019-10-28 12:51:12	noonien	last time i tried, there were a lot of problems with the borrow checker
2019-10-28 12:51:16	Kinnison	then they're coming in the next release (barring any major shockers)
2019-10-28 12:51:38	noonien	that was about ~6 months ago
2019-10-28 12:52:46	-->	learning1 (~pi@121.121.99.187) has joined ##rust
2019-10-28 13:08:29	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-28 13:08:33	--	nerdopoly4 is now known as nerdopoly
2019-10-28 13:16:55	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-28 13:19:52	-->	ytain (~ghfg@2607:f2c0:9448:800:487d:6947:11ce:abd3) has joined ##rust
2019-10-28 13:30:56	-->	voidwalker (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has joined ##rust
2019-10-28 13:30:58	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-28 13:31:18	--	voidwalker is now known as Guest57699
2019-10-28 13:31:45	<--	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has quit (Read error: Connection reset by peer)
2019-10-28 13:34:32	<--	Natch (~Natch@h-112-130.A444.priv.bahnhof.se) has quit (Ping timeout: 276 seconds)
2019-10-28 13:34:47	elichai2	Is there a list somewhere of all of *rustc* lints?
2019-10-28 13:35:25	elichai2	https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html seems outdated
2019-10-28 13:35:37	elichai2	(ie bare trait objects are warnings, not allow)
2019-10-28 13:42:15	-->	tmager (~Thunderbi@146.115.18.74) has joined ##rust
2019-10-28 13:43:23	-->	Natch (~Natch@h-112-130.A444.priv.bahnhof.se) has joined ##rust
2019-10-28 13:44:29	<--	narispo (~narispo@2a01:e0a:2a2:1590:b455:1e2a:1315:40ad) has quit (Ping timeout: 246 seconds)
2019-10-28 13:45:17	-->	narispo (~narispo@37.173.137.137) has joined ##rust
2019-10-28 13:50:47	<--	_Vi (~vi@2001:470:7bd6:1000::2) has quit (Ping timeout: 246 seconds)
2019-10-28 13:50:55	sfackler	rustc -Whelp will list them all
2019-10-28 13:51:03	<--	Oct (foobar@poulet.zoy.org) has quit (Ping timeout: 264 seconds)
2019-10-28 13:52:02	-->	b5509cd (50f93895@gateway/web/cgi-irc/kiwiirc.com/ip.80.249.56.149) has joined ##rust
2019-10-28 13:54:11	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-28 13:55:50	-->	b5509cd65 (50f93895@gateway/web/cgi-irc/kiwiirc.com/ip.80.249.56.149) has joined ##rust
2019-10-28 13:55:56	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-28 13:56:09	<--	b5509cd65 (50f93895@gateway/web/cgi-irc/kiwiirc.com/ip.80.249.56.149) has quit (Remote host closed the connection)
2019-10-28 13:56:23	-->	b5509cd77 (50f93895@gateway/web/cgi-irc/kiwiirc.com/ip.80.249.56.149) has joined ##rust
2019-10-28 13:56:26	<--	b5509cd (50f93895@gateway/web/cgi-irc/kiwiirc.com/ip.80.249.56.149) has quit (Ping timeout: 240 seconds)
2019-10-28 13:56:51	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-28 13:57:10	--	b5509cd77 is now known as b5509cd
2019-10-28 13:59:27	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-10-28 14:03:44	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-10-28 14:04:09	-->	osa1_ (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-28 14:05:53	<--	b5509cd (50f93895@gateway/web/cgi-irc/kiwiirc.com/ip.80.249.56.149) has quit (Remote host closed the connection)
2019-10-28 14:08:00	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-28 14:08:06	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-28 14:08:55	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Ping timeout: 268 seconds)
2019-10-28 14:08:59	-->	lauromoura (~lauromour@2804:7f5:f380:33fa:d5d0:d1ab:aba6:f669) has joined ##rust
2019-10-28 14:09:14	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Ping timeout: 240 seconds)
2019-10-28 14:11:13	-->	mizu_no_oto (~textual@2604:6000:1012:40ee:6c3c:d745:995b:9b13) has joined ##rust
2019-10-28 14:13:51	-->	georgemp (~georgemp@aemon.roguemonkeys.com) has joined ##rust
2019-10-28 14:21:22	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-28 14:23:53	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-28 14:28:01	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-28 14:34:14	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-10-28 14:34:55	<--	GnarlyBob (chris@2600:3c03::f03c:91ff:fee0:8443) has quit (Quit: WeeChat 2.6)
2019-10-28 14:37:08	-->	GnarlyBob (chris@2600:3c03::f03c:91ff:fee0:8443) has joined ##rust
2019-10-28 14:40:59	<--	osa1_ (~osa1@haskell/developer/osa1) has quit (Ping timeout: 268 seconds)
2019-10-28 14:44:58	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-28 14:46:20	-->	rosterok (uid236576@gateway/web/irccloud.com/x-kzfzauvxflhfkelb) has joined ##rust
2019-10-28 14:47:11	-->	INSANU (~jhonnyvar@51.37.183.30) has joined ##rust
2019-10-28 14:47:58	INSANU	Lets say I have some_string: String. and then I write the statement, some_string.chars().collect();
2019-10-28 14:48:39	INSANU	I wonder why in the debugger shows to me this result as being alloc::vec::Vec<void>
2019-10-28 14:48:55	INSANU	shouldn't it be something like, alloc::vec::Vec<char> ?
2019-10-28 14:49:09	INSANU	I cant navigate in the values of the vector as well
2019-10-28 14:51:03	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-28 14:54:20	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-28 14:56:28	<--	mryandao (~mryandao@gateway/tor-sasl/mryandao) has quit (Ping timeout: 260 seconds)
2019-10-28 14:58:26	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-28 15:02:47	-->	__gotcha1 (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-28 15:04:37	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 240 seconds)
2019-10-28 15:04:37	--	__gotcha1 is now known as __gotcha
2019-10-28 15:04:52	j`ey	INSANU: bad debug info I suppose..
2019-10-28 15:05:47	-->	mryandao (~mryandao@gateway/tor-sasl/mryandao) has joined ##rust
2019-10-28 15:08:30	-->	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has joined ##rust
2019-10-28 15:10:42	<--	chin-tastic (~chin-tast@c-73-137-102-244.hsd1.ga.comcast.net) has quit (Read error: Connection reset by peer)
2019-10-28 15:11:55	-->	chin-tastic (~chin-tast@c-73-137-102-244.hsd1.ga.comcast.net) has joined ##rust
2019-10-28 15:19:13	<--	georgemp (~georgemp@aemon.roguemonkeys.com) has quit (Quit: Buh-Bye)
2019-10-28 15:20:21	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-10-28 15:21:08	<--	threelights (~threeligh@129.170.194.175) has quit (Ping timeout: 276 seconds)
2019-10-28 15:22:30	-->	georgemp (~georgemp@aemon.roguemonkeys.com) has joined ##rust
2019-10-28 15:24:02	<--	waldo323 (~waldo323@75-151-31-89-Michigan.hfc.comcastbusiness.net) has quit (Remote host closed the connection)
2019-10-28 15:24:57	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Ping timeout: 265 seconds)
2019-10-28 15:36:04	<--	chin-tastic (~chin-tast@c-73-137-102-244.hsd1.ga.comcast.net) has quit (Read error: Connection reset by peer)
2019-10-28 15:36:15	-->	waldo323 (~waldo323@75-151-31-89-Michigan.hfc.comcastbusiness.net) has joined ##rust
2019-10-28 15:37:07	-->	chin-tastic (~chin-tast@c-73-137-102-244.hsd1.ga.comcast.net) has joined ##rust
2019-10-28 15:38:01	tempate	I'm trying to have something like https://gist.github.com/Tempate/f8055a763e0b24601e589630e671f079 but rust complains, "this parameter and the return type are declared with different lifetimes..."
2019-10-28 15:40:18	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-28 15:40:48	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-28 15:40:54	-->	lauromoura_ (~lauromour@177.132.100.142) has joined ##rust
2019-10-28 15:41:24	<--	lauromoura (~lauromour@2804:7f5:f380:33fa:d5d0:d1ab:aba6:f669) has quit (Ping timeout: 246 seconds)
2019-10-28 15:41:36	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-10-28 15:42:16	tempate	I would like best_nodes to be a vector of pointers to different nodes in children, and to return one of them
2019-10-28 15:45:17	j`ey	tempate: try .remove(pick)
2019-10-28 15:47:34	tempate	j`ey: https://bpaste.net/show/HZNM2
2019-10-28 15:48:37	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-28 15:49:11	j`ey	you might have to add a specific lifetime then: fn tree_policy<'a>(&'a self, children: &'a mut Vec<Node>, cp: f64) -> &'a mut Node
2019-10-28 15:49:37	j`ey	it's good if you can try to make a self contained example, kinda like here: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=919b236cda18cc65c2f28118cc393912
2019-10-28 15:49:46	tempate	I'm pretty sure I tried that already but I'll try it again
2019-10-28 15:50:32	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-28 15:51:55	tempate	You are right about the self contained example. I'll do so the next time ;)
2019-10-28 15:52:18	tempate	Adding the lifetime did work but I'm not sure I understand why
2019-10-28 15:52:58	tempate	I've read the docs on lifetimes but I still don't fully grasp them
2019-10-28 15:54:48	j`ey	yes, in this case I dont fully understand it either :|
2019-10-28 16:00:28	jebrosen	tempate: This is one of the elision rules - when you don't specify the output lifetime, it's assumed to be the lifetime of &self if it's there
2019-10-28 16:02:23	tempate	I guess my problem is that I got the impression that lifetimes were implicit. I didn't know that returning a value with a lifetime made it last longer.
2019-10-28 16:05:30	-->	brool (~grendel@2600:1700:7d20:ae60:2c68:fddb:7f86:c16b) has joined ##rust
2019-10-28 16:08:01	jebrosen	I feel like this code has another problem you might not have run into yet because of other errors
2019-10-28 16:08:27	jebrosen	Oh no, it is right
2019-10-28 16:09:14	j`ey	tempate: that is correct, it doesnt actually change the behaviour
2019-10-28 16:09:24	jebrosen	tempate: Returning the value doesn't "make" it live longer, it just requires it to live as long as it promises
2019-10-28 16:10:17	tempate	jebrosen: how long has it promised to live for?
2019-10-28 16:10:24	jebrosen	Without specifying a lifetime, the function promises it returns an &mut Node that can be accessed as long as 'self' is valid
2019-10-28 16:11:10	tempate	jebrosen: why do I have to specify the lifetime then?
2019-10-28 16:11:44	jebrosen	Normally if you have two input references/lifetimes and an output, you have to say which one it comes from. If you have an &self, it defaults to the output "coming from" &self instead
2019-10-28 16:11:51	j`ey	ah
2019-10-28 16:11:58	j`ey	I thought they were all tied together
2019-10-28 16:12:01	jebrosen	But in your case that's wrong, because you are returning data from children, not self
2019-10-28 16:12:58	tempate	oh, I see
2019-10-28 16:13:07	tempate	interesting, thank you very much
2019-10-28 16:13:29	jebrosen	tempate: The compiler is smart enough to figure out the right lifetimes by reading the code, but IIRC it's intentional that humans should be able to read only the function signature and know which lifetimes are related
2019-10-28 16:13:49	<--	Lorkki (lorkki@lorkki.net) has quit (Quit: The Lounge - https://thelounge.chat)
2019-10-28 16:14:32	tempate	So the rust compiler is dumbing it down for us, not sure how I feel about that
2019-10-28 16:14:42	jebrosen	https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-elision
2019-10-28 16:14:51	j`ey	yes elision is good and bad
2019-10-28 16:16:44	-->	Lorkki (lorkki@lorkki.net) has joined ##rust
2019-10-28 16:17:41	<--	mizu_no_oto (~textual@2604:6000:1012:40ee:6c3c:d745:995b:9b13) has quit (Ping timeout: 250 seconds)
2019-10-28 16:18:06	-->	baali (~baali@59.98.239.241) has joined ##rust
2019-10-28 16:20:55	-->	cdown (~cdown@89.32.122.5) has joined ##rust
2019-10-28 16:22:07	esotericnonsense	are there any builder macros that I can customise such that options are treated as, well, optional (e.g. setters created) but non-options are treated as being necessary for the new() function (e.g. this type has no Default)?
2019-10-28 16:22:15	esotericnonsense	or is it time to learn how to macro? :D
2019-10-28 16:27:46	--	irc: disconnected from server
2019-10-28 16:35:52	-->	Syrinxos (~syrinxos@93-34-1-82.ip47.fastwebnet.it) has joined ##rust
2019-10-28 16:35:52	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-28 16:35:52	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-28 16:35:52	--	Channel ##rust: 577 nicks (2 ops, 0 voices, 575 normals)
2019-10-28 16:36:09	esotericnonsense	faern: I suppose I was thinking of having no builder struct and just build directly on the type, though it wouldn't be immutable after building has 'completed' I guess
2019-10-28 16:36:12	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-28 16:37:22	faern	I usually go for a builder struct when the possible ways to construct something either requires many constructors, or a bunch of Option<> arguments.
2019-10-28 16:38:36	faern	But where to place the mandatory fields depends a lot on the use case. For OpenOptions it makes sense because you can configure it and then open many files with the same options.
2019-10-28 16:39:43	faern	Whereas for std::process::Command it usually would *not* make any sense to configure it with arguments and environment and then spawn many different binaries :') So there it makes sense to specify binary in the builder constructor.
2019-10-28 16:39:54	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-28 16:40:25	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-28 16:43:41	<--	ytain (~ghfg@2607:f2c0:9448:800:487d:6947:11ce:abd3) has quit (Quit: ...)
2019-10-28 16:46:32	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-28 16:47:09	-->	neceve (~quassel@unaffiliated/neceve) has joined ##rust
2019-10-28 16:51:10	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-28 16:53:06	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-28 16:53:25	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-28 16:55:13	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-28 16:58:50	<--	narispo (~narispo@37.173.137.137) has quit (Ping timeout: 240 seconds)
2019-10-28 17:01:03	-->	narispo (~narispo@37.167.240.72) has joined ##rust
2019-10-28 17:03:33	<--	leaves (~leaves@unaffiliated/leaves) has quit (Ping timeout: 265 seconds)
2019-10-28 17:03:47	-->	cdown_ (~cdown@199.201.66.0) has joined ##rust
2019-10-28 17:04:51	madprops	should i use process::Command to open an application?
2019-10-28 17:04:58	madprops	should I just append a & to the end ?
2019-10-28 17:05:11	madprops	or, what's the best way to open an application
2019-10-28 17:05:53	<--	aljama (~quassel@unaffiliated/aljama) has quit (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
2019-10-28 17:06:13	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 250 seconds)
2019-10-28 17:06:21	--	cdown_ is now known as cdown
2019-10-28 17:10:56	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Remote host closed the connection)
2019-10-28 17:11:20	<--	ellcs (~mantel@212.12.60.67) has quit (Ping timeout: 246 seconds)
2019-10-28 17:11:30	-->	stephaneyfx (~stephaney@184.68.160.234) has joined ##rust
2019-10-28 17:12:02	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-28 17:14:58	-->	aljama (~quassel@unaffiliated/aljama) has joined ##rust
2019-10-28 17:15:46	<--	narispo (~narispo@37.167.240.72) has quit (Ping timeout: 268 seconds)
2019-10-28 17:16:27	-->	narispo (~narispo@37.164.154.98) has joined ##rust
2019-10-28 17:17:12	-->	threelights (~threeligh@129.170.194.178) has joined ##rust
2019-10-28 17:18:35	ZirconiumX	madprops: bash /s
2019-10-28 17:20:28	madprops	i was suggested to use an async lib
2019-10-28 17:20:33	ZirconiumX	Being serious though, I've struggled to do asynchronous process interaction very well, so often I just spawn a bash script
2019-10-28 17:20:37	madprops	idk if i should use tokyo, or other
2019-10-28 17:20:47	ZirconiumX	tokio is not tokyo
2019-10-28 17:20:48	Yaniel	what do you want to achieve
2019-10-28 17:21:00	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-28 17:21:27	madprops	i've actually been using "sh someCommand" with process::Command and it works, but now I want for instance, launch an application that only exits when closed. I don't want to block the main program that launches it of course
2019-10-28 17:21:47	ZirconiumX	Honestly, if you don't need to interact with the application, either block your main thread or spawn a subthread that blocks
2019-10-28 17:22:25	ZirconiumX	Or try using an asynchronous library if you really want.
2019-10-28 17:22:37	<--	neceve (~quassel@unaffiliated/neceve) has quit (Ping timeout: 240 seconds)
2019-10-28 17:23:10	Yaniel	Command looks like what you should be using yes
2019-10-28 17:23:27	Yaniel	there should not be any need for any shell nonsense though
2019-10-28 17:24:27	Yaniel	and as long as you don't collect the child's output or explicitly wait for it it does not seem like Command should be blocking anything
2019-10-28 17:26:21	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##rust
2019-10-28 17:28:00	-->	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has joined ##rust
2019-10-28 17:28:51	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 252 seconds)
2019-10-28 17:31:26	-->	neceve (~quassel@unaffiliated/neceve) has joined ##rust
2019-10-28 17:35:35	-->	mxco86_ (~mxco86@cpc151821-shef17-2-0-cust76.17-1.cable.virginm.net) has joined ##rust
2019-10-28 17:36:34	madprops	Yaniel: if I run it like: Command::new("sh").arg("-c").arg(cmd)
2019-10-28 17:36:38	madprops	it does block
2019-10-28 17:36:44	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Ping timeout: 268 seconds)
2019-10-28 17:37:08	madprops	maybe i should just spawn a thread
2019-10-28 17:37:29	johnw_	Is there a crate for Linux and macOS that can determine the heap and stack currently in use by another process?
2019-10-28 17:37:33	Yaniel	are you calling .spawn() on it
2019-10-28 17:37:49	madprops	nope, status()
2019-10-28 17:38:02	ZirconiumX	That's why it blocks
2019-10-28 17:38:18	Yaniel	that's what the status() docs say :P
2019-10-28 17:38:19	ZirconiumX	"Executes a command as a child process, waiting for it to finish and collecting its exit status."
2019-10-28 17:38:22	madprops	you're right, it works now, thanks
2019-10-28 17:38:36	--	johnw_ is now known as johnw
2019-10-28 17:43:39	<--	mxco86_ (~mxco86@cpc151821-shef17-2-0-cust76.17-1.cable.virginm.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-29 09:21:40	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-29 09:21:40	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-29 09:21:40	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-29 09:21:40	--	Channel ##rust: 568 nicks (2 ops, 0 voices, 566 normals)
2019-10-29 09:21:55	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-29 09:23:51	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-10-29 09:26:58	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-10-29 09:28:51	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 09:31:51	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 264 seconds)
2019-10-29 09:33:03	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-10-29 09:33:26	<--	_xor (~xor@74.215.46.133) has quit (Remote host closed the connection)
2019-10-29 09:39:38	<--	_Vi (~vi@2001:470:7bd6:1000::2) has quit (Ping timeout: 276 seconds)
2019-10-29 09:40:42	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 09:45:21	-->	natechan (~natechan@2600:1702:a20:5610:9c91:cbe5:8dcc:a334) has joined ##rust
2019-10-29 09:50:27	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-29 09:53:38	<--	libertyprime (~libertypr@client-173-172.guest.otago.ac.nz) has quit (Ping timeout: 245 seconds)
2019-10-29 09:56:09	-->	ellcs (~mantel@212.12.60.67) has joined ##rust
2019-10-29 09:56:19	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-29 09:58:45	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-10-29 09:59:23	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 10:06:26	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-29 10:10:51	-->	lompik (~lompik@unaffiliated/lompik) has joined ##rust
2019-10-29 10:11:29	<--	xeno (~xeno@unaffiliated/xeno) has quit (Ping timeout: 276 seconds)
2019-10-29 10:18:18	<--	natechan (~natechan@2600:1702:a20:5610:9c91:cbe5:8dcc:a334) has quit (Ping timeout: 252 seconds)
2019-10-29 10:30:26	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-29 10:39:35	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 10:40:51	<--	baali (~baali@59.98.239.241) has quit (Ping timeout: 264 seconds)
2019-10-29 10:47:45	-->	gierdo (~Dominik_G@195.145.2.250) has joined ##rust
2019-10-29 10:55:41	-->	baali (~baali@59.98.234.229) has joined ##rust
2019-10-29 10:55:42	-->	libertyprime (~libertypr@118.149.232.223) has joined ##rust
2019-10-29 10:57:02	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 265 seconds)
2019-10-29 11:01:59	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-10-29 11:03:46	-->	frostschutz (~frostschu@55d4dacd.access.ecotel.net) has joined ##rust
2019-10-29 11:08:53	-->	AbedB_ (~AbedBhuty@173.239.197.142) has joined ##rust
2019-10-29 11:12:26	<--	AbedB (~AbedBhuty@bzq-79-181-50-11.red.bezeqint.net) has quit (Ping timeout: 240 seconds)
2019-10-29 11:17:21	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-29 11:24:17	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-10-29 11:28:50	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-10-29 11:33:04	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 11:37:14	-->	m0rphism (~m0rphism@HSI-KBW-082-212-034-016.hsi.kabelbw.de) has joined ##rust
2019-10-29 11:37:24	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-10-29 11:38:00	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 11:40:42	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-29 11:41:13	<--	lompik (~lompik@unaffiliated/lompik) has quit (Read error: Connection reset by peer)
2019-10-29 11:43:06	<--	pknull (~pooky@184.103.126.184) has quit (Read error: Connection reset by peer)
2019-10-29 11:45:18	<--	xeno (~xeno@unaffiliated/xeno) has quit (Ping timeout: 245 seconds)
2019-10-29 11:46:31	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 11:47:21	-->	luis (~luis@kerno.org) has joined ##rust
2019-10-29 11:50:18	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Ping timeout: 245 seconds)
2019-10-29 11:55:46	<--	libertyprime (~libertypr@118.149.232.223) has quit (Quit: leaving)
2019-10-29 11:56:43	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-10-29 12:10:03	-->	fsasm (~fsasm@62.178.93.7) has joined ##rust
2019-10-29 12:11:19	<--	arecaceae (root@gateway/vpn/privateinternetaccess/arecaceae) has quit (Remote host closed the connection)
2019-10-29 12:11:53	-->	arecaceae (root@gateway/vpn/privateinternetaccess/arecaceae) has joined ##rust
2019-10-29 12:12:33	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-29 12:15:20	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-29 12:15:22	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 268 seconds)
2019-10-29 12:15:26	-->	natechan (~natechan@2600:1702:a20:5610:9c91:cbe5:8dcc:a334) has joined ##rust
2019-10-29 12:17:35	<--	xeno (~xeno@unaffiliated/xeno) has quit (Ping timeout: 276 seconds)
2019-10-29 12:18:21	-->	Juzzika (~Juzzika@189.84-78-194.adsl-static.isp.belgacom.be) has joined ##rust
2019-10-29 12:19:40	-->	cdown (~cdown@199.201.66.44) has joined ##rust
2019-10-29 12:21:50	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-10-29 12:23:59	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 12:24:44	<--	gierdo (~Dominik_G@195.145.2.250) has quit (Remote host closed the connection)
2019-10-29 12:29:15	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-29 12:36:59	-->	cdown_ (~cdown@199.201.66.0) has joined ##rust
2019-10-29 12:40:02	<--	cdown (~cdown@199.201.66.44) has quit (Ping timeout: 268 seconds)
2019-10-29 12:40:07	--	cdown_ is now known as cdown
2019-10-29 12:48:12	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 265 seconds)
2019-10-29 12:48:28	<--	Juzzika (~Juzzika@189.84-78-194.adsl-static.isp.belgacom.be) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-29 12:48:41	<--	rople (rople@gateway/vpn/privateinternetaccess/rople) has quit (Ping timeout: 265 seconds)
2019-10-29 12:48:47	<--	natechan (~natechan@2600:1702:a20:5610:9c91:cbe5:8dcc:a334) has quit (Ping timeout: 276 seconds)
2019-10-29 12:52:25	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-29 12:53:33	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-10-29 12:54:06	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 12:54:25	<--	drewr (~drew@elastic/staff/drewr) has quit (Ping timeout: 250 seconds)
2019-10-29 13:06:06	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-29 13:06:12	<--	efm (~efm@vpn.tummy.com) has quit (Excess Flood)
2019-10-29 13:06:57	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-10-29 13:09:07	-->	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has joined ##rust
2019-10-29 13:15:19	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 13:15:34	-->	ytain (~ghfg@2607:f2c0:9278:f800:443a:5d9a:1753:afae) has joined ##rust
2019-10-29 13:19:45	-->	DeltaHeavy (~DeltaHeav@unaffiliated/deltaheavy) has joined ##rust
2019-10-29 13:25:11	-->	t7 (~tommo@2a00:23c5:1284:fc00:d890:f2d4:6fb0:6876) has joined ##rust
2019-10-29 13:25:43	-->	bronsen (housetier@pdpc/supporter/professional/housetier) has joined ##rust
2019-10-29 13:27:49	<--	arecaceae (root@gateway/vpn/privateinternetaccess/arecaceae) has quit (Remote host closed the connection)
2019-10-29 13:28:12	-->	arecaceae (root@gateway/vpn/privateinternetaccess/arecaceae) has joined ##rust
2019-10-29 13:34:14	-->	tmager (~Thunderbi@146.115.18.74) has joined ##rust
2019-10-29 13:36:21	tempate	I have a function that returns an array which I would like to run at compile time. I've written my array generation code in build.rs but I'm unsure on how to use the generated array in, say, src/main.rs
2019-10-29 13:36:44	j`ey	have you written the array out to a file?
2019-10-29 13:36:53	tempate	I have not
2019-10-29 13:37:49	j`ey	that's what you want to do
2019-10-29 13:38:07	tempate	j`ey: do you mean something like this: https://doc.rust-lang.org/cargo/reference/build-scripts.html#case-study-code-generation ?
2019-10-29 13:38:12	bronsen	I am reading http://adventures.michaelfbryan.com/posts/how-not-to-riir/ ; the article says "...add the cc crate as a build dependency..." and show a command "cargo add --build cc". However, my version of cargo (1.38.0) does not have this subcommand. how do I install this subcommand thing?
2019-10-29 13:38:46	j`ey	bronsen: I think that is a crate called cargo-edit
2019-10-29 13:38:53	j`ey	tempate: yeah
2019-10-29 13:39:18	tempate	j`ey: writing to the file like that seems incredibly ugly. Isn't there a better way of doing it?
2019-10-29 13:39:44	j`ey	tempate: no
2019-10-29 13:40:01	tempate	I have to have my function as a string?
2019-10-29 13:40:39	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-10-29 13:40:51	j`ey	I think there were some crates to help with it
2019-10-29 13:41:30	tempate	I was looking at https://crates.io/crates/build-helper before
2019-10-29 13:41:56	j`ey	that's 2 years old
2019-10-29 13:42:40	tempate	Does that mean I shouldn't
2019-10-29 13:42:44	tempate	use it?
2019-10-29 13:42:45	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-10-29 13:43:09	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 13:43:24	tempate	In C two years old would be surprisingly new :P
2019-10-29 13:43:57	j`ey	just pointing it out :P
2019-10-29 13:44:59	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Remote host closed the connection)
2019-10-29 13:46:29	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-29 13:52:02	-->	eremitah_ (~int@unaffiliated/eremitah) has joined ##rust
2019-10-29 13:52:41	-->	forgottenone (~forgotten@176.88.102.114) has joined ##rust
2019-10-29 13:53:57	faern	tempate: If the construction of the array only uses things allowed in a const fn you can compute it at build time directly in main.rs. Otherwise you have to wait for better const support :)
2019-10-29 13:54:12	<--	eremitah (~int@unaffiliated/eremitah) has quit (Ping timeout: 246 seconds)
2019-10-29 13:54:13	--	eremitah_ is now known as eremitah
2019-10-29 13:54:27	tempate	faern: I'm aware, but unluckily it doesn't
2019-10-29 13:55:06	faern	tempate: Two years old for a language that became 1.0 4 years ago is a long time, yes. It's kind of like C code written in the 90s ;)
2019-10-29 13:55:19	tempate	I'm very displeased at having to have my function inside a string anyway, and the packages I'm looking at don't have any examples for me to follow.
2019-10-29 13:55:39	tempate	faern: heh, yeah, I figured
2019-10-29 13:56:43	j`ey	tempate: phf_codegen has some stuff
2019-10-29 13:56:48	j`ey	tempate: what does the array contain?
2019-10-29 13:57:22	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-10-29 13:57:24	tempate	j`ey: https://bpaste.net/show/BR7EO
2019-10-29 13:58:27	j`ey	you should be able to do it quite easily
2019-10-29 13:58:51	j`ey	println!("NAME_OF_ARRAY: [usize; N_COMBS] = {};", gen_winning_combs());
2019-10-29 13:59:00	bronsen	j`ey: thank you, installing cargo-edit did solve my problem :)
2019-10-29 13:59:13	j`ey	(that probably has to be {:?}, but close)
2019-10-29 13:59:15	j`ey	bronsen: cool
2019-10-29 13:59:15	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-29 13:59:42	tempate	Hmm, alright, let me try
2019-10-29 14:00:25	faern	tempate: Why don't you use lazy_static and have it computed once on first access?
2019-10-29 14:01:23	tempate	faern: I honestly don't know. I'm very novice to rust and, talking it through with someone here the other day, we got to the conclusion that having it this way was a good idea.
2019-10-29 14:01:38	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-29 14:01:57	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Ping timeout: 240 seconds)
2019-10-29 14:04:31	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-29 14:08:40	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 14:10:15	<--	forgottenone (~forgotten@176.88.102.114) has quit (Quit: Konversation terminated!)
2019-10-29 14:11:10	tempate	faern: do you think that'd be better?
2019-10-29 14:12:26	tempate	j`ey: I got it working, thanks
2019-10-29 14:15:13	-->	kuznero (~kuznero@91.109.28.145) has joined ##rust
2019-10-29 14:17:48	kuznero	Hi All! After I moved my terminal into raw mode and out (with termion through tui crate), I am spawning a new process with Command::new().args(...).spawn()?.wait_with_output()?; What's interesting is that the process I start (e.g. `emacs -nw`) get some kind of terminal control sequence in its stdin (which is then getting displayed as if user edited a file). It is highly annoying. Please help!
2019-10-29 14:18:59	-->	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has joined ##rust
2019-10-29 14:21:40	j`ey	tempate: lazy static is simpler i suppose
2019-10-29 14:22:59	<--	georgemp (~georgemp@aemon.roguemonkeys.com) has quit (Quit: Buh-Bye)
2019-10-29 14:30:11	<--	MechanicalError (~Mechanica@d24-57-90-105.home.cgocable.net) has quit (Ping timeout: 276 seconds)
2019-10-29 14:30:38	kuznero	I'm sure it's a bit weird, but I'm still hopeful that I'm not the only one seeing this strange thing...
2019-10-29 14:33:11	-->	georgemp (~georgemp@aemon.roguemonkeys.com) has joined ##rust
2019-10-29 14:35:39	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-29 14:36:16	<--	georgemp (~georgemp@aemon.roguemonkeys.com) has quit (Client Quit)
2019-10-29 14:36:52	faern	tempate: I would have used lazy_static if the other solution is kind of convoluted or a hack. lazy static will have the computation cost at runtime, but only once. So if you can live with that it's way easier.
2019-10-29 14:37:12	-->	georgemp (~georgemp@aemon.roguemonkeys.com) has joined ##rust
2019-10-29 14:37:20	j`ey	once_cell is apparently an interesting alteernative to lazy_static now
2019-10-29 14:43:53	<--	stzsch (~no@2804:14d:4cd1:823f:5604:a6ff:fe8e:d858) has quit (Ping timeout: 246 seconds)
2019-10-29 14:45:20	-->	stzsch (~no@2804:14d:4cd1:823f:5604:a6ff:fe8e:d858) has joined ##rust
2019-10-29 14:45:36	-->	natechan (~natechan@2600:1702:a20:5610:9c91:cbe5:8dcc:a334) has joined ##rust
2019-10-29 14:50:26	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-29 14:54:53	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-29 14:58:03	<--	georgemp (~georgemp@aemon.roguemonkeys.com) has quit (Quit: Buh-Bye)
2019-10-29 14:59:11	-->	__gotcha1 (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-29 14:59:29	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Read error: Connection reset by peer)
2019-10-29 14:59:29	--	__gotcha1 is now known as __gotcha
2019-10-29 15:00:14	-->	learningc (~pi@121.122.92.70) has joined ##rust
2019-10-29 15:02:17	<--	learning1 (~pi@121.121.99.187) has quit (Ping timeout: 240 seconds)
2019-10-29 15:02:52	-->	georgemp (~georgemp@aemon.roguemonkeys.com) has joined ##rust
2019-10-29 15:04:26	<--	baali (~baali@59.98.234.229) has quit (Quit: Leaving.)
2019-10-29 15:05:44	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 15:06:49	<--	georgemp (~georgemp@aemon.roguemonkeys.com) has quit (Client Quit)
2019-10-29 15:07:32	-->	toure (toure@nat/redhat/x-wuiduqvgxxtqmrds) has joined ##rust
2019-10-29 15:08:46	-->	georgemp (~georgemp@aemon.roguemonkeys.com) has joined ##rust
2019-10-29 15:12:18	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-29 15:16:54	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-29 15:18:38	<--	natechan (~natechan@2600:1702:a20:5610:9c91:cbe5:8dcc:a334) has quit (Ping timeout: 245 seconds)
2019-10-29 15:19:29	-->	grabarz (~user@ip5f5bf62d.dynamic.kabel-deutschland.de) has joined ##rust
2019-10-29 15:20:37	<--	georgemp (~georgemp@aemon.roguemonkeys.com) has quit (Quit: Buh-Bye)
2019-10-29 15:20:46	<--	grabarz (~user@ip5f5bf62d.dynamic.kabel-deutschland.de) has left ##rust
2019-10-29 15:20:50	-->	grabarz (~user@ip5f5bf62d.dynamic.kabel-deutschland.de) has joined ##rust
2019-10-29 15:21:34	<--	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has quit (Quit: quit.)
2019-10-29 15:22:39	noonien	hello folks!
2019-10-29 15:22:45	noonien	i'm rather new to rust
2019-10-29 15:23:05	Yaniel	hi
2019-10-29 15:23:12	noonien	is it possible to pass a Read + Write trait as a function argument?
2019-10-29 15:23:30	noonien	it's actually a TCPStream, but i would like to abstract that away
2019-10-29 15:23:53	Yaniel	you can make the function generic
2019-10-29 15:24:10	Yaniel	and declare that the only limit on types it can be instantiated for is that they have to be both Read and Write
2019-10-29 15:24:19	-->	heinrich5991 (~hein5991@unaffiliated/heinrich5991) has joined ##rust
2019-10-29 15:24:45	sfackler	fn foo<S>(stream: S) where S: Read + Write { ... }
2019-10-29 15:25:27	noonien	oh, awesome! Thanks!
2019-10-29 15:27:16	-->	georgemp (~georgemp@aemon.roguemonkeys.com) has joined ##rust
2019-10-29 15:30:20	<--	georgemp (~georgemp@aemon.roguemonkeys.com) has quit (Client Quit)
2019-10-29 15:33:47	-->	georgemp (~georgemp@aemon.roguemonkeys.com) has joined ##rust
2019-10-29 15:34:00	kuznero	There are none, piped and inherit in Stdio in rust. Is there any way to spawn a process that is not a child of a current process somehow?
2019-10-29 15:34:19	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-10-29 15:34:47	noonien	that doesn't sound like something that has to do with rust. that's just how most operating systems work
2019-10-29 15:34:47	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 15:35:48	kuznero	But in linux when I Command::new().spawn() a new child process is created that by default inherits stdin/stdout from its parent.
2019-10-29 15:36:47	sfackler	that's correct
2019-10-29 15:36:50	<--	bthesorceror (~brandon@190.125.24.136.in-addr.arpa) has quit (Ping timeout: 240 seconds)
2019-10-29 15:38:52	kuznero	That might be perhaps a syscall or something low level like that?
2019-10-29 15:39:11	sfackler	what is the behavior you want
2019-10-29 15:40:27	kuznero	I need an independent stdin/stdout as I have a problem of contaminated stdin that I cannot solve a normal way
2019-10-29 15:41:11	sfackler	what are those independent stdin/stdouts going to be connected to?
2019-10-29 15:41:20	sfackler	 /dev/null? A file? a pipe?
2019-10-29 15:41:51	kuznero	Terminal's stdin/stdout
2019-10-29 15:42:21	sfackler	but that's connected to the parent process
2019-10-29 15:42:29	sfackler	as well, how can it be independent at the same time?
2019-10-29 15:42:48	Yaniel	if anything, that would contaminate it even worse
2019-10-29 15:43:33	kuznero	Independent from the current process but not from its parent. Like start cli in terminal (so, terminal is parent for cli). Cli then start another cli-2 (cli is parent for cli-2). What I want is to make a parent of cli (terminal) also a parent for cli-2.
2019-10-29 15:43:43	noonien	kuznero: usually, you do a fork(), replace what you need, and then execve
2019-10-29 15:44:31	sfackler	how would the behavior of that differ from spawning the process normally?
2019-10-29 15:44:33	kuznero	noonien, fork in bash? Not sure I follow... I start Command::new().args().spawn()... no fork
2019-10-29 15:44:39	kuznero	I can perhaps try to explain the real issue I have (as a result trying to find a workaround). Here is the link to how I init raw terminal with tui/termion: https://gitlab.com/productivity-box/my-journal/blob/master/src/core/shell.rs#L19
2019-10-29 15:44:39	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-10-29 15:45:18	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 15:45:18	noonien	sorry, i'm new to rust. fork is a syscall, which is usually exposed on most stdlibs. most stdlibs also have a way to launch a process with pipes to it, which basically does the same thing as i described above.
2019-10-29 15:45:37	kuznero	Once it is initialized I can draw some nice TUI in terminal and then as part of one of the actions there I need to start default editor. So, I drop term (effectively reverting raw mode into previous stat)
2019-10-29 15:45:40	sfackler	Command::spawn calls for + exec
2019-10-29 15:46:11	sfackler	*fork
2019-10-29 15:46:16	kuznero	and the I call Command::new("vim").Args("somefile").spawn()?.wait...
2019-10-29 15:46:24	Yaniel	kuznero: that sounds exactly like you want to hand over your stdio to the new process
2019-10-29 15:46:30	noonien	it's really not clear what you are trying to achieve, you are tring to communicate with with the parent process, but not communicate with it?
2019-10-29 15:46:47	noonien	perhaps you just want some pipes to the new process,  maybe that's what "piped" is for?
2019-10-29 15:47:03	kuznero	Problem is that when I start editor (e.g. emacs -nw) stdin get some extra stuff in it: '[>84;0;0c' (in alacritty with tmux) or '[>61;337;0c' in terminology
2019-10-29 15:47:05	noonien	then you can communicate with your new process' stdin/stdout/stderr via the pipes
2019-10-29 15:47:22	noonien	yes, because the stdout is no longer a terminal
2019-10-29 15:47:35	<--	lineus (~lineus@dynamic-acs-24-101-67-254.zoominternet.net) has quit (Ping timeout: 246 seconds)
2019-10-29 15:47:45	kuznero	No, piped is not going to work. Let's part the idea with working around the parent.
2019-10-29 15:48:08	noonien	you cannot "reparent" a child, if that's what you're trying to achieve
2019-10-29 15:48:16	kuznero	Here is how I start the editor: https://gitlab.com/productivity-box/my-journal/blob/master/src/core/editor.rs#L26
2019-10-29 15:48:28	noonien	not that reparenting has anything to do with this. you just seem to need to have the right files in the right process
2019-10-29 15:48:37	Yaniel	are you trying to have the parent be some sort of overlay that can intercept certain input or inject stuff?
2019-10-29 15:48:47	kuznero	nope
2019-10-29 15:48:50	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-29 15:49:01	Yaniel	or have the child process completely take over all IO
2019-10-29 15:49:10	kuznero	I just need to start editor and let user edit it without interruptions as if he/she just started it from terminal
2019-10-29 15:49:26	noonien	do you still need to keep the parent running?
2019-10-29 15:49:46	kuznero	Here is the note that I try to address: https://gitlab.com/productivity-box/my-journal/blob/master/src/core/shell.rs#L44
2019-10-29 15:50:37	kuznero	noonien, yes, but let's not focus on reparenting for now. I am trying to explain the issue I was trying to solve first. Reparenting is just a theory that I though might help (but that is a long shot)
2019-10-29 15:51:08	Yaniel	so you want the child to completely take over everything?
2019-10-29 15:51:11	noonien	you cannot reparent a process, you can replace a process
2019-10-29 15:51:12	<--	AbedB_ (~AbedBhuty@173.239.197.142) has quit (Ping timeout: 268 seconds)
2019-10-29 15:51:12	<--	SpaceManiac (~SpaceMani@c-67-172-121-111.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2019-10-29 15:51:20	Yaniel	and do you want to return to the parent when the child exits?
2019-10-29 15:51:33	noonien	but it sounds like the "parent process" is actually a shell, so when the child exits, you still want the shell to be alive, no?
2019-10-29 15:51:34	kuznero	Yaniel, yes, thus I used inherited stdin/out.
2019-10-29 15:52:04	noonien	and using inherit causes those issues still?
2019-10-29 15:52:53	kuznero	It is not inherited that causes the issue. It is specifically the combination of enter/exiting the raw mode for terminal and then starting the child process
2019-10-29 15:53:15	<--	chromis (sid150893@gateway/web/irccloud.com/x-shswytedwenjrqnr) has left ##rust
2019-10-29 15:53:23	noonien	well, there you go
2019-10-29 15:53:28	kuznero	So, here I start/stop raw mode: https://gitlab.com/productivity-box/my-journal/blob/master/src/core/shell.rs#L17-42
2019-10-29 15:53:48	-->	natechan (~natechan@2600:1702:a20:5610:9c91:cbe5:8dcc:a334) has joined ##rust
2019-10-29 15:53:53	kuznero	And here I start editor: https://gitlab.com/productivity-box/my-journal/blob/master/src/core/shell.rs#L44-65
2019-10-29 15:54:10	kuznero	But raw mode is being reverting on drop(term)
2019-10-29 15:54:46	noonien	have you looked at the sourcode for `Command`?
2019-10-29 15:54:54	noonien	perhaps it does some things you aren't expecting
2019-10-29 15:55:27	kuznero	A bit, I suspect though that it is the raw mode leftovers that send some control sequence like \033 in terminal
2019-10-29 15:55:48	jebrosen	Does tui also opt in to additional input modes, like mouse events, that you're not disabling?
2019-10-29 15:56:14	kuznero	jebrosen, that might be the case, never looked into disable other things
2019-10-29 15:57:05	kuznero	Though, I'm not sure if that is possible
2019-10-29 15:57:54	kuznero	It is termion crate that tui is using as one of backends that I use
2019-10-29 15:58:34	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 15:58:50	Flonk	Can I define a custom cast, like `4. as MyType`? Or is that a no-no
2019-10-29 15:59:02	kuznero	Ah, no, I am using Keys input only: https://gitlab.com/productivity-box/my-journal/blob/master/src/core/shell.rs#L17
2019-10-29 15:59:07	j`ey	Flonk: not with as, but you can use Into or From
2019-10-29 15:59:56	Flonk	j`ey, ah yeah `From` popped up on google.
2019-10-29 15:59:59	Flonk	Fair enough, thanks :)
2019-10-29 16:00:57	<--	mr64bit (~mr64bit@dynamic-acs-24-101-245-231.zoominternet.net) has quit (Quit: Bye.)
2019-10-29 16:01:18	-->	polyzen (~dmc@archlinux/trusteduser/polyzen) has joined ##rust
2019-10-29 16:03:16	<--	dmc (~dmc@archlinux/trusteduser/polyzen) has quit (Ping timeout: 240 seconds)
2019-10-29 16:03:41	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 246 seconds)
2019-10-29 16:05:29	kuznero	And in general if anyone will have time and enough passion to review the code and give some recommendations that would be great: https://gitlab.com/productivity-box/my-journal (mj is the name of the crate)
2019-10-29 16:05:30	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-29 16:06:04	jebrosen	kuznero: Oh, is that actually input into the editor as text or just visible on the screen
2019-10-29 16:06:30	-->	brool (~grendel@2600:1700:7d20:ae60:2c68:fddb:7f86:c16b) has joined ##rust
2019-10-29 16:06:31	kuznero	It is an input in editor, otherwise, it would not have been sooo annoying
2019-10-29 16:07:16	<--	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has quit (Max SendQ exceeded)
2019-10-29 16:07:49	jebrosen	Terminology doesn't seem to use that escape sequence, so I'm not even sure where that's coming from
2019-10-29 16:07:52	-->	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has joined ##rust
2019-10-29 16:08:02	jebrosen	What about vim?
2019-10-29 16:09:29	kuznero	jebrosen, terminology shows another sequence instead.
2019-10-29 16:10:27	kuznero	With vim it is simpler in a sense (and went unnoticed for some time) because of normal mode by default. A couple of extre key presses put file editing into the right mode without file being modified. But with `emacs -nw` it becomes apparent very fast.
2019-10-29 16:11:07	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-29 16:11:10	-->	AbedB (~AbedBhuty@bzq-109-67-41-209.red.bezeqint.net) has joined ##rust
2019-10-29 16:12:30	Xatenev	kuznero, you have singular 'idea' everywhere except here To list registered ideas just type in the following:
2019-10-29 16:12:32	Xatenev	prob typo
2019-10-29 16:12:35	jebrosen	'[>61;337;0c' in terminology < is that not the one that shows in terminology
2019-10-29 16:12:55	kuznero	jebrosen, yes, that is the one
2019-10-29 16:13:18	jebrosen	What sequence does it show "instead"?
2019-10-29 16:16:18	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-29 16:16:18	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-29 16:16:18	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-29 16:16:18	--	Channel ##rust: 579 nicks (2 ops, 0 voices, 577 normals)
2019-10-29 16:16:32	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-29 16:17:31	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-29 16:21:40	jebrosen	Hm, I'm not bored enough to follow undocumented escape sequences across the whole internet. But I still suspect that something to do with the terminal mode isn't being reset properly
2019-10-29 16:22:48	kuznero	jebrosen, that was my original line of thinking as well. Basically, now I will try to record attributes before terminal hit raw mode and got back and try to see what is missing. Maybe recovering from raw mode does not go well.
2019-10-29 16:24:16	-->	mr64bit (~mr64bit@dynamic-acs-24-101-245-231.zoominternet.net) has joined ##rust
2019-10-29 16:27:25	<--	tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has quit (Remote host closed the connection)
2019-10-29 16:27:51	<--	natechan (~natechan@2600:1702:a20:5610:9c91:cbe5:8dcc:a334) has quit (Ping timeout: 246 seconds)
2019-10-29 16:30:59	-->	tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has joined ##rust
2019-10-29 16:31:32	-->	electricityZZZZ (~rustisafu@108-216-157-17.lightspeed.sntcca.sbcglobal.net) has joined ##rust
2019-10-29 16:33:06	electricityZZZZ	so i was looking at geekbench and it looks like the apple A13 cpu is as fast (or faster) than an intel i5 from a recent macbook pro,... since you guys understand computers much better than i do, is geekbench missing something? note that it includes clang as a benchmark, which as i understand should be a fairly difficult benchmark
2019-10-29 16:33:42	electricityZZZZ	oh and the A13 is about 10x lower power,... i am thinking about transitioning my development work to an ipad but i'd really like to be able to run rustc, cargo, etc on the ipad...
2019-10-29 16:34:00	avu	electricityZZZZ: it's "just" single core performance, right?
2019-10-29 16:34:06	<--	frostschutz (~frostschu@55d4dacd.access.ecotel.net) has quit (Quit: Leaving)
2019-10-29 16:34:31	-->	alex-helfet (~alex@cpc68330-cdif16-2-0-cust38.5-1.cable.virginm.net) has joined ##rust
2019-10-29 16:34:39	electricityZZZZ	i could argue that multicore perf is the same too if you rescale based on the number of cores
2019-10-29 16:35:06	avu	electricityZZZZ: the A13 has 2 fast cores, the macbook 4
2019-10-29 16:36:02	electricityZZZZ	https://browser.geekbench.com/v5/cpu/compare/488483?baseline=488616
2019-10-29 16:36:16	avu	also, there is not iPad using the A13 yet :)
2019-10-29 16:36:56	electricityZZZZ	multicore clang isn't all that different, 33.1 klines/sec i5 vs 29.5 klines/sec A13
2019-10-29 16:37:22	electricityZZZZ	but one question is, am i a fool for trusting this benchmark? are there tasks which the intel is superior at?
2019-10-29 16:38:17	alex-helfet	guess: maybe the iPhone gets thermally throttled if you run longer benchmarks, so that perf isn't sustainable?
2019-10-29 16:38:47	avu	benchmarks are always always misleading in one way or another. One way this one might be missleading is that it just measures CPU performance, leaving out IO or how much you're going to suffer by iOS devices having much less memory
2019-10-29 16:39:25	electricityZZZZ	are the A13 cpus not able to address as much mem as intel?
2019-10-29 16:39:28	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Remote host closed the connection)
2019-10-29 16:39:29	avu	alex-helfet: well, that's the case with macbooks as well, unfortunately :)
2019-10-29 16:39:34	electricityZZZZ	are they like faux 64-bit?
2019-10-29 16:39:39	j`ey	no theyre real 64bit
2019-10-29 16:39:42	alex-helfet	avu: haha :)
2019-10-29 16:39:47	avu	electricityZZZZ: no, Apple just doesn't give the devices much ram
2019-10-29 16:40:04	avu	it's usually not necessary on iOS
2019-10-29 16:40:11	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-29 16:40:38	electricityZZZZ	in my experience i can run my older iphone at full load without it apparently thermally throttling at all
2019-10-29 16:40:46	avu	you can't get an A13 with more than 4GB right now, might change once the new iPad PRO models based on it come out though
2019-10-29 16:41:08	<--	OmniMancer (~Paul@101.100.137.239) has quit (Quit: Leaving.)
2019-10-29 16:41:29	electricityZZZZ	right,...
2019-10-29 16:41:59	alex-helfet	the top intel chips on browser.geekbench.com
2019-10-29 16:42:14	alex-helfet	are faster but they all have higher clockspeed
2019-10-29 16:43:04	 *	kuznero thanks jebrosen for help! And stops for today... Have a good rest of the day!
2019-10-29 16:43:16	<--	kuznero (~kuznero@91.109.28.145) has quit (Quit: Leaving)
2019-10-29 16:44:34	electricityZZZZ	i mean okay so the device doesn't have much ram but i am talking about the cpu here,...
2019-10-29 16:45:20	electricityZZZZ	part of my question is to understand what CPUs do,... i am guessing that benches which have high branch rates and maybe lots of random memory access/cache thrashing is where CPUs excel?
2019-10-29 16:45:26	gchristensen	I have a Mutex. if I do: mydata.lock().unwrap().do_a_thing(); when does the lock get released exactly? at the end of that line, or the end of the scope?
2019-10-29 16:45:35	gchristensen	end of the outer scope*
2019-10-29 16:46:56	j`ey	electricityZZZZ: the less memory accesses, the 'better' in CPU benchmarks
2019-10-29 16:47:46	electricityZZZZ	 i am asking about differential advantage, meaning showing a larger difference between a "better" CPU and a "worse" CPU, and also difference between CPU and GPU etc
2019-10-29 16:48:30	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 16:51:19	<--	grabarz (~user@ip5f5bf62d.dynamic.kabel-deutschland.de) has quit (Ping timeout: 265 seconds)
2019-10-29 16:51:37	alex-helfet	gchirstensen: when the value falls out of scope. Maybe this is helpful: https://doc.rust-lang.org/book/ch15-03-drop.html
2019-10-29 16:57:55	alex-helfet	gchirstensen: although, perhaps this is better: https://doc.rust-lang.org/reference/expressions.html#temporary-lifetimes
2019-10-29 16:58:29	gchristensen	the temporary lifetimes link is helpful
2019-10-29 16:58:35	gchristensen	I know the answer at the intuitive level, but couldn't teach it properly
2019-10-29 16:59:09	j`ey	I should probably read that page too
2019-10-29 16:59:10	gchristensen	(always thrilling to realize the things you only know intuitively and not in such detail that you can explain.)
2019-10-29 16:59:32	<--	Coldblackice_ (~c@unaffiliated/coldblackice) has quit (Ping timeout: 265 seconds)
2019-10-29 17:00:05	alex-helfet	yes, interesting how much detail and precision you need to teach the answer to a good question.
2019-10-29 17:00:40	<--	tsaka__ (~torstein@ip5b403b7b.dynamic.kabel-deutschland.de) has quit (Ping timeout: 264 seconds)
2019-10-29 17:04:31	alex-helfet	Any advice on which Rust graphics and input libraries to use? I'm writing a very simple game (noughts and crosses, aka tic-tac-toe) and need to draw to the screen and accept mouse clicks.
2019-10-29 17:05:01	-->	kabeero (~quassel@unaffiliated/kabeero) has joined ##rust
2019-10-29 17:06:39	la_mettrie	alex-helfet: sdl (for both graphics and inputs)
2019-10-29 17:07:23	electricityZZZZ	alex-helfet: http://arewegameyet.com/    https://github.com/aochagavia/rocket
2019-10-29 17:08:59	alex-helfet	helpful suggestions, thank you :)
2019-10-29 17:10:02	electricityZZZZ	i can say that the rocket project i linked to compiled and ran fine for me, so it would be a fine starting place ;)
2019-10-29 17:12:03	<--	lauromoura_ (~lauromour@177.132.100.142) has quit (Ping timeout: 240 seconds)
2019-10-29 17:13:19	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-10-29 17:13:59	<--	ytain (~ghfg@2607:f2c0:9278:f800:443a:5d9a:1753:afae) has quit (Ping timeout: 250 seconds)
2019-10-29 17:14:25	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 17:14:58	-->	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has joined ##rust
2019-10-29 17:15:17	-->	tsaka__ (~torstein@ip5b403b7b.dynamic.kabel-deutschland.de) has joined ##rust
2019-10-29 17:17:16	-->	ssbr_laptop (~scorchsab@python/site-packages/ssbr) has joined ##rust
2019-10-29 17:20:03	-->	owlscientist (~owlscient@sburn/devel/name) has joined ##rust
2019-10-29 17:22:00	<--	electricityZZZZ (~rustisafu@108-216-157-17.lightspeed.sntcca.sbcglobal.net) has quit (Quit: Leaving)
2019-10-29 17:23:54	-->	b5509cd (5223450f@gateway/web/cgi-irc/kiwiirc.com/ip.82.35.69.15) has joined ##rust
2019-10-29 17:24:22	<--	owlscientist (~owlscient@sburn/devel/name) has quit (Client Quit)
2019-10-29 17:26:34	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-29 17:28:12	-->	owlscientist (~owlscient@sburn/devel/name) has joined ##rust
2019-10-29 17:28:12	<--	owlscientist (~owlscient@sburn/devel/name) has quit (Client Quit)
2019-10-29 17:28:24	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 252 seconds)
2019-10-29 17:29:59	-->	lineus (~lineus@dynamic-acs-24-101-67-254.zoominternet.net) has joined ##rust
2019-10-29 17:30:32	<--	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has quit (Quit: WeeChat 2.6)
2019-10-29 17:32:04	-->	lauromoura (~lauromour@2804:7f5:f380:3f80:adfb:ffd1:4273:f00a) has joined ##rust
2019-10-29 17:32:11	-->	stephaneyfx (~stephaney@184.68.160.234) has joined ##rust
2019-10-29 17:32:27	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 240 seconds)
2019-10-29 17:36:45	-->	baali (~baali@59.98.234.229) has joined ##rust
2019-10-29 17:36:45	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-10-29 17:37:22	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-29 17:37:27	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 17:40:02	<--	pknull (~pooky@184.103.126.184) has quit (Client Quit)
2019-10-29 17:40:03	<--	ssbr_laptop (~scorchsab@python/site-packages/ssbr) has quit (Ping timeout: 240 seconds)
2019-10-29 17:40:22	<--	Xatenev (~I@87.190.19.178) has quit (Remote host closed the connection)
2019-10-29 17:40:27	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 17:42:49	<--	efm (~efm@vpn.tummy.com) has quit (Remote host closed the connection)
2019-10-29 17:42:50	-->	bitwinery (~bitwinery@c-73-37-18-139.hsd1.wa.comcast.net) has joined ##rust
2019-10-29 17:43:24	<--	pknull (~pooky@184.103.126.184) has quit (Client Quit)
2019-10-29 17:43:42	<--	bitwinery (~bitwinery@c-73-37-18-139.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2019-10-29 17:43:58	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-29 17:44:07	-->	bitwinery (~bitwinery@c-73-37-18-139.hsd1.wa.comcast.net) has joined ##rust
2019-10-29 17:45:13	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-10-29 17:47:08	<--	_Vi (~vi@2001:470:7bd6:1000::2) has quit (Ping timeout: 276 seconds)
2019-10-29 17:49:11	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-29 17:49:52	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 264 seconds)
2019-10-29 17:50:07	delYsid	Given a RawFd, how do I do a read/write on that?
2019-10-29 17:50:36	delYsid	I've tried UnixStream and File, but both throw some sort of assertion.
2019-10-29 17:50:48	alex-helfet	what's the assertion?
2019-10-29 17:51:06	j`ey	https://doc.rust-lang.org/std/os/unix/io/trait.FromRawFd.html this?
2019-10-29 17:53:08	delYsid	j`ey: Yes, I looked through that traits list of impls, but only File and UnixStream look like what I want, but both fail.
2019-10-29 17:53:34	j`ey	then what alex-helfet said
2019-10-29 17:53:42	delYsid	Error: Os { code: 5, kind: Other, message: "Input/output error" }
2019-10-29 17:54:04	j`ey	are you sure the rawfd is valid?
2019-10-29 17:54:34	delYsid	well, sure is probably an exaggregation.  I am playing with nix::pty::forkpty
2019-10-29 17:54:45	delYsid	but if that function works, it should AIUI
2019-10-29 17:55:12	alex-helfet	can you paste a minimal example that fails?
2019-10-30 09:15:49	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-30 09:15:49	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-30 09:15:49	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-30 09:15:49	--	Channel ##rust: 574 nicks (2 ops, 0 voices, 572 normals)
2019-10-30 09:16:04	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-30 09:16:22	<--	Xatenev (~Xatenev@2a02:8108:9640:4455:c40d:2a7c:f5ff:f284) has quit (Read error: Connection reset by peer)
2019-10-30 09:18:17	<--	gnu3ra_ (~gnu3ra@c-98-226-242-1.hsd1.il.comcast.net) has quit (Ping timeout: 265 seconds)
2019-10-30 09:23:52	-->	gnu3ra_ (~gnu3ra@c-98-226-242-1.hsd1.il.comcast.net) has joined ##rust
2019-10-30 09:24:23	-->	adamgr (~adamgr@c-24-16-28-124.hsd1.wa.comcast.net) has joined ##rust
2019-10-30 09:25:43	-->	m0rphism (~m0rphism@HSI-KBW-082-212-034-016.hsi.kabelbw.de) has joined ##rust
2019-10-30 09:25:44	<--	CodesInChaos (~cic@unaffiliated/codesinchaos) has quit (Ping timeout: 276 seconds)
2019-10-30 09:29:10	-->	dftxbs3e_ (~dftxbs3e@unaffiliated/dftxbs3e) has joined ##rust
2019-10-30 09:29:19	<--	dftxbs3e_ (~dftxbs3e@unaffiliated/dftxbs3e) has quit (Remote host closed the connection)
2019-10-30 09:35:14	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 240 seconds)
2019-10-30 09:37:01	-->	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-10-30 09:39:20	<--	bitwinery (~bitwinery@c-73-37-18-139.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2019-10-30 09:41:27	-->	cdown_ (~cdown@199.201.66.0) has joined ##rust
2019-10-30 09:42:17	-->	INSANU (~jhonnyvar@51.37.141.135) has joined ##rust
2019-10-30 09:43:38	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 240 seconds)
2019-10-30 09:43:49	--	cdown_ is now known as cdown
2019-10-30 09:49:47	<--	INSANU (~jhonnyvar@51.37.141.135) has quit (Read error: Connection reset by peer)
2019-10-30 09:55:58	-->	fanta1 (~fanta1@p200300F76BC5850071AAF776B3FB1258.dip0.t-ipconnect.de) has joined ##rust
2019-10-30 09:59:43	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-10-30 09:59:45	<--	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has quit (Ping timeout: 250 seconds)
2019-10-30 10:00:40	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-30 10:00:45	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-30 10:00:50	<--	infinii (~infinee@061093245022.static.ctinets.com) has quit (Ping timeout: 240 seconds)
2019-10-30 10:04:50	<--	xeno (~xeno@unaffiliated/xeno) has quit (Ping timeout: 240 seconds)
2019-10-30 10:04:56	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-30 10:07:16	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 10:07:38	<--	pie_ (~pie_@unaffiliated/pie-/x-0787662) has quit (Ping timeout: 240 seconds)
2019-10-30 10:07:56	<--	tsaka_ (~torstein@x4dbf8865.dyn.telefonica.de) has quit (Ping timeout: 240 seconds)
2019-10-30 10:08:26	-->	pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined ##rust
2019-10-30 10:08:37	-->	mxco86_ (~mxco86@fpc151869-shef17-2-0-cust38.17-1.static.cable.virginm.net) has joined ##rust
2019-10-30 10:10:32	<--	marusich (~marusich@unaffiliated/marusich) has quit (Remote host closed the connection)
2019-10-30 10:10:53	<--	mxco86_ (~mxco86@fpc151869-shef17-2-0-cust38.17-1.static.cable.virginm.net) has quit (Client Quit)
2019-10-30 10:18:53	-->	Stanley00 (~Stanley00@unaffiliated/stanley00) has joined ##rust
2019-10-30 10:20:29	-->	INSANU (~jhonnyvar@51.37.141.135) has joined ##rust
2019-10-30 10:22:34	-->	infinii (~infinee@061093245022.static.ctinets.com) has joined ##rust
2019-10-30 10:24:49	-->	bromind (~bromind@pas38-2-82-224-180-63.fbx.proxad.net) has joined ##rust
2019-10-30 10:25:28	<--	INSANU (~jhonnyvar@51.37.141.135) has quit (Ping timeout: 265 seconds)
2019-10-30 10:29:20	<--	wrl (~wrl@naphtha.ix.illest.net) has quit (Read error: Connection reset by peer)
2019-10-30 10:33:24	<--	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has quit (Quit: ZNC 1.6.1 - http://znc.in)
2019-10-30 10:33:26	<--	AbedB_ (~AbedBhuty@bzq-79-183-5-209.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-10-30 10:34:11	-->	MrFahrenheit (~zumbi@unaffiliated/rageofthou) has joined ##rust
2019-10-30 10:35:23	<--	infinii (~infinee@061093245022.static.ctinets.com) has quit (Ping timeout: 268 seconds)
2019-10-30 10:37:18	-->	weirane (~Thunderbi@2001:da8:d800:196:25b0:eccf:470e:b25c) has joined ##rust
2019-10-30 10:38:32	<--	weirane (~Thunderbi@2001:da8:d800:196:25b0:eccf:470e:b25c) has left ##rust
2019-10-30 10:41:36	-->	infinii (~infinee@061093245022.static.ctinets.com) has joined ##rust
2019-10-30 10:48:43	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-30 10:50:02	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-30 10:51:51	-->	cart_man (~cart_man@105.226.51.146) has joined ##rust
2019-10-30 10:51:59	cart_man	What is the best way to match a String ?
2019-10-30 10:53:05	-->	_Vi (~vi@2001:470:7bd6:1000::2) has joined ##rust
2019-10-30 10:53:14	cart_man	 hastebin.com/qizimoxini.js
2019-10-30 10:53:32	Moongoodgirl	as in `match`, against constant strings?
2019-10-30 10:54:25	cart_man	Moongoodgirl, Wwell what ever that is. It gives me an error expected one of '...', '..=' , '..' or \|\ here
2019-10-30 10:54:39	cart_man	and indicates the "-n"
2019-10-30 10:55:36	-->	libertyprime (~libertypr@118.149.158.87) has joined ##rust
2019-10-30 10:55:38	<--	baali (~baali@59.98.234.229) has quit (Ping timeout: 240 seconds)
2019-10-30 10:55:51	Moongoodgirl	`match _.as_ref() { "-n" => _ }`
2019-10-30 10:56:01	-->	baali (~baali@59.98.237.91) has joined ##rust
2019-10-30 10:56:34	Moongoodgirl	note that looping like that is unidiomatic; `for arg in env::args().skip(1)` would be better
2019-10-30 10:56:54	Moongoodgirl	and, actually, you probably want to use a proper argument-parsing crate
2019-10-30 10:57:16	cart_man	Moongoodgirl, What does that word mean in context of rust? idiomatic?
2019-10-30 10:57:32	cart_man	Moongoodgirl, Maybe but this seems to easy to do?
2019-10-30 10:57:44	cart_man	Just ... is it -n  ... ok throw the next arg in here
2019-10-30 11:00:17	Moongoodgirl	it /works/, but it's weird in Rust|not typically how things are done|there's a better or more common way
2019-10-30 11:01:55	Moongoodgirl	If you have more than a couple options, you're gonna run into a lot of boilerplate pretty quickly
2019-10-30 11:02:24	cart_man	Moongoodgirl, I only have 4 luckily ... its very simple and the program is meant to be as lean as possible
2019-10-30 11:02:37	Moongoodgirl	(also this doesn't correctly handle `-mn foo` where -m is a flag—that's pretty much universally considered equivalent to `-m -n foo`, but won't work with your code)
2019-10-30 11:02:57	cart_man	Problem with the Iterator is that suppose the arg of args is "-m" how do I tell it to use the "NEXT" arg ?
2019-10-30 11:03:03	Moongoodgirl	Premature optimization? We have zero-cost abstractions and link-time optimization and stuff.
2019-10-30 11:03:13	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-30 11:04:26	cart_man	Moongoodgirl, I see what you are saying
2019-10-30 11:05:02	-->	tsaka_ (~torstein@ip5b403b7b.dynamic.kabel-deutschland.de) has joined ##rust
2019-10-30 11:09:51	Moongoodgirl	You can bind the iterator to a variable and then call next() repeatedly. `let mut args = env::args().skip(1); while let Some(arg) = args.next() { match arg.as_ref() { "-n" => println!("{:?}", args.next()) } }`
2019-10-30 11:10:32	Moongoodgirl	but actually try using an argument-parsing crate, and measure the size of your program built with --release, and consider whether it's really too big
2019-10-30 11:11:29	-->	anovick_ (~anovick@bzq-109-65-60-116.red.bezeqint.net) has joined ##rust
2019-10-30 11:11:32	<--	anovick_ (~anovick@bzq-109-65-60-116.red.bezeqint.net) has quit (Remote host closed the connection)
2019-10-30 11:11:54	-->	anovick (~anovick@bzq-109-65-60-116.red.bezeqint.net) has joined ##rust
2019-10-30 11:12:50	<--	anovick (~anovick@bzq-109-65-60-116.red.bezeqint.net) has left ##rust
2019-10-30 11:13:12	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 11:22:00	heeen	can someone try to run the vulkano triangle example and try to close the window using window decorations? for me it will not close and the window manager complains about the app not responding
2019-10-30 11:24:14	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-10-30 11:30:37	-->	rorymckinley (~rorymckin@41.13.238.214) has joined ##rust
2019-10-30 11:32:41	-->	mkulke (3e601b02@62.96.27.2) has joined ##rust
2019-10-30 11:33:23	rorymckinley	Hello - I am literally following along with the Rust book tutorial, and I noticed that, after adding `rand = "0.3.14"` to Cargo.toml, `cargo build` installed 2 versions of `rand` - `rand v0.3.23` and `rand v0.4.6` - what have I done wrong?
2019-10-30 11:33:53	mkulke	Hi, there i'm trying to cancel a tokio::timer::Delay future. Can i still do that once it's `.await`ed?
2019-10-30 11:33:57	j`ey	that's the only line you have in your Cargo.toml?
2019-10-30 11:33:59	voker57	probably other dependency required another rand version
2019-10-30 11:35:37	voker57	= does not fix the patch level, so 0.3.x will match
2019-10-30 11:42:42	<--	gauteh (gautehmatr@gateway/shell/matrix.org/x-vvcheznktwbkoqwr) has quit (Read error: Connection reset by peer)
2019-10-30 11:42:42	<--	ilmari_ (ilmariilma@perl/developer/ilmari) has quit (Read error: Connection reset by peer)
2019-10-30 11:42:42	<--	colemickens (colemicken@pdpc/supporter/professional/geomyidae) has quit (Remote host closed the connection)
2019-10-30 11:42:42	<--	mjs2600 (mjs2600mat@gateway/shell/matrix.org/x-slhcqgjcdekeunfq) has quit (Read error: Connection reset by peer)
2019-10-30 11:42:42	<--	flacks (flacksmatr@gateway/shell/matrix.org/x-xktjcisiztqmhibe) has quit (Read error: Connection reset by peer)
2019-10-30 11:42:42	<--	Ericson2314 (ericson231@gateway/shell/matrix.org/x-lvhqkcngmpsylumt) has quit (Remote host closed the connection)
2019-10-30 11:42:42	<--	alec[m] (alecowlsio@gateway/shell/matrix.org/x-jktgtiqenppbzckp) has quit (Remote host closed the connection)
2019-10-30 11:42:42	rorymckinley	Yes, that is the only line I have under dependencies - should I just update the Cargo.toml file to use the newer rand lib?
2019-10-30 11:42:42	<--	siraben (sirabenmat@gateway/shell/matrix.org/x-ntyuafnzxfkqzvbq) has quit (Read error: Connection reset by peer)
2019-10-30 11:42:42	<--	msrd0 (msrd0msrd0@gateway/shell/matrix.org/x-pbnnnajeitzdfdwf) has quit (Write error: Connection reset by peer)
2019-10-30 11:43:05	<--	pknull (~pooky@184.103.126.184) has quit (Read error: Connection reset by peer)
2019-10-30 11:43:09	voker57	post your Cargo.toml
2019-10-30 11:43:43	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-30 11:43:58	voker57	if tutorial is made for that version of rand, you might want to keep that version
2019-10-30 11:44:16	Alexendoo	mkulke: You could wrap it in an Abortable from futures_util
2019-10-30 11:44:26	<--	la_croix (~la_croix@cpc97624-walt24-2-0-cust98.13-2.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2019-10-30 11:44:29	<--	mkulke (3e601b02@62.96.27.2) has quit (Remote host closed the connection)
2019-10-30 11:46:35	rorymckinley	voker57: https://gist.github.com/rorymckinley/d70a957bb88b697a44a21fc4d9c55dfd
2019-10-30 11:46:55	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-30 11:46:57	voker57	rorymckinley: that's Cargo.lock not .toml
2019-10-30 11:47:06	-->	la_croix (~la_croix@cpc97624-walt24-2-0-cust98.13-2.cable.virginm.net) has joined ##rust
2019-10-30 11:47:07	j`ey	the toml is at the bottom
2019-10-30 11:47:30	voker57	ah
2019-10-30 11:47:36	voker57	it's probably windows thing
2019-10-30 11:47:42	j`ey	rand 0.3.23 has a dependency on rand 0.4.6
2019-10-30 11:47:44	rorymckinley	Yeah, sorry, when I created the gist, the Cargo.toml was the first file I added
2019-10-30 11:47:49	cart_man	Moongoodgirl, What does as_ref() do btw?
2019-10-30 11:48:04	rorymckinley	The thing is I am running on Linux :)
2019-10-30 11:48:12	Alexendoo	Oh rand does the semver trick? That's great
2019-10-30 11:48:14	voker57	nvm j`ey is right
2019-10-30 11:48:18	cart_man	Ohh cheap reference-to-reference conversion
2019-10-30 11:48:42	voker57	so, not your fault, keep going :)
2019-10-30 11:48:46	j`ey	https://github.com/dtolnay/semver-trick/
2019-10-30 11:48:47	rorymckinley	Ok, is that common practice for an older version of a library to depend on a newer version?
2019-10-30 11:48:50	j`ey	related to this rorymckinley
2019-10-30 11:50:07	cart_man	Moongoodgirl, Ok so lets say I use match &args[n].as_ref() { "-n" => {}}  what should "-n" be?  "-n".as_ref() or String::from("-n") ?
2019-10-30 11:50:26	cart_man	meant String_fromUtf8
2019-10-30 11:50:32	<--	narispo (~narispo@2a01:e0a:2a2:1590:29c9:8f2e:abc6:6667) has quit (Ping timeout: 246 seconds)
2019-10-30 11:51:09	-->	narispo (~narispo@37.171.222.86) has joined ##rust
2019-10-30 11:52:45	rorymckinley	Ah, thanks voker, and j'ey - I (sorta) get it now - at least well enough to move on :)
2019-10-30 11:53:22	j`ey	rorymckinley: gl
2019-10-30 11:53:32	rorymckinley	thanks :)
2019-10-30 11:56:04	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 11:58:36	<--	lineus (~lineus@24.101.206.59) has quit (Ping timeout: 240 seconds)
2019-10-30 11:59:55	-->	lineus (~lineus@dynamic-acs-24-101-206-59.zoominternet.net) has joined ##rust
2019-10-30 12:00:11	-->	grabarz (~janko@ip5f5bf62d.dynamic.kabel-deutschland.de) has joined ##rust
2019-10-30 12:03:47	<--	adamgr (~adamgr@c-24-16-28-124.hsd1.wa.comcast.net) has quit (Quit: adamgr)
2019-10-30 12:08:46	-->	colemickens (colemicken@pdpc/supporter/professional/geomyidae) has joined ##rust
2019-10-30 12:10:45	-->	couchy (~Couchy@185.79-161-15.customer.lyse.net) has joined ##rust
2019-10-30 12:17:20	-->	ot (~css@unaffiliated/css) has joined ##rust
2019-10-30 12:21:26	-->	INSANU (~jhonnyvar@51.37.141.135) has joined ##rust
2019-10-30 12:21:51	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Remote host closed the connection)
2019-10-30 12:24:03	<--	INSANU (~jhonnyvar@51.37.141.135) has quit (Read error: Connection reset by peer)
2019-10-30 12:24:13	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-30 12:26:07	<--	couchy (~Couchy@185.79-161-15.customer.lyse.net) has quit (Quit: WeeChat 2.6)
2019-10-30 12:27:04	<--	narispo (~narispo@37.171.222.86) has quit (Ping timeout: 264 seconds)
2019-10-30 12:32:33	<--	rorymckinley (~rorymckin@41.13.238.214) has quit (Ping timeout: 268 seconds)
2019-10-30 12:32:50	-->	b5509cd (6d9b4522@gateway/web/cgi-irc/kiwiirc.com/ip.109.155.69.34) has joined ##rust
2019-10-30 12:35:50	-->	mkulke (3e601b02@62.96.27.2) has joined ##rust
2019-10-30 12:37:05	-->	narispo (~narispo@37.172.85.124) has joined ##rust
2019-10-30 12:38:47	<--	masonl (~masonl@194-193-202-239.tpgi.com.au) has quit (Ping timeout: 250 seconds)
2019-10-30 12:38:57	mkulke	Hello, however recommended `futures_util::future::abortable` to me earlier (before the crappy web irc client kicked me out): Thank you very much. This worked perfectly, i'll have to look into the future util crate, it looks very rather elegant
2019-10-30 12:39:04	mkulke	*whoever
2019-10-30 12:39:17	<--	libertyprime (~libertypr@118.149.158.87) has quit (Ping timeout: 240 seconds)
2019-10-30 12:41:29	-->	libertyprime (~libertypr@124.197.60.232) has joined ##rust
2019-10-30 12:43:42	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-10-30 12:46:07	<--	Coldblackice (~c@unaffiliated/coldblackice) has quit (Ping timeout: 268 seconds)
2019-10-30 12:47:50	<--	crockwork (~crockwork@2604:c340:2000:0:a137:f278:f9ae:525) has quit (Quit: crockwork)
2019-10-30 12:51:44	-->	BeerLove_ (~BeerBuddy@125.22.102.134) has joined ##rust
2019-10-30 12:52:30	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 12:57:49	-->	IlPalazzo-ojiisa (c3fb7554@195.251.117.84) has joined ##rust
2019-10-30 12:59:27	IlPalazzo-ojiisa	https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=ba931dd99b789cd61a7cbfda7b1c8b77
2019-10-30 12:59:31	IlPalazzo-ojiisa	Why doesn't this work?
2019-10-30 12:59:55	<--	mkulke (3e601b02@62.96.27.2) has quit (Ping timeout: 260 seconds)
2019-10-30 13:00:06	j`ey	Sender takes a Type
2019-10-30 13:00:59	j`ey	type Sndr = std::sync::mpsc::Sender<String>; fixes the first error
2019-10-30 13:01:01	IlPalazzo-ojiisa	...even though channel() doesn't?
2019-10-30 13:01:14	-->	Coldblackice (~c@unaffiliated/coldblackice) has joined ##rust
2019-10-30 13:02:11	j`ey	channel does
2019-10-30 13:02:25	j`ey	it's just inferred from context
2019-10-30 13:02:53	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-30 13:03:07	IlPalazzo-ojiisa	Oh! In that case, thank you @context for letting Rust infer the type.
2019-10-30 13:03:17	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 240 seconds)
2019-10-30 13:03:31	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Remote host closed the connection)
2019-10-30 13:03:54	IlPalazzo-ojiisa	It was so simple, after all. Thank you!
2019-10-30 13:05:15	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-10-30 13:07:44	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-30 13:08:34	-->	Ericson2314 (ericson231@gateway/shell/matrix.org/x-zikrtcvpfdqnvskv) has joined ##rust
2019-10-30 13:08:34	-->	ilmari_ (ilmariilma@perl/developer/ilmari) has joined ##rust
2019-10-30 13:08:34	-->	msrd0 (msrd0msrd0@gateway/shell/matrix.org/x-vgjjboasteewgpvp) has joined ##rust
2019-10-30 13:08:34	-->	mjs2600 (mjs2600mat@gateway/shell/matrix.org/x-gzgljmwwaujhxkgn) has joined ##rust
2019-10-30 13:08:34	-->	alec[m] (alecowlsio@gateway/shell/matrix.org/x-fqaxouyqrsdkqhhu) has joined ##rust
2019-10-30 13:08:35	-->	gauteh (gautehmatr@gateway/shell/matrix.org/x-qwrohwmxidmfyxco) has joined ##rust
2019-10-30 13:08:35	-->	flacks (flacksmatr@gateway/shell/matrix.org/x-sseowzznwqenmtgn) has joined ##rust
2019-10-30 13:08:35	-->	siraben (sirabenmat@gateway/shell/matrix.org/x-nxvkmbyqpazcxplp) has joined ##rust
2019-10-30 13:16:23	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 252 seconds)
2019-10-30 13:16:40	<--	IlPalazzo-ojiisa (c3fb7554@195.251.117.84) has quit (Remote host closed the connection)
2019-10-30 13:18:55	<--	b5509cd (6d9b4522@gateway/web/cgi-irc/kiwiirc.com/ip.109.155.69.34) has quit (Remote host closed the connection)
2019-10-30 13:21:39	<--	m0rphism (~m0rphism@HSI-KBW-082-212-034-016.hsi.kabelbw.de) has quit (Ping timeout: 264 seconds)
2019-10-30 13:26:26	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 13:34:50	<--	rrooij (~rrooij@unaffiliated/rroij) has quit (Ping timeout: 268 seconds)
2019-10-30 13:35:31	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-30 13:37:03	-->	m0rphism (~m0rphism@HSI-KBW-082-212-034-016.hsi.kabelbw.de) has joined ##rust
2019-10-30 13:45:15	-->	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has joined ##rust
2019-10-30 13:56:28	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-10-30 14:00:19	<--	BeerLove_ (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-30 14:00:57	<--	gnu3ra_ (~gnu3ra@c-98-226-242-1.hsd1.il.comcast.net) has quit (Ping timeout: 240 seconds)
2019-10-30 14:02:55	-->	__gotcha (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-30 14:05:54	<--	efm (~efm@vpn.tummy.com) has quit (Remote host closed the connection)
2019-10-30 14:06:19	-->	gnu3ra_ (~gnu3ra@c-98-226-242-1.hsd1.il.comcast.net) has joined ##rust
2019-10-30 14:11:54	-->	AbedB_ (~AbedBhuty@bzq-79-176-28-84.red.bezeqint.net) has joined ##rust
2019-10-30 14:12:23	Flonk	I tried to follow https://rust-lang-nursery.github.io/rust-cookbook/algorithms/randomness.html - so I added `rand = "0.7.2"` to my Cargo.toml since random numbers are not part of of the standard library it seems. I get a really obscure error when running `cargo build && cargo run`: https://hastebin.com/teficeyufi
2019-10-30 14:14:06	voker57	what's your rustc/cargo version?
2019-10-30 14:14:18	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-30 14:14:29	voker57	extern crate should no longer be needed
2019-10-30 14:14:41	voker57	i mean, the line, not the crate itself
2019-10-30 14:16:58	faern	Can we hide Rust 2015 deep in the mines of Moria soon? Way too many people find old docs and try to use extern crate or use trait objects without the dyn keyword etc.
2019-10-30 14:18:07	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-10-30 14:18:07	voker57	problem here is not docs but old rust itself
2019-10-30 14:20:02	faern	Sure. cargo+rustc should have a built in self destruction date. If the system time is >12 weeks after the release date it can warn ;)
2019-10-30 14:21:43	tjis	not using dyn should give you a nice warning though right?
2019-10-30 14:21:46	voker57	just make the only possible way to run rust through the rustup curl2sudo ;)
2019-10-30 14:22:03	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 14:22:19	-->	INSANU (~jhonnyvar@51.37.141.135) has joined ##rust
2019-10-30 14:24:50	<--	INSANU (~jhonnyvar@51.37.141.135) has quit (Read error: Connection reset by peer)
2019-10-30 14:30:45	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-30 14:33:21	<--	_Vi (~vi@2001:470:7bd6:1000::2) has quit (Quit: _Vi)
2019-10-30 14:33:38	faern	voker57: Just make the compiler not something you can download. The core team manages a number of build servers with the latest and greatest compiler and you submit your code to them for build.
2019-10-30 14:34:03	-->	ksqsf (~user@222.195.68.197) has joined ##rust
2019-10-30 14:42:50	<--	rrooij (~rrooij@unaffiliated/rroij) has quit (Ping timeout: 240 seconds)
2019-10-30 14:47:54	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-10-30 14:48:13	<--	sobol (~steve@kauai.gps.caltech.edu) has quit (Ping timeout: 268 seconds)
2019-10-30 14:50:26	<--	grabarz (~janko@ip5f5bf62d.dynamic.kabel-deutschland.de) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-30 14:54:54	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-30 15:00:55	Flonk	voker57, oh I see
2019-10-30 15:01:02	Flonk	voker57, lemme try that then
2019-10-30 15:01:14	<--	baali (~baali@59.98.237.91) has quit (Ping timeout: 240 seconds)
2019-10-30 15:01:26	voker57	i hope you meant "try updating rust"
2019-10-30 15:02:00	Flonk	I'm on v1.37
2019-10-30 15:02:08	Flonk	I just followed orders
2019-10-30 15:02:13	voker57	hm weird then
2019-10-30 15:02:17	Flonk	And wrote "extern crate rand"
2019-10-30 15:02:32	voker57	on 1.36 unmodified example works for me
2019-10-30 15:03:16	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-30 15:04:13	voker57	Flonk: add edition = "2018" to [package] section of your Cargo.toml if it is not there
2019-10-30 15:04:13	Flonk	Does it matter that this is not main.rs? (It did matter with `mod` statements, I had to add a #[path] directive)
2019-10-30 15:04:24	Flonk	voker57, oh, I'll do that
2019-10-30 15:05:10	voker57	if you set the path to binary in Cargo.toml it shouldn't matter
2019-10-30 15:05:26	Flonk	voker57, yup the error disappeared now. The edition thing did it
2019-10-30 15:05:38	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-30 15:05:42	Flonk	Thanks :)
2019-10-30 15:05:51	voker57	yw
2019-10-30 15:09:18	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-10-30 15:13:52	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 15:15:36	-->	the_bugyi_man (~bryan@pool-173-71-68-161.cmdnnj.fios.verizon.net) has joined ##rust
2019-10-30 15:22:34	-->	grabarz (~janko@p50857DC3.dip0.t-ipconnect.de) has joined ##rust
2019-10-30 15:23:18	<--	grabarz (~janko@p50857DC3.dip0.t-ipconnect.de) has quit (Client Quit)
2019-10-30 15:23:28	<--	seanBE (~seanBE@unaffiliated/seanbe) has quit (Ping timeout: 264 seconds)
2019-10-30 15:24:00	j`ey	what is cargo putting in the .wasm that changes every build?
2019-10-30 15:24:41	j`ey	(I have a .wasm checked into git, cargo build without any changes seems to modify the file)
2019-10-30 15:25:52	<--	SpaceManiac (~SpaceMani@2601:200:4400:f::1028) has quit (Ping timeout: 264 seconds)
2019-10-30 15:25:54	Kinnison	I imagine it's possible its putting build date/time stamps in there or somesuch
2019-10-30 15:26:22	j`ey	it changes the .wasm quite a bit
2019-10-30 15:26:25	j`ey	looking at the hexdump
2019-10-30 15:27:19	j`ey	1097bytes difference
2019-10-30 15:28:02	<--	leaves (~leaves@unaffiliated/leaves) has quit (Quit: leaving)
2019-10-30 15:28:03	Kinnison	I guess it's possible there might be non-determininsm in the optimisers, but I'm grasping at air now
2019-10-30 15:28:11	j`ey	I'd hope not!
2019-10-30 15:29:55	-->	seanBE (~seanBE@unaffiliated/seanbe) has joined ##rust
2019-10-30 15:32:09	-->	SpaceManiac (~SpaceMani@2601:200:4400:f::100f) has joined ##rust
2019-10-30 15:32:33	<--	holgersson (~quassel@unaffiliated/holgersson) has quit (Ping timeout: 250 seconds)
2019-10-30 15:34:20	j`ey	maybe codegen-units is doing something here
2019-10-30 15:34:38	Kinnison	perhaps try setting it to 1
2019-10-30 15:35:30	-->	holgersson (~quassel@unaffiliated/holgersson) has joined ##rust
2019-10-30 15:35:48	j`ey	I ran cargo build, md5sum, rm, cargo build, md5sum, and that's the same for a native build
2019-10-30 15:36:44	-->	INSANU (~jhonnyvar@51.37.141.135) has joined ##rust
2019-10-30 15:37:50	j`ey	I wonder if I just messed up and somehow didn't commit the binary when i thought I had
2019-10-30 15:39:07	j`ey	yes, I think I messed up
2019-10-30 15:40:02	<--	holgersson (~quassel@unaffiliated/holgersson) has quit (Ping timeout: 240 seconds)
2019-10-30 15:41:14	<--	INSANU (~jhonnyvar@51.37.141.135) has quit (Ping timeout: 240 seconds)
2019-10-30 15:41:37	-->	holgersson (~quassel@unaffiliated/holgersson) has joined ##rust
2019-10-30 15:44:18	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-30 15:46:40	delYsid	https://github.com/nix-rust/nix/pull/1147 <-- surprised this got overlooked, so I am suspicious about my judgement.  How would use do a poll-loop without this PR?  Did I overlook something?
2019-10-30 15:46:57	delYsid	s/use/you/
2019-10-30 15:47:07	j`ey	Kinnison: just FYI I tried to squash the wasm with git rebase, but when i got the conflict I just did 'git add' to the wasm binary, thinking it was the updated one
2019-10-30 15:47:26	Kinnison	rebasing with binary lumps is never fun
2019-10-30 15:48:21	-->	brool (~grendel@2600:1700:7d20:ae60:2c68:fddb:7f86:c16b) has joined ##rust
2019-10-30 15:48:59	j`ey	squashed properly now, and everything is fine
2019-10-30 15:51:11	<--	lord| (~solenodic@unaffiliated/solenodic) has quit (Ping timeout: 276 seconds)
2019-10-30 15:53:11	-->	lord| (~solenodic@unaffiliated/solenodic) has joined ##rust
2019-10-30 15:54:26	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-30 16:00:03	-->	baali (~baali@59.98.237.91) has joined ##rust
2019-10-30 16:01:06	j`ey	has anyone used miniz_oxide, or can recommend any pure rust compression/decompression crates that can be compiled to wasm?
2019-10-30 16:02:20	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-30 16:02:45	j`ey	(Going to use it for benchmarks)
2019-10-30 16:03:51	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 16:03:56	j`ey	Also maybe going to use the zip crate
2019-10-30 16:07:14	<--	xeno (~xeno@unaffiliated/xeno) has quit (Ping timeout: 240 seconds)
2019-10-30 16:08:39	-->	johnw_ (~johnw@haskell/developer/johnw) has joined ##rust
2019-10-30 16:10:52	<--	johnw (~johnw@haskell/developer/johnw) has quit (Ping timeout: 264 seconds)
2019-10-30 16:11:21	-->	con3 (~kvirc@154.119.40.237) has joined ##rust
2019-10-30 16:13:44	<--	con3 (~kvirc@154.119.40.237) has quit (Max SendQ exceeded)
2019-10-30 16:14:28	-->	con3 (~kvirc@154.119.40.237) has joined ##rust
2019-10-30 16:16:19	<--	con3 (~kvirc@154.119.40.237) has quit (Max SendQ exceeded)
2019-10-30 16:16:47	-->	con3 (~kvirc@154.119.40.237) has joined ##rust
2019-10-30 16:24:30	<--	Iolo (~iolo@dsl-tkubng22-58c023-38.dhcp.inet.fi) has quit (Quit: ZNC 1.6.6+deb1ubuntu0.2 - http://znc.in)
2019-10-30 16:27:12	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-10-30 16:27:26	-->	Iolo (~iolo@dsl-tkubng22-58c023-38.dhcp.inet.fi) has joined ##rust
2019-10-30 16:35:23	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Quit: Mom decided I had to go to bed.)
2019-10-30 16:39:23	wucke13	Can a rust macro like this work? my_macro!(var_x, number_y,((name,type), ...));?
2019-10-30 16:40:04	-->	sheelp (~textual@d104-157-15-48.abhsia.telus.net) has joined ##rust
2019-10-30 16:41:22	<--	polyzen (~dmc@archlinux/trusteduser/polyzen) has quit (Quit: WeeChat 2.6)
2019-10-30 16:41:53	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-30 16:43:34	-->	t7 (~tommo@2a00:23c5:1284:fc00:78a5:7a85:53a1:1317) has joined ##rust
2019-10-30 16:43:51	<--	OmniMancer (~Paul@101.100.137.239) has quit (Quit: Leaving.)
2019-10-30 16:45:25	-->	dmc (~dmc@archlinux/trusteduser/polyzen) has joined ##rust
2019-10-30 16:47:11	Flonk	God this language is complicated. It's like I'm learning pointers/monads/chinese all over again.
2019-10-30 16:47:46	Kinnison	Flonk: it has a bit of a vertical learning curve at the start, but soon it'll even out a bit for you
2019-10-30 16:48:11	Kinnison	Flonk: For me, the trick was to not try and run before I could walk -- I kept trying to do small simple things, rather than trying to do "oh I know how to do this in C, so it must be easy in Rust" type things
2019-10-30 16:49:39	sheelp	I'd like to improve my quick implementation of file transfer with a progress bar and would really appreciate some feedback!  https://gist.github.com/rust-play/a68fefa627313251e70dca91a16c534e.
2019-10-30 16:49:42	Flonk	Yeah I try to keep it simple :)
2019-10-30 16:50:11	sheelp	 One thing I know I can do, but I'm not sure how, is to remove the allocation from poll_next, but I seem to keep getting lifetime errors when I move the buffer into the UploadProgress type.
2019-10-30 16:50:16	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 16:50:21	Flonk	Right now I added a reference to a struct and all of a sudden <'a>'s creep into the whole codebase and nothing compiles
2019-10-30 16:50:51	sheelp	Kinnison, I know what you mean, the, in C I'd do it like this is really biting me right now.
2019-10-30 16:51:48	wucke13	The other way round: How would the matcher of a macro look, that takes to expr and at least one tuple of (type, identifier)?
2019-10-30 16:52:02	Kinnison	Flonk: Yeah, learning about how to decide between borrowing something long-term, borrowing it only when called, and taking ownership or cloning something, can take a while
2019-10-30 16:52:20	Kinnison	Flonk: And sometimes you just gotta have the lifetimes spelled out :D
2019-10-30 16:52:53	Flonk	...I need more coffee
2019-10-30 16:53:05	Kinnison	LD
2019-10-30 16:53:06	Kinnison	:D
2019-10-30 16:55:19	-->	kmelvn (karl@2a01:7e00::f03c:91ff:fed2:9e14) has joined ##rust
2019-10-30 16:58:35	sheelp	Does someone see how I might remove the allocation on line 40 of https://gist.github.com/rust-play/a68fefa627313251e70dca91a16c534e so that I don't allocate on every call.  When I try to make it a field on UploadProgress I can't pass it to inner.read_exact as I would need 2 mutable references.
2019-10-30 16:59:13	sheelp	Is my approach even valid?  I may not be thinking idiomatically.
2019-10-30 17:05:00	ZirconiumX	sheelp: Maybe move the Vec into the UploadProgress struct?
2019-10-30 17:05:35	<--	efm (~efm@vpn.tummy.com) has quit (Read error: Connection reset by peer)
2019-10-30 17:08:49	<--	ellcs (~mantel@212.12.60.67) has quit (Ping timeout: 268 seconds)
2019-10-30 17:10:45	sheelp	ZirconiumX, that results in the following two errors, which seems to indicate it may be the wrong approach?  Do you see something I don't?  https://gist.github.com/rust-play/7ce59bdd5120a97cbc3bf6243c8620c2
2019-10-30 17:11:39	-->	b5509cd (5223450f@gateway/web/cgi-irc/kiwiirc.com/ip.82.35.69.15) has joined ##rust
2019-10-30 17:11:41	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-10-30 17:12:43	ZirconiumX	Maybe the allocation is unavoidable here, then.
2019-10-30 17:13:06	ZirconiumX	That's rather annoying, honestly.
2019-10-30 17:13:08	ZirconiumX	Hmm.
2019-10-30 17:13:32	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Remote host closed the connection)
2019-10-30 17:13:45	-->	mandeep (~mandeep@unaffiliated/mandeepb) has joined ##rust
2019-10-30 17:14:58	dmgk	this is confusing, why the Sized requirement? https://play.rust-lang.org/?gist=cef53560ac65b4858ba83c7e8a2b87a2
2019-10-30 17:15:26	sheelp	Right?!  There has to be a better way, that's too many unnecessary allocations, especially when it scales linearly with file size.
2019-10-30 17:16:09	-->	ragecryx (~ragecryx@2a02:2149:822f:2b00:1957:d738:d011:6e4c) has joined ##rust
2019-10-30 17:24:20	wucke13	How can I get an instance of any number type from a r: Read?
2019-10-30 17:26:03	sheelp	wucke13 is the number in a string?  do you know the size of the number?
2019-10-30 17:28:05	<--	Xatenev (~I@87.190.19.178) has quit (Remote host closed the connection)
2019-10-30 17:31:52	wucke13	No, the number is in a byte stream for that I only have have an r: R with <R: Read>
2019-10-30 17:32:15	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-30 17:32:18	wucke13	And the type is known too, via $type (it's for a macro)
2019-10-30 17:34:46	-->	adamgr (~adamgr@c-24-16-28-124.hsd1.wa.comcast.net) has joined ##rust
2019-10-30 17:34:52	<--	sheelp (~textual@d104-157-15-48.abhsia.telus.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-30 17:37:34	-->	INSANU (~jhonnyvar@51.37.141.135) has joined ##rust
2019-10-30 17:39:21	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-30 17:41:14	<--	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has quit (Ping timeout: 240 seconds)
2019-10-30 17:41:36	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-30 17:41:57	<--	INSANU (~jhonnyvar@51.37.141.135) has quit (Ping timeout: 240 seconds)
2019-10-30 17:41:58	-->	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has joined ##rust
2019-10-30 17:42:44	-->	_plasma (~plasma@192.71.233.110) has joined ##rust
2019-10-30 17:42:54	_plasma	Discord can suck it
2019-10-30 17:44:20	<--	xeno (~xeno@unaffiliated/xeno) has quit (Ping timeout: 265 seconds)
2019-10-30 17:47:19	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-30 17:47:43	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 265 seconds)
2019-10-30 17:50:17	<--	ragecryx (~ragecryx@2a02:2149:822f:2b00:1957:d738:d011:6e4c) has quit (Ping timeout: 252 seconds)
2019-10-30 17:50:51	ZirconiumX	So, I've ran clippy in pedantic mode on my code and ran into the filter_map lint
2019-10-30 17:51:29	ZirconiumX	Where it suggests replacing filter(p).flat_map(q) with .flat_map() and returning an empty Iterator
2019-10-30 17:51:54	ZirconiumX	But my flat_map returns a Map iterator, so to do this I would have to map over nothing
2019-10-31 09:16:12	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-10-31 09:16:12	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-10-31 09:16:12	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-10-31 09:16:12	--	Channel ##rust: 569 nicks (2 ops, 0 voices, 567 normals)
2019-10-31 09:16:22	-->	grabarz (~janko@d16-206.static.icpnet.pl) has joined ##rust
2019-10-31 09:16:28	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-10-31 09:17:09	<--	josteink (~jostein@cm-84.211.32.128.getinternet.no) has quit (Quit: BIOS update, yay)
2019-10-31 09:24:50	<--	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has quit (Ping timeout: 276 seconds)
2019-10-31 09:24:56	<--	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has quit (Read error: Connection reset by peer)
2019-10-31 09:25:12	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Ping timeout: 246 seconds)
2019-10-31 09:25:12	<--	andirc8089 (~andirc808@mycraft1.powered.by.lunarbnc.net) has quit (Ping timeout: 246 seconds)
2019-10-31 09:25:17	-->	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has joined ##rust
2019-10-31 09:32:16	<--	grabarz (~janko@d16-206.static.icpnet.pl) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-31 09:32:54	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-31 09:34:16	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-31 09:34:48	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Read error: Connection reset by peer)
2019-10-31 09:37:59	-->	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has joined ##rust
2019-10-31 09:39:41	-->	andirc8089 (~andirc808@mycraft1.powered.by.lunarbnc.net) has joined ##rust
2019-10-31 09:45:31	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 09:48:05	-->	grabarz (~janko@d16-206.static.icpnet.pl) has joined ##rust
2019-10-31 09:51:05	-->	tsaka_ (~torstein@2a02:8109:9a80:7030:9742:1e2b:392d:ec69) has joined ##rust
2019-10-31 10:02:28	<--	libertyprime (~libertypr@client-172-202.guest.otago.ac.nz) has quit (Ping timeout: 240 seconds)
2019-10-31 10:02:38	yrp	anyone know anything that plugs cargo bench into linux perf and profiles my benchmarks
2019-10-31 10:05:56	<--	mxco86 (~mxco86@ec2-18-202-244-205.eu-west-1.compute.amazonaws.com) has quit (Quit: Ta ta)
2019-10-31 10:07:15	-->	mxco86 (~mxco86@ec2-18-202-244-205.eu-west-1.compute.amazonaws.com) has joined ##rust
2019-10-31 10:08:26	wucke13	Is the size of a struct always just the sum of its members (if all members are primitives)?
2019-10-31 10:09:00	Remosi	there can be alignment padding
2019-10-31 10:10:03	<--	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has quit (Ping timeout: 240 seconds)
2019-10-31 10:12:15	<--	avu (~jan@unaffiliated/avu) has left ##rust
2019-10-31 10:13:14	-->	ytain (~ghfg@2607:f2c0:948e:4000:1aa:1d8:c827:67a2) has joined ##rust
2019-10-31 10:13:35	-->	Singmyr (~Singmyr@c83-253-123-62.bredband.comhem.se) has joined ##rust
2019-10-31 10:14:14	faern	evalr: struct A(u8,u16); std::mem::size_of::<A>()
2019-10-31 10:14:16	--	Notice(evalr): 4
2019-10-31 10:14:43	faern	wucke13: See ^ There is padding. So it occupies the same space as 2 x u16
2019-10-31 10:14:44	-->	kuldeep (~kuldeep@unaffiliated/kuldeepdhaka) has joined ##rust
2019-10-31 10:18:39	<--	Singmyr (~Singmyr@c83-253-123-62.bredband.comhem.se) has quit (Ping timeout: 268 seconds)
2019-10-31 10:19:32	wucke13	Ah ok
2019-10-31 10:19:46	-->	libertyprime (~libertypr@118.149.212.14) has joined ##rust
2019-10-31 10:21:57	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-31 10:24:24	wucke13	Is there a way to convert a slice of an array to an actual array?
2019-10-31 10:24:42	j`ey	copy it
2019-10-31 10:25:05	wucke13	Hmmh
2019-10-31 10:25:11	yrp	dont use arrays
2019-10-31 10:25:41	wucke13	<primitive>.from_be_bytes() unfortunately expects to get arrays :D
2019-10-31 10:26:42	j`ey	oh then really just copy it
2019-10-31 10:27:39	-->	baali (~baali@59.98.237.91) has joined ##rust
2019-10-31 10:28:36	yrp	embrace u64::from_le_bytes(b[0..8].try_into().unwrap() into your heart
2019-10-31 10:28:38	j`ey	you could also use TryFrom
2019-10-31 10:28:42	j`ey	^
2019-10-31 10:28:51	yrp	e r g o n o m i x x x
2019-10-31 10:28:57	yrp	u s a b i l i t y
2019-10-31 10:29:16	jellie	It's probably frowned upon but how can I do something like x.std::io::prelude::read()
2019-10-31 10:29:40	jellie	calling a method without fully importing it, not sure that fully importing is the name
2019-10-31 10:29:55	wucke13	That try_into should never fail, right?
2019-10-31 10:30:04	Kinnison	(&mut x as &mut dyn std::io::Read).read(...) perhaps?
2019-10-31 10:30:10	j`ey	assuming the slice is big enough
2019-10-31 10:30:17	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##rust
2019-10-31 10:30:41	wucke13	Good then, thank you
2019-10-31 10:30:58	Lumpio-	No need to do dyn
2019-10-31 10:31:09	Kinnison	true'nuff
2019-10-31 10:31:37	Lumpio-	std::io::Read::read(&mut x, ...)
2019-10-31 10:31:40	Lumpio-	That should work, right?
2019-10-31 10:32:30	Kinnison	Good point, I keep forgetting methods can be called as plain functions too
2019-10-31 10:32:48	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-31 10:34:02	jellie	Ah I see :)
2019-10-31 10:34:08	jellie	I didn't know that Kinnison
2019-10-31 10:35:42	Lumpio-	jellie: You might also be interested in the "use as _" syntax
2019-10-31 10:35:45	Lumpio-	use std::io::Read as _;
2019-10-31 10:35:59	Lumpio-	It doesn't import the trait name but you can still use its methods.
2019-10-31 10:36:37	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-31 10:47:09	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 10:50:33	jellie	What was that online Rust REPL again? The one that can compile Rust code?
2019-10-31 10:50:58	yrp	play.rust-lang
2019-10-31 10:51:00	yrp	or godbolt
2019-10-31 10:51:01	-->	masonl (~masonl@194-193-202-239.tpgi.com.au) has joined ##rust
2019-10-31 10:54:08	jellie	Do I need smart pointers to do this? https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=9aea17e4b99d5c97d53445734ecea897
2019-10-31 10:54:19	jellie	I'm trying to read some text into a buffer
2019-10-31 10:55:46	j`ey	well you need to pass in a &mut Vec<u8> if you want to push like that
2019-10-31 10:56:08	j`ey	oh right, this is the Read trait, so you can't
2019-10-31 10:57:21	jellie	Yeah
2019-10-31 10:57:31	jellie	Wondering how I can update a slice
2019-10-31 10:57:37	jellie	or how it's even done
2019-10-31 10:57:47	jellie	I'm not even sure how this actually workd
2019-10-31 10:57:50	jellie	*works
2019-10-31 10:58:05	j`ey	you have to index it
2019-10-31 10:58:07	<--	baali (~baali@59.98.237.91) has quit (Ping timeout: 268 seconds)
2019-10-31 10:58:08	j`ey	buf[i] = foo;
2019-10-31 10:58:09	jellie	So I read from a file and write chunks of it to a buffer, right?
2019-10-31 10:58:38	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Ping timeout: 245 seconds)
2019-10-31 10:59:04	<--	Stanley00 (~Stanley00@unaffiliated/stanley00) has quit (Remote host closed the connection)
2019-10-31 11:01:22	jellie	j`ey: Yeah that worked
2019-10-31 11:01:37	-->	Stanley00 (~Stanley00@unaffiliated/stanley00) has joined ##rust
2019-10-31 11:06:32	-->	crockwork (~crockwork@66.205.193.158) has joined ##rust
2019-10-31 11:07:20	-->	dexterlb (~dexterlb@qtrp.org) has joined ##rust
2019-10-31 11:09:57	<--	cdown (~cdown@199.201.66.0) has quit (Ping timeout: 240 seconds)
2019-10-31 11:12:17	dexterlb	hello,
2019-10-31 11:12:17	dexterlb	I'm trying to install rustup on an arm-unknown-linux-gnueabihf based debian stretch.
2019-10-31 11:12:17	dexterlb	This is what I'm getting:
2019-10-31 11:12:17	dexterlb	error: could not download file from 'https://static.rust-lang.org/dist/channel-rust-stable.toml.sha256' to '/home/human/.rustup/tmp/nk5z6vrt9etcd3ve_file'
2019-10-31 11:12:17	dexterlb	error: caused by: failed to make network request
2019-10-31 11:12:17	dexterlb	error: caused by: https://static.rust-lang.org/dist/channel-rust-stable.toml.sha256: timed out
2019-10-31 11:12:19	dexterlb	The url is accessible with curl. What might be causing this?
2019-10-31 11:17:50	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-10-31 11:19:12	wucke13	How can one circumvent the associated type bounds are unstable error?
2019-10-31 11:19:33	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-31 11:23:38	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-10-31 11:33:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-31 11:44:27	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 11:51:56	-->	Mateon2 (~Thunderbi@unaffiliated/mateon1) has joined ##rust
2019-10-31 11:52:49	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-31 11:53:14	<--	Mateon1 (~Thunderbi@unaffiliated/mateon1) has quit (Ping timeout: 240 seconds)
2019-10-31 11:53:14	--	Mateon2 is now known as Mateon1
2019-10-31 11:53:50	-->	t7 (~tommo@2a00:23c5:1284:fc00:5083:50b6:744e:412d) has joined ##rust
2019-10-31 12:01:14	<--	libertyprime (~libertypr@118.149.212.14) has quit (Ping timeout: 240 seconds)
2019-10-31 12:02:14	<--	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has quit (Remote host closed the connection)
2019-10-31 12:02:23	-->	voidwalker (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has joined ##rust
2019-10-31 12:02:46	--	voidwalker is now known as Guest98780
2019-10-31 12:03:35	-->	libertyprime (~libertypr@124.197.60.232) has joined ##rust
2019-10-31 12:04:11	-->	cdown (~cdown@199.201.66.0) has joined ##rust
2019-10-31 12:06:38	wucke13	How can I have a trait for Something which takes a generic T with Read and Write?
2019-10-31 12:09:20	steveeJ	wucke13: what do you mean by "having a trait"?
2019-10-31 12:09:37	voker57	impl<T: Read + Write> Something<T>?
2019-10-31 12:11:26	wucke13	No, like this: https://paste.krebsco.de/GMZqrDHG
2019-10-31 12:12:05	steveeJ	wucke13: do you mean like https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=69f79ff24f6e83244479927f616c19b7?
2019-10-31 12:12:10	j`ey	you need: impl<T> X for Y<T>
2019-10-31 12:14:51	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Read error: Connection reset by peer)
2019-10-31 12:14:54	-->	__gotcha1 (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-31 12:16:24	wucke13	impl MspConnection<T: Read+Write> for MspConn<T: Read+Write>  { ... yields associated type bounds are unstable
2019-10-31 12:16:26	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-31 12:17:11	j`ey	impl<T> MspConnection for MspConn<T: Read+Write>
2019-10-31 12:17:13	--	__gotcha1 is now known as __gotcha
2019-10-31 12:17:56	steveeJ	wouldn't it be `impl<T: Read+Write> MspConnection for MspConn<T>`?
2019-10-31 12:18:38	wucke13	steveeJ: Ah, that works
2019-10-31 12:18:52	wucke13	However, then the trait always carries arround it's type
2019-10-31 12:19:07	j`ey	steveeJ: yes, I just copied and pasted and didnt change enough D:
2019-10-31 12:19:19	steveeJ	wucke13:  actually the `<T>` should probably go to `MspConnection<T>`
2019-10-31 12:19:39	steveeJ	wucke13: so you're not actually implementing the trait for a concrete type?
2019-10-31 12:19:41	-->	__gotcha1 (~Thunderbi@plone/gotcha) has joined ##rust
2019-10-31 12:19:48	j`ey	wucke13: what do you mean the trait alwasy carries around its type?
2019-10-31 12:19:56	wucke13	Yes?
2019-10-31 12:20:22	wucke13	I want an abstraction layer, where only the trait is part of the type, but not anything related to how the trait is implemented
2019-10-31 12:20:51	steveeJ	wucke13: could you demonstrate the desired usage of it?
2019-10-31 12:21:34	steveeJ	even if there's an error in the definition and/or impl
2019-10-31 12:21:43	wucke13	Yes, sure. Hang on a moment.
2019-10-31 12:22:56	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Ping timeout: 276 seconds)
2019-10-31 12:23:06	--	__gotcha1 is now known as __gotcha
2019-10-31 12:23:52	steveeJ	I also have a vague memory of the `new` method you defined won't work, because `-> Self` doesn't have a known size
2019-10-31 12:24:06	steveeJ	so you won't actually be able to use it
2019-10-31 12:24:15	wucke13	https://paste.krebsco.de/juxchasQ
2019-10-31 12:24:24	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 12:24:56	wucke13	I want an abstraction layer for a communication stub. And I don't want to pass arround the concrete type, on which the stub is implemented.
2019-10-31 12:25:18	wucke13	Does the paste make any sense for you?
2019-10-31 12:25:26	<--	karoofish (karoofish@gateway/shell/suchznc/x-dsaytcfdrujmoafa) has quit (Remote host closed the connection)
2019-10-31 12:26:07	j`ey	MspConnect::new() doesnt make sense there
2019-10-31 12:27:32	<--	masonl (~masonl@194-193-202-239.tpgi.com.au) has quit (Ping timeout: 268 seconds)
2019-10-31 12:27:50	j`ey	wucke13: im not sure if you really want new to have a type param in the trait
2019-10-31 12:28:07	wucke13	Ok, I guess I understand
2019-10-31 12:28:21	j`ey	hm lemme try something
2019-10-31 12:28:50	-->	baali (~baali@59.98.237.215) has joined ##rust
2019-10-31 12:29:37	j`ey	new seems to be a bit of a problem, cos I cant see a way to match the T of new with the T of MspConn
2019-10-31 12:30:13	j`ey	https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=aaa9104a3cb6971c8ce9e493c9174f38
2019-10-31 12:32:42	wucke13	So far that looks promising
2019-10-31 12:34:29	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-31 12:36:42	j`ey	this is the problem: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=3a93b8d9783ae0c65bbccfed231ef81d
2019-10-31 12:38:23	<--	ytain (~ghfg@2607:f2c0:948e:4000:1aa:1d8:c827:67a2) has quit (Ping timeout: 246 seconds)
2019-10-31 12:44:05	<--	pedro4 (sid145515@gateway/web/irccloud.com/x-wdcxwzkexjjzepph) has quit
2019-10-31 12:45:00	-->	pedro4 (~pedro4@109.202.107.147) has joined ##rust
2019-10-31 12:45:16	<--	baali (~baali@59.98.237.215) has quit (Ping timeout: 240 seconds)
2019-10-31 12:47:34	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-10-31 12:47:45	-->	ytain (~ghfg@2607:f2c0:9292:e000:d8b1:3bc8:62e4:b083) has joined ##rust
2019-10-31 12:49:44	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-31 12:55:16	-->	pjs902 (~quassel@140.184.2.20) has joined ##rust
2019-10-31 12:57:10	-->	baali (~baali@59.98.237.215) has joined ##rust
2019-10-31 12:57:14	<--	grabarz (~janko@d16-206.static.icpnet.pl) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-31 12:59:30	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 13:01:55	-->	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-10-31 13:04:07	-->	DeltaHeavy (~DeltaHeav@unaffiliated/deltaheavy) has joined ##rust
2019-10-31 13:06:01	-->	grabarz (~janko@d16-206.static.icpnet.pl) has joined ##rust
2019-10-31 13:12:59	<--	jinie (~jimmy@188.114.159.27) has quit (Ping timeout: 276 seconds)
2019-10-31 13:14:15	-->	Singmyr (~Singmyr@c83-253-123-62.bredband.comhem.se) has joined ##rust
2019-10-31 13:17:00	-->	Xatenev (~Xatenev@2a02:8108:9640:4455:843:5395:8d8:75b9) has joined ##rust
2019-10-31 13:19:29	<--	Singmyr (~Singmyr@c83-253-123-62.bredband.comhem.se) has quit (Ping timeout: 276 seconds)
2019-10-31 13:22:12	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-10-31 13:22:48	<--	Derriick (~Derriick@254.218.203.77.rev.sfr.net) has quit (Ping timeout: 245 seconds)
2019-10-31 13:25:37	<--	cdown (~cdown@199.201.66.0) has quit (Ping timeout: 240 seconds)
2019-10-31 13:26:07	-->	cdown (~cdown@199.201.66.0) has joined ##rust
2019-10-31 13:30:48	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-31 13:31:48	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-10-31 13:33:20	-->	jinie (~jimmy@188.114.159.27) has joined ##rust
2019-10-31 13:36:52	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-10-31 13:37:08	-->	Derriick (~Derriick@254.218.203.77.rev.sfr.net) has joined ##rust
2019-10-31 13:39:28	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 245 seconds)
2019-10-31 13:42:05	<--	jinie (~jimmy@188.114.159.27) has quit (Ping timeout: 246 seconds)
2019-10-31 13:43:52	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-10-31 13:44:35	<--	stux|RC-only (stux@endurance.xzibition.com) has quit (Read error: Connection reset by peer)
2019-10-31 13:46:26	-->	tsaka__ (~torstein@ip5b403b7b.dynamic.kabel-deutschland.de) has joined ##rust
2019-10-31 13:46:47	<--	tsaka_ (~torstein@2a02:8109:9a80:7030:9742:1e2b:392d:ec69) has quit (Ping timeout: 276 seconds)
2019-10-31 13:46:50	-->	stux|RC-only (stux@endurance.xzibition.com) has joined ##rust
2019-10-31 13:48:01	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 13:48:37	-->	Ichorio (~Ichorio@2001:16b8:57c6:cf00:e1f5:4894:8159:694a) has joined ##rust
2019-10-31 13:58:22	-->	jinie (~jimmy@188.114.159.27) has joined ##rust
2019-10-31 13:59:16	-->	iq (~iq@2600:100e:bf18:3031:617e:8ef5:d7f8:3780) has joined ##rust
2019-10-31 14:15:23	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-10-31 14:16:07	-->	tmager (~Thunderbi@146.115.18.74) has joined ##rust
2019-10-31 14:17:10	--	fotato is now known as bootato
2019-10-31 14:22:57	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-10-31 14:25:14	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-31 14:27:00	<--	tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has quit (Ping timeout: 260 seconds)
2019-10-31 14:27:28	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-10-31 14:31:48	-->	Singmyr (~Singmyr@c83-253-123-62.bredband.comhem.se) has joined ##rust
2019-10-31 14:33:20	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 14:42:14	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-31 14:42:15	<--	ytain (~ghfg@2607:f2c0:9292:e000:d8b1:3bc8:62e4:b083) has quit (Ping timeout: 250 seconds)
2019-10-31 14:42:39	-->	jenny-m (~jdm-@2605:8d80:6c0:eb62:f9fa:f435:bd47:acb4) has joined ##rust
2019-10-31 14:45:17	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Remote host closed the connection)
2019-10-31 14:45:43	<--	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has quit (Ping timeout: 250 seconds)
2019-10-31 14:46:29	-->	tomboy64 (~tomboy64@gateway/tor-sasl/tomboy64) has joined ##rust
2019-10-31 14:48:18	-->	bwinton (~bwinton@CPE1c872c7063d0-CM00fc8d8fbe70.cpe.net.cable.rogers.com) has joined ##rust
2019-10-31 14:49:56	<--	pknull (~pooky@184.103.126.184) has quit (Remote host closed the connection)
2019-10-31 14:50:36	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-10-31 14:50:59	georgemp	Hi. I'm trying to follow this tutorial here to create C bindings for sqlite3 (http://temp.michaelfbryan.com.s3-website-us-east-1.amazonaws.com/wrap-libmagic/index.html). A gist of my files are here (https://gist.github.com/georgemp/1287e53dde3222bca2ea3ef56527db83). bindgen seems to be generating the C mappings fine (binding.rs in teh OUT_DIR seems to be ok). In this lib.rs, I seem to be able access
2019-10-31 14:51:01	georgemp	the C types as well. But, when I try to use this -sys crate, I don't seem to be able to access the C bound structs (example gist here - https://gist.github.com/georgemp/814d80d6787ae37fe4f9b83e9558db25). would appreciate some pointers..thanks :)
2019-10-31 14:53:38	<--	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has quit (Ping timeout: 245 seconds)
2019-10-31 14:54:03	<--	andirc8089 (~andirc808@mycraft1.powered.by.lunarbnc.net) has quit (Ping timeout: 245 seconds)
2019-10-31 14:57:36	-->	mwa (~mwa@unaffiliated/mwa) has joined ##rust
2019-10-31 14:58:59	<--	AbedB__ (~AbedBhuty@bzq-79-176-28-84.red.bezeqint.net) has quit (Remote host closed the connection)
2019-10-31 14:59:27	-->	AbedB__ (~AbedBhuty@bzq-79-176-28-84.red.bezeqint.net) has joined ##rust
2019-10-31 15:00:36	<--	baali (~baali@59.98.237.215) has quit (Ping timeout: 240 seconds)
2019-10-31 15:02:11	-->	nikivi (~nikivi@nikivi.powered.by.lunarbnc.net) has joined ##rust
2019-10-31 15:06:19	georgemp	hmm..looks like it is finding it. It's just YouCompleteMe in vim not seeing the symbols. 'cargo check/build' works fine
2019-10-31 15:06:38	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-10-31 15:09:35	-->	Edu4rdSHL (~edu4rdshl@fsf/member/edu4rdshl) has joined ##rust
2019-10-31 15:11:53	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-31 15:15:03	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Read error: Connection reset by peer)
2019-10-31 15:15:10	paradoxspiral	Is it intended that the deprecation note is not shown? https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=0540988714ff477e7dc233f80eea8ef0
2019-10-31 15:15:38	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 15:22:20	<--	pjs902 (~quassel@140.184.2.20) has quit (Ping timeout: 276 seconds)
2019-10-31 15:24:44	<--	Xatenev (~Xatenev@2a02:8108:9640:4455:843:5395:8d8:75b9) has quit (Quit: Leaving.)
2019-10-31 15:27:00	-->	rrooij (~rrooij@unaffiliated/rroij) has joined ##rust
2019-10-31 15:38:30	-->	mindCrime (~mindCrime@216.85.170.145) has joined ##rust
2019-10-31 15:39:32	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-10-31 15:45:11	georgemp	if anybody is using vim + youcompleteme, any idea on how to get autocomplete to work for external crates?
2019-10-31 15:46:19	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Quit: osa1)
2019-10-31 15:52:36	-->	kabeero (~quassel@unaffiliated/kabeero) has joined ##rust
2019-10-31 15:52:41	-->	alex-helfet (~alex@cpc68330-cdif16-2-0-cust38.5-1.cable.virginm.net) has joined ##rust
2019-10-31 15:52:53	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-31 15:53:58	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-10-31 15:59:03	<--	Windfisc1 (~flo@windfisch.org) has quit (Ping timeout: 268 seconds)
2019-10-31 15:59:27	<--	AbedB__ (~AbedBhuty@bzq-79-176-28-84.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-10-31 16:03:35	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 16:06:51	-->	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has joined ##rust
2019-10-31 16:10:02	<--	pedro4 (~pedro4@109.202.107.147) has quit (Quit: Leaving)
2019-10-31 16:12:00	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##rust
2019-10-31 16:19:08	-->	b5509cd (6d9b4522@gateway/web/cgi-irc/kiwiirc.com/ip.109.155.69.34) has joined ##rust
2019-10-31 16:19:13	-->	drewr (~drew@elastic/staff/drewr) has joined ##rust
2019-10-31 16:19:46	-->	climbingturtle (~climbingt@c213-89-14-151.bredband.comhem.se) has joined ##rust
2019-10-31 16:26:38	<--	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2019-10-31 16:29:58	<--	iq (~iq@2600:100e:bf18:3031:617e:8ef5:d7f8:3780) has quit (Quit: Leaving)
2019-10-31 16:33:03	-->	iq (~iq@2600:100e:bf18:3031:617e:8ef5:d7f8:3780) has joined ##rust
2019-10-31 16:37:14	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-10-31 16:38:56	-->	Arnavion (arnavion@unaffiliated/arnavion) has joined ##rust
2019-10-31 16:45:39	<--	Arnavion (arnavion@unaffiliated/arnavion) has quit (Ping timeout: 264 seconds)
2019-10-31 16:47:59	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 16:55:00	-->	AbedB (~AbedBhuty@bzq-79-176-28-84.red.bezeqint.net) has joined ##rust
2019-10-31 16:58:08	<--	b5509cd (6d9b4522@gateway/web/cgi-irc/kiwiirc.com/ip.109.155.69.34) has quit (Remote host closed the connection)
2019-10-31 16:58:12	-->	Arnavion (arnavion@unaffiliated/arnavion) has joined ##rust
2019-10-31 16:58:45	<--	treeshateorcs (~tho@46-198-128-218.static.cyta.gr) has quit (Ping timeout: 250 seconds)
2019-10-31 17:00:09	-->	baali (~baali@59.98.237.215) has joined ##rust
2019-10-31 17:06:39	<--	Arnavion (arnavion@unaffiliated/arnavion) has quit (Remote host closed the connection)
2019-10-31 17:06:48	-->	Arnavion (arnavion@unaffiliated/arnavion) has joined ##rust
2019-10-31 17:12:33	<--	Arnavion (arnavion@unaffiliated/arnavion) has quit (Remote host closed the connection)
2019-10-31 17:12:52	-->	Arnavion (arnavion@unaffiliated/arnavion) has joined ##rust
2019-10-31 17:15:31	-->	stephaneyfx (~stephaney@184.68.160.234) has joined ##rust
2019-10-31 17:16:17	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-10-31 17:17:54	<--	Arnavion (arnavion@unaffiliated/arnavion) has quit (Remote host closed the connection)
2019-10-31 17:18:41	-->	hexfive (~hexfive@50.35.80.237) has joined ##rust
2019-10-31 17:25:50	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-10-31 17:28:50	<--	alex-helfet (~alex@cpc68330-cdif16-2-0-cust38.5-1.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2019-10-31 17:34:59	<--	scain (~scain@2607:5300:60:233b::1) has quit (Quit: Konversation terminated!)
2019-10-31 17:35:30	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-10-31 17:35:57	-->	Arnavion (arnavion@unaffiliated/arnavion) has joined ##rust
2019-10-31 17:36:52	-->	css (~css@unaffiliated/css) has joined ##rust
2019-10-31 17:43:42	<--	Arnavion (arnavion@unaffiliated/arnavion) has quit (Ping timeout: 265 seconds)
2019-10-31 17:46:27	-->	sheelp (~textual@d104-157-15-48.abhsia.telus.net) has joined ##rust
2019-11-04 11:06:53	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-11-04 11:06:53	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-11-04 11:06:53	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-11-04 11:06:53	--	Channel ##rust: 584 nicks (2 ops, 0 voices, 582 normals)
2019-11-04 11:07:09	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-11-04 11:08:47	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-11-04 11:10:47	Flonk	Kinnison, so uh. `mod complex;` inside main.rs works fine. `mod complex;` inside transform.rs does not, it wants me to create a file `transform/complex.rs`. Leaving out `mod complex;` and just `use crate::complex::Complex;` inside transform.rs errors with "unresolved import".
2019-11-04 11:11:40	Kinnison	Flonk: Oh they might need to be `pub mod xxx;` in main.rs, so sibling modules can see them
2019-11-04 11:11:54	Kinnison	Flonk: You definitely don't want the `mod` statements in the other files because that'd imply creating even more modules
2019-11-04 11:16:14	-->	avitex (~avitex@202-153-212-232.ca99d4.syd.nbn.aussiebb.net) has joined ##rust
2019-11-04 11:16:46	avitex	doc.rs seems to be down
2019-11-04 11:18:32	osa1	did you mean docs.rs? it works here
2019-11-04 11:19:20	elichai2	rust doesn't support targets like `mach-davinci` right? http://processors.wiki.ti.com/index.php/DaVinci_GIT_Linux_Kernel#mach-davinci
2019-11-04 11:19:24	elichai2	(it's a subset of arm)
2019-11-04 11:19:25	avitex	Yeah, my bad
2019-11-04 11:19:26	avitex	https://downforeveryoneorjustme.com/docs.rs
2019-11-04 11:19:27	Kinnison	avitex: It was giving errors, but seems to be back now.
2019-11-04 11:19:41	avitex	Just went back up for me :)
2019-11-04 11:19:46	-->	baali (~baali@106.207.182.152) has joined ##rust
2019-11-04 11:20:12	Flonk	Kinnison, ah, that makes sense. I'll try that
2019-11-04 11:20:29	Kinnison	Flonk: Basically you have to think of the crate as the compilation unit, not the individual .rs files
2019-11-04 11:20:59	Kinnison	Flonk: So you only want one way to reach every .rs file via `mod` statements, and then you reach the content of them via `use` statements elsewhere
2019-11-04 11:22:40	<--	avitex (~avitex@202-153-212-232.ca99d4.syd.nbn.aussiebb.net) has quit (Quit: Leaving)
2019-11-04 11:22:50	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-11-04 11:27:08	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-11-04 11:28:03	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-11-04 11:28:05	-->	druidofluhn (~druidoflu@unaffiliated/druid-of-luhn/x-9319639) has joined ##rust
2019-11-04 11:28:47	Flonk	Kinnison, well if you do it right it all works :D thanks!
2019-11-04 11:28:56	Flonk	Now to fix these 1000 other compiler errors.
2019-11-04 11:29:16	-->	avitex (~avitex@202-153-212-232.ca99d4.syd.nbn.aussiebb.net) has joined ##rust
2019-11-04 11:30:07	-->	AbedB__ (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has joined ##rust
2019-11-04 11:30:14	-->	Derriick (~Derriick@254.218.203.77.rev.sfr.net) has joined ##rust
2019-11-04 11:30:27	 *	Kinnison grins, good luck :D
2019-11-04 11:32:02	tjis	so last week I was at the rust london meetup
2019-11-04 11:32:04	tjis	it was great fun!
2019-11-04 11:32:12	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-11-04 11:32:28	tjis	one thing though, it was mostly guys. and when I say mostly, I mean that at most 4 people out of like a hundred weren't
2019-11-04 11:32:33	<--	masonl (~masonl@194-193-202-239.tpgi.com.au) has quit (Ping timeout: 246 seconds)
2019-11-04 11:32:44	tjis	is this gender imbalance normal for rust?
2019-11-04 11:33:49	Xatenev	tjis, welcome to IT
2019-11-04 11:34:06	tjis	sure, IT in general has male overrepresentation. but still it's not this bad everywhere
2019-11-04 11:34:19	<--	AbedB_ (~AbedBhuty@173.239.197.23) has quit (Ping timeout: 265 seconds)
2019-11-04 11:34:24	Xatenev	where not?
2019-11-04 11:34:53	tjis	So we talked about it a bit over there, and anecdotally at least, things seem more balanced the closer you get to frontend
2019-11-04 11:35:21	Xatenev	which is fairly obvious isn't it?
2019-11-04 11:35:25	tjis	howso?
2019-11-04 11:35:57	Xatenev	meh its ot for ##rust, I can explain in PM if you like.
2019-11-04 11:36:30	j`ey	elichai2: targetting arm might just work, depends what of a subset it is
2019-11-04 11:36:31	 *	Kinnison generally finds that early meetups which aren't actively trying to rebalance end up skewed toward CHWM but Rust as a community tries to be as inclusive as possible, so here's hoping as Rust London continues, it'll rebalance naturally
2019-11-04 11:36:35	-->	delYsid (~user@debian/developer/mlang) has joined ##rust
2019-11-04 11:36:41	tjis	CHWM?
2019-11-04 11:36:46	<--	delYsid (~user@debian/developer/mlang) has left ##rust
2019-11-04 11:36:52	j`ey	cis het white males
2019-11-04 11:37:08	-->	delYsid (~user@debian/developer/mlang) has joined ##rust
2019-11-04 11:37:09	j`ey	Kinnison: youre in the UK right?
2019-11-04 11:37:18	 *	Kinnison is
2019-11-04 11:37:28	felix34	yrp: Kinnison hmm, ok. I tried to simplify things and now the JSON won't even decode. Can you see anything wrong with this? https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=32ddc2340fb1086097d3f2023b55722a
2019-11-04 11:37:46	delYsid	anyone using termion?
2019-11-04 11:38:02	<--	mryandao (~mryandao@gateway/tor-sasl/mryandao) has quit (Remote host closed the connection)
2019-11-04 11:38:40	elichai2	j`ey: linux kernel has it's own dir of declaration for it but even glibc has nothing with that name. so i'm not even sure glibc supports it lol
2019-11-04 11:39:06	j`ey	oh :-)
2019-11-04 11:39:16	Kinnison	felix34: Your enum variant (Message::Data) won't serialise to [1]
2019-11-04 11:40:04	-->	mryandao (~mryandao@gateway/tor-sasl/mryandao) has joined ##rust
2019-11-04 11:40:05	felix34	Kinnison: Making it Data(Vec<u32>) doesn't help ...
2019-11-04 11:40:15	j`ey	it has to have a type field
2019-11-04 11:40:26	j`ey	felix34: why dont you serialise it first and look at the output
2019-11-04 11:40:33	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-11-04 11:40:53	j`ey	(or maybe it doesnt need a type field, but see what it serialises too!)
2019-11-04 11:40:58	Kinnison	That variant serializes as: {"Data":1}
2019-11-04 11:41:14	Kinnison	https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=f540da2fe3a10d3fcdb24d06ada37e85
2019-11-04 11:41:42	felix34	Kinnison: hit the "share" button toi refresh the link, that's same as mine
2019-11-04 11:41:57	felix34	wait no, lol
2019-11-04 11:42:04	Kinnison	I did :D
2019-11-04 11:42:12	felix34	visually simimlar hashes :/
2019-11-04 11:42:42	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-11-04 11:43:03	Lumpio-	I feel very unwelcome being described by acronyms such as "CHWM"
2019-11-04 11:43:03	<--	pknull (~pooky@184.103.126.184) has quit (Read error: Connection reset by peer)
2019-11-04 11:43:25	Kinnison	Lumpio-: that was not my intention, sorry.
2019-11-04 11:43:36	j`ey	Lumpio-: CHWM & Lumps
2019-11-04 11:43:49	j`ey	(bad joke)
2019-11-04 11:43:52	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-11-04 11:45:04	felix34	Kinnison: whoa, but I though tthe whole point was to handle different message types? https://serde.rs/enum-representations.html
2019-11-04 11:45:43	 *	Kinnison isn't a serde expert sorry :(
2019-11-04 11:45:56	<--	__gotcha (~Thunderbi@plone/gotcha) has quit (Remote host closed the connection)
2019-11-04 11:46:10	Lumpio-	felix34 you're probably looking for #[serde(untagged)]
2019-11-04 11:46:10	j`ey	what do you mean?
2019-11-04 11:46:17	Lumpio-	https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=4a3a134aa29827ca0353f2a6749b2d46
2019-11-04 11:46:35	felix34	Lumpio-: woops, I was indeed
2019-11-04 11:47:14	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-11-04 11:48:21	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-11-04 11:48:47	<--	narispo (~narispo@2a01:e0a:2a2:1590:c0bf:8236:17f3:2dfb) has quit (Ping timeout: 276 seconds)
2019-11-04 11:50:27	felix34	Lumpio-: is there any way to make this version work, where the data is deserialized from an array into a named struct? https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=7268dddb9bf5599bc82d09a8b9a295e7
2019-11-04 11:51:26	-->	narispo (~narispo@37.165.27.199) has joined ##rust
2019-11-04 11:51:54	Lumpio-	Data(u32, u32) would work directly
2019-11-04 11:52:34	Lumpio-	If you really want the named values but an array in JSON you would implement Serialize/Deserialize manually
2019-11-04 11:52:43	Lumpio-	Or use this https://crates.io/crates/serde_tuple
2019-11-04 11:52:45	<--	baali (~baali@106.207.182.152) has quit (Read error: Connection reset by peer)
2019-11-04 11:52:54	<--	narispo (~narispo@37.165.27.199) has quit (Client Quit)
2019-11-04 11:57:15	<--	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has quit (Ping timeout: 240 seconds)
2019-11-04 11:58:18	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-11-04 12:03:18	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-04 12:03:46	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Ping timeout: 268 seconds)
2019-11-04 12:04:49	-->	con3|2 (~kvirc@154.119.40.183) has joined ##rust
2019-11-04 12:05:08	<--	avitex (~avitex@202-153-212-232.ca99d4.syd.nbn.aussiebb.net) has quit (Quit: Leaving)
2019-11-04 12:06:07	-->	AbedB_ (~AbedBhuty@173.239.197.23) has joined ##rust
2019-11-04 12:07:29	<--	con3 (~kvirc@154.119.40.183) has quit (Ping timeout: 264 seconds)
2019-11-04 12:10:16	<--	AbedB__ (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has quit (Ping timeout: 264 seconds)
2019-11-04 12:10:49	-->	ravenousmoose (~ravenousm@ptr-cud5aqft7kmyxenjv2m.18120a2.ip6.access.telenet.be) has joined ##rust
2019-11-04 12:15:29	-->	baali (~baali@59.98.234.98) has joined ##rust
2019-11-04 12:16:05	<--	ravenousmoose (~ravenousm@ptr-cud5aqft7kmyxenjv2m.18120a2.ip6.access.telenet.be) has quit (Ping timeout: 276 seconds)
2019-11-04 12:25:33	<--	rrooij (~rrooij@terminusdb/developer/rrooij) has quit (Ping timeout: 265 seconds)
2019-11-04 12:29:52	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-11-04 12:30:17	-->	rrooij (~rrooij@terminusdb/developer/rrooij) has joined ##rust
2019-11-04 12:31:38	--	urbanslug is now known as jellie
2019-11-04 12:32:34	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-11-04 12:35:15	<--	rrooij (~rrooij@terminusdb/developer/rrooij) has quit (Ping timeout: 240 seconds)
2019-11-04 12:37:25	-->	b5509cd (4d679bb8@gateway/web/cgi-irc/kiwiirc.com/ip.77.103.155.184) has joined ##rust
2019-11-04 12:42:05	<--	bytedude (~user@2a02:c7d:4850:1500:2997:8e5e:c3d9:952) has quit (Ping timeout: 276 seconds)
2019-11-04 12:44:53	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-11-04 12:45:16	<--	OmniMancer (~Paul@101.100.137.239) has quit (Quit: Leaving.)
2019-11-04 12:47:34	-->	bytedude (~user@2.222.74.142) has joined ##rust
2019-11-04 12:48:03	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-11-04 12:48:50	-->	aLeSD (~aLeSD@91.126.37.106) has joined ##rust
2019-11-04 12:49:24	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Ping timeout: 268 seconds)
2019-11-04 12:53:16	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-11-04 12:55:52	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-11-04 12:59:31	<--	Xatenev (~I@87.190.19.178) has quit (Remote host closed the connection)
2019-11-04 13:02:50	felix34	Lumpio-: hmm, but hwo do I access the internal values of an enum tuple? .0 doesn't work either: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=039d74691a6ef9345c2b834e1d9d0ace
2019-11-04 13:03:13	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-04 13:03:41	j`ey	I dont think you can do it like that
2019-11-04 13:03:45	-->	zipper (~luv_panda@unaffiliated/zipper) has joined ##rust
2019-11-04 13:03:55	j`ey	felix34: there m: Message, not m: MEssage::Data
2019-11-04 13:04:06	felix34	j`ey: yeah, I figured as much
2019-11-04 13:04:19	felix34	is there no way to access what's stored in the enum?
2019-11-04 13:04:25	j`ey	there is
2019-11-04 13:04:29	felix34	without destructuring the enum in the match arms, I mean
2019-11-04 13:04:44	j`ey	why dont you want to desugar in the match arms?
2019-11-04 13:04:56	felix34	it seems silly to have the internal structure in 2 different places of the codebase, what if things change?
2019-11-04 13:05:19	j`ey	youure still calling it with .0
2019-11-04 13:05:40	<--	jellie (~luv_panda@unaffiliated/zipper) has quit (Ping timeout: 265 seconds)
2019-11-04 13:05:40	felix34	ideally I would do something like Data(DataStruct) so I can do Message::Data(d) => d.0
2019-11-04 13:05:55	j`ey	yes, do that :)
2019-11-04 13:06:01	felix34	j`ey: well eventually m would get passed to some other function that does .0
2019-11-04 13:06:08	j`ey	Message::Data(m0, ..) also works
2019-11-04 13:06:34	felix34	j`ey: so serde will automatically deserialize into the internal DataStruct?
2019-11-04 13:07:18	j`ey	assuming it has a Deserialiser for it, it should do
2019-11-04 13:07:46	j`ey	but im not a pro@serde, and I dunno how it works with untagged
2019-11-04 13:08:40	felix34	j`ey: ah yeah, that worked brilliantly: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=00e226c597b3d33af5d991b792a74de3
2019-11-04 13:08:49	j`ey	https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=43e47864b0af4f7c747cd1bb9bfe0288
2019-11-04 13:08:52	j`ey	heh
2019-11-04 13:15:05	felix34	Lumpio-: it looks like serde_tuple has been included in base, as doing it with a named struct works too: https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=7b0feba2f58ebecace4a501f434d1f2b
2019-11-04 13:15:23	felix34	which is really nice
2019-11-04 13:17:11	-->	AbedB__ (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has joined ##rust
2019-11-04 13:17:33	j`ey	it seems like it uses the order of the enum, in case of ambiguity
2019-11-04 13:21:08	<--	AbedB_ (~AbedBhuty@173.239.197.23) has quit (Ping timeout: 265 seconds)
2019-11-04 13:22:50	<--	KeyJoo (~KeyJoo@83.220.181.139) has quit (Quit: KeyJoo)
2019-11-04 13:23:05	-->	crockwork (~crockwork@66.205.193.158) has joined ##rust
2019-11-04 13:23:51	-->	netopso (~user@cloud608804.fastpipe.io) has joined ##rust
2019-11-04 13:26:20	-->	rrooij (~rrooij@terminusdb/developer/rrooij) has joined ##rust
2019-11-04 13:30:49	<--	cdown (~cdown@89.32.122.5) has quit (Remote host closed the connection)
2019-11-04 13:34:23	-->	cdown (~cdown@89.32.122.5) has joined ##rust
2019-11-04 13:34:30	<--	con3|2 (~kvirc@154.119.40.183) has quit (Read error: Connection reset by peer)
2019-11-04 13:44:15	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-11-04 13:47:17	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-11-04 13:47:43	<--	jacob (~jacobirc@unaffiliated/jacob) has quit (Ping timeout: 265 seconds)
2019-11-04 13:49:43	-->	Coldblackice (~c@unaffiliated/coldblackice) has joined ##rust
2019-11-04 13:50:22	-->	Coldblackice_ (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-11-04 13:51:14	<--	smurfendrek123 (~smurfendr@193.190.253.144) has quit (Ping timeout: 240 seconds)
2019-11-04 13:51:35	--	Coldblackice is now known as Guest59428
2019-11-04 13:51:36	<--	Guest59428 (~c@unaffiliated/coldblackice) has quit (Killed (tolkien.freenode.net (Nickname regained by services)))
2019-11-04 13:51:36	--	Coldblackice_ is now known as Coldblackice
2019-11-04 13:54:36	-->	rustacean (~whateverg@122.11.163.197) has joined ##rust
2019-11-04 14:02:51	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-04 14:03:40	<--	bytedude (~user@2.222.74.142) has quit (Ping timeout: 265 seconds)
2019-11-04 14:05:22	-->	smurfendrek123 (~smurfendr@nat-56.kulnet.kuleuven.be) has joined ##rust
2019-11-04 14:10:35	-->	tmager (~Thunderbi@146.115.18.74) has joined ##rust
2019-11-04 14:10:55	<--	baali (~baali@59.98.234.98) has quit (Ping timeout: 265 seconds)
2019-11-04 14:12:44	-->	bytedude (~user@2a02:c7d:4850:1500:5436:4cc:126c:3a22) has joined ##rust
2019-11-04 14:15:56	-->	jacob (~jacobirc@unaffiliated/jacob) has joined ##rust
2019-11-04 14:16:03	-->	cdown_ (~cdown@199.201.66.0) has joined ##rust
2019-11-04 14:17:10	-->	Kaivo (~Kaivo@ec2-35-182-108-102.ca-central-1.compute.amazonaws.com) has joined ##rust
2019-11-04 14:17:20	<--	smurfendrek123 (~smurfendr@nat-56.kulnet.kuleuven.be) has quit (Remote host closed the connection)
2019-11-04 14:17:48	-->	smurfendrek123 (~smurfendr@2a02:2c40:200:b001::1:2c7a) has joined ##rust
2019-11-04 14:18:27	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 240 seconds)
2019-11-04 14:18:29	--	cdown_ is now known as cdown
2019-11-04 14:21:04	-->	lauromoura (~lauromour@2804:7f5:f380:c290:397c:8d7f:929:b5c8) has joined ##rust
2019-11-04 14:26:30	<--	smurfendrek123 (~smurfendr@2a02:2c40:200:b001::1:2c7a) has quit (Ping timeout: 246 seconds)
2019-11-04 14:28:04	<--	la_croix (~la_croix@cpc97624-walt24-2-0-cust98.13-2.cable.virginm.net) has quit (Ping timeout: 268 seconds)
2019-11-04 14:34:55	-->	la_croix (~la_croix@cpc97624-walt24-2-0-cust98.13-2.cable.virginm.net) has joined ##rust
2019-11-04 14:36:13	-->	iq (~iq@2600:1000:be08:1f1b:ee80:303c:7434:c10e) has joined ##rust
2019-11-04 14:44:16	<--	rustacean (~whateverg@122.11.163.197) has quit (Ping timeout: 265 seconds)
2019-11-04 14:49:03	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-11-04 14:49:17	<--	hexfive (~hexfive@50.35.80.237) has quit (Quit: WeeChat 2.6)
2019-11-04 14:50:54	<--	bytedude (~user@2a02:c7d:4850:1500:5436:4cc:126c:3a22) has quit (Remote host closed the connection)
2019-11-04 14:51:24	-->	bytedude (~user@2a02:c7d:4850:1500:5436:4cc:126c:3a22) has joined ##rust
2019-11-04 14:51:40	-->	ytain (~ghfg@2607:f2c0:95af:4500:4585:4101:a78a:1659) has joined ##rust
2019-11-04 14:53:26	<--	aLeSD (~aLeSD@91.126.37.106) has quit (Remote host closed the connection)
2019-11-04 14:53:45	-->	aLeSD (~aLeSD@91.126.37.106) has joined ##rust
2019-11-04 14:56:21	<--	cdown (~cdown@199.201.66.0) has quit (Ping timeout: 265 seconds)
2019-11-04 14:59:09	-->	aljama (~quassel@unaffiliated/aljama) has joined ##rust
2019-11-04 15:04:53	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-04 15:07:17	<--	zipper (~luv_panda@unaffiliated/zipper) has quit (Quit: WeeChat 2.6)
2019-11-04 15:10:00	<--	aLeSD (~aLeSD@91.126.37.106) has quit (Ping timeout: 268 seconds)
2019-11-04 15:10:18	-->	mxco86_ (~mxco86@cpc151835-shef17-2-0-cust77.17-1.cable.virginm.net) has joined ##rust
2019-11-04 15:10:37	-->	AbedB_ (~AbedBhuty@45.135.184.14) has joined ##rust
2019-11-04 15:11:28	<--	Ichorio_ (~Ichorio@2001:16b8:57c9:4700:2059:2c55:dad7:53fa) has quit (Ping timeout: 264 seconds)
2019-11-04 15:14:28	<--	AbedB__ (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has quit (Ping timeout: 264 seconds)
2019-11-04 15:14:50	-->	AbedB__ (~AbedBhuty@46.244.29.51) has joined ##rust
2019-11-04 15:16:37	-->	aLeSD (~aLeSD@91.126.37.106) has joined ##rust
2019-11-04 15:17:08	<--	AbedB_ (~AbedBhuty@45.135.184.14) has quit (Ping timeout: 265 seconds)
2019-11-04 15:17:37	-->	AbedB_ (~AbedBhuty@45.135.184.14) has joined ##rust
2019-11-04 15:17:38	<--	guzzlefry (~guzzlefry@unaffiliated/guzzlefry) has quit (Ping timeout: 252 seconds)
2019-11-04 15:18:07	<--	AbedB__ (~AbedBhuty@46.244.29.51) has quit (Read error: Connection reset by peer)
2019-11-04 15:20:12	-->	AbedB__ (~AbedBhuty@85.203.22.38) has joined ##rust
2019-11-04 15:20:40	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-11-04 15:21:01	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-11-04 15:24:23	<--	AbedB_ (~AbedBhuty@45.135.184.14) has quit (Ping timeout: 265 seconds)
2019-11-04 15:24:51	-->	AbedB_ (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has joined ##rust
2019-11-04 15:25:51	-->	KeyJoo (~KeyJoo@83.220.181.139) has joined ##rust
2019-11-04 15:26:32	<--	AbedB__ (~AbedBhuty@85.203.22.38) has quit (Ping timeout: 276 seconds)
2019-11-04 15:27:02	-->	AbedB__ (~AbedBhuty@176.53.118.93) has joined ##rust
2019-11-04 15:29:47	<--	AbedB_ (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has quit (Ping timeout: 276 seconds)
2019-11-04 15:30:49	-->	AbedB_ (~AbedBhuty@154.70.153.190) has joined ##rust
2019-11-04 15:34:20	<--	AbedB__ (~AbedBhuty@176.53.118.93) has quit (Ping timeout: 276 seconds)
2019-11-04 15:34:25	<--	AbedB_ (~AbedBhuty@154.70.153.190) has quit (Read error: Connection reset by peer)
2019-11-04 15:34:48	-->	AbedB_ (~AbedBhuty@85.203.22.38) has joined ##rust
2019-11-04 15:37:29	-->	AbedB__ (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has joined ##rust
2019-11-04 15:39:32	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Ping timeout: 276 seconds)
2019-11-04 15:41:45	<--	AbedB_ (~AbedBhuty@85.203.22.38) has quit (Read error: Connection reset by peer)
2019-11-04 15:42:33	-->	AbedB_ (~AbedBhuty@185.212.171.61) has joined ##rust
2019-11-04 15:45:47	<--	AbedB__ (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has quit (Ping timeout: 268 seconds)
2019-11-04 15:45:52	-->	smurfendrek123 (~smurfendr@193.190.253.144) has joined ##rust
2019-11-04 15:46:44	-->	AbedB__ (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has joined ##rust
2019-11-04 15:47:17	elichai2	For somereason I can't find a reference that says that rust *doesn't* support platforms with non IEEE-754 floating points
2019-11-04 15:47:30	elichai2	I know it's UB. but can't find it in any of the official docs
2019-11-04 15:47:53	Yaniel	do the avr targets support floats at all?
2019-11-04 15:47:59	<--	AbedB_ (~AbedBhuty@185.212.171.61) has quit (Ping timeout: 250 seconds)
2019-11-04 15:52:49	-->	david2_ (~david2@212-186-25-215.cable.dynamic.surfer.at) has joined ##rust
2019-11-04 15:53:12	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 252 seconds)
2019-11-04 15:53:38	-->	federico_ (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-11-04 15:54:00	elichai2	Yaniel: there is soft-float support
2019-11-04 15:56:05	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-11-04 16:00:04	<--	bytedude (~user@2a02:c7d:4850:1500:5436:4cc:126c:3a22) has left ##rust ("ERC (IRC client for Emacs 26.1)")
2019-11-04 16:02:57	<--	aLeSD (~aLeSD@91.126.37.106) has quit (Ping timeout: 240 seconds)
2019-11-04 16:04:21	-->	baali (~baali@59.98.234.98) has joined ##rust
2019-11-04 16:07:25	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-11-04 16:09:01	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-04 16:09:49	-->	cdown (~cdown@199.201.66.0) has joined ##rust
2019-11-04 16:09:57	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Ping timeout: 240 seconds)
2019-11-04 16:12:01	-->	rubdos (~rubdos@2a02:578:859d:700:8b44:5716:382d:a7da) has joined ##rust
2019-11-04 16:12:09	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-11-04 16:14:45	<--	smurfendrek123 (~smurfendr@193.190.253.144) has quit (Ping timeout: 268 seconds)
2019-11-04 16:20:24	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-11-04 16:21:27	-->	brool (~grendel@2600:1700:7d20:ae60:2c68:fddb:7f86:c16b) has joined ##rust
2019-11-04 16:25:51	-->	smurfendrek123 (~smurfendr@193.190.253.144) has joined ##rust
2019-11-04 16:29:50	-->	aLeSD (~aLeSD@91.126.37.106) has joined ##rust
2019-11-04 16:35:56	-->	pedro4 (sid145515@gateway/web/irccloud.com/x-nkdwwgzactkrpkop) has joined ##rust
2019-11-04 16:41:17	<--	cdown (~cdown@199.201.66.0) has quit (Ping timeout: 268 seconds)
2019-11-04 16:49:16	<--	brool (~grendel@2600:1700:7d20:ae60:2c68:fddb:7f86:c16b) has quit (Ping timeout: 264 seconds)
2019-11-04 16:51:23	<--	smurfendrek123 (~smurfendr@193.190.253.144) has quit (Ping timeout: 265 seconds)
2019-11-04 16:55:52	<--	raeken (~quassel@gate.reality-bytes.com) has quit (Ping timeout: 264 seconds)
2019-11-04 16:56:05	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-11-04 16:56:41	-->	cdown (~cdown@199.201.66.0) has joined ##rust
2019-11-04 16:58:59	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##rust
2019-11-04 17:01:01	<--	ellcs (~mantel@212.12.60.67) has quit (Ping timeout: 268 seconds)
2019-11-04 17:02:53	<--	zxq9 (~zxq9@FL1-119-244-161-173.okn.mesh.ad.jp) has quit (Quit: バイバイ！ (^_^)/~)
2019-11-04 17:03:17	<--	Baughn (~Baughn@2a01:4f9:2b:808:1::1) has quit (Ping timeout: 245 seconds)
2019-11-04 17:04:38	-->	Baughn (~Baughn@madoka.brage.info) has joined ##rust
2019-11-04 17:08:27	<--	efm (~efm@vpn.tummy.com) has quit (Remote host closed the connection)
2019-11-04 17:08:53	-->	efm (~efm@vpn.tummy.com) has joined ##rust
2019-11-04 17:10:18	<--	cdown (~cdown@199.201.66.0) has quit (Ping timeout: 246 seconds)
2019-11-04 17:11:18	<--	dan2wik (dan2wik@unaffiliated/dan2wik) has quit (Quit: quit has dan2wik!)
2019-11-04 17:11:19	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-04 17:15:08	-->	vmeson (~rmacleod@S0106ac202ece3eb3.vc.shawcable.net) has joined ##rust
2019-11-04 17:17:20	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-11-04 17:22:22	<--	druidofluhn (~druidoflu@unaffiliated/druid-of-luhn/x-9319639) has quit (Quit: WeeChat 1.9.1)
2019-11-04 17:23:48	-->	dan2wik (dan2wik@unaffiliated/dan2wik) has joined ##rust
2019-11-04 17:25:04	madprops	how can i slice a string even if it's not long enough like s[..10] on a 5 char string?
2019-11-04 17:25:41	j`ey	something with max(len, 10)
2019-11-04 17:25:46	j`ey	or min rather
2019-11-04 17:27:05	Lumpio-	Note: string slicing is by bytes, not chars
2019-11-04 17:28:11	<--	ziyourenxiang (~ziyourenx@unaffiliated/ziyourenxiang) has quit (Ping timeout: 265 seconds)
2019-11-04 17:29:35	<--	matthias_bgg (~mbgg@37.223.137.234) has quit (Quit: Leaving)
2019-11-04 17:30:04	<--	b5509cd (4d679bb8@gateway/web/cgi-irc/kiwiirc.com/ip.77.103.155.184) has quit (Remote host closed the connection)
2019-11-04 17:30:23	-->	climbingturtle (~climbingt@c213-89-14-151.bredband.comhem.se) has joined ##rust
2019-11-04 17:38:38	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-11-04 17:38:38	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-11-04 17:38:38	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-11-04 17:38:38	--	Channel ##rust: 586 nicks (2 ops, 0 voices, 584 normals)
2019-11-04 17:38:53	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-11-04 17:43:43	<--	jenny-m (~jdm-@167.100.78.229) has quit (Quit: Leaving...)
2019-11-04 17:48:04	-->	jinie (~jimmy@188.114.159.27) has joined ##rust
2019-11-04 17:51:39	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Quit: Leaving)
2019-11-04 17:52:25	-->	sfink (~chatzilla@107-207-38-202.lightspeed.sntcca.sbcglobal.net) has joined ##rust
2019-11-04 17:53:43	<--	jinie (~jimmy@188.114.159.27) has quit (Quit: ZNC 1.6.1 - http://znc.in)
2019-11-04 17:53:44	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-11-05 09:04:51	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-11-05 09:04:51	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-11-05 09:04:51	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-11-05 09:04:51	--	Channel ##rust: 594 nicks (2 ops, 0 voices, 592 normals)
2019-11-05 09:05:07	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-11-05 09:10:59	<--	lord| (~solenodic@unaffiliated/solenodic) has quit (Read error: Connection reset by peer)
2019-11-05 09:11:56	-->	lord| (~solenodic@unaffiliated/solenodic) has joined ##rust
2019-11-05 09:15:36	<--	lauromoura (~lauromour@2804:7f5:f380:c290:397c:8d7f:929:b5c8) has quit (Ping timeout: 246 seconds)
2019-11-05 09:21:37	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 240 seconds)
2019-11-05 09:22:22	-->	andirc8089 (~andirc808@mycraft1.powered.by.lunarbnc.net) has joined ##rust
2019-11-05 09:34:44	-->	OmniMancer (~Paul@101.100.137.239) has joined ##rust
2019-11-05 09:38:57	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-11-05 09:42:36	-->	maelcum (~horst@2001:16b8:5c87:6300:ba:af4a:2ecc:799f) has joined ##rust
2019-11-05 09:44:27	<--	baali (~baali@59.98.234.98) has quit (Ping timeout: 240 seconds)
2019-11-05 09:49:04	<--	pepper_chico (~pepper_ch@gateway/tor-sasl/pepperchico/x-70212520) has quit (Ping timeout: 260 seconds)
2019-11-05 09:53:17	<--	sheelp (~textual@d104-157-15-48.abhsia.telus.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-05 09:54:10	-->	baali (~baali@59.98.233.150) has joined ##rust
2019-11-05 09:54:51	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-05 09:56:05	<--	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has quit (Ping timeout: 276 seconds)
2019-11-05 10:00:57	<--	hexfive (~hexfive@50.35.80.237) has quit (Ping timeout: 240 seconds)
2019-11-05 10:01:57	<--	Arnavion (arnavion@unaffiliated/arnavion) has quit (Ping timeout: 240 seconds)
2019-11-05 10:03:41	<--	chrisdotcode (~chrisdotc@unaffiliated/chrisdotcode) has quit (Quit: chrisdotcode)
2019-11-05 10:07:29	Flonk	Moongoodgirl, I'd need a Rust for Haskellers
2019-11-05 10:07:33	-->	Arnavion (arnavion@unaffiliated/arnavion) has joined ##rust
2019-11-05 10:07:49	-->	hexfive (~hexfive@50.35.80.237) has joined ##rust
2019-11-05 10:10:16	Flonk	Moongoodgirl, typically a monad is a type wrapped in another type, like Option<T> in rust. Being a monads means having a way of turning an Option<Option<T>> into a single Option<T>. More or less.
2019-11-05 10:11:20	<--	lord| (~solenodic@unaffiliated/solenodic) has quit (Quit: https://i.imgur.com/xacQ09F.mp4)
2019-11-05 10:13:31	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-11-05 10:13:35	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##rust
2019-11-05 10:13:49	-->	lord| (~solenodic@unaffiliated/solenodic) has joined ##rust
2019-11-05 10:15:37	-->	jellie (~luv_panda@unaffiliated/zipper) has joined ##rust
2019-11-05 10:15:39	Flonk	Monads also know composition, so a function `Option<A> -> Option<B>` and a `Option<B> -> Option<C>` can be made into a `Option<A> -> Option<C>`
2019-11-05 10:16:00	Flonk	Anyway if you substitute T for Vec and M for Option in the sequence function above, you'd get a Vec<Option<T>> -> Option<Vec<T>> that type pretty much tells you what the function does
2019-11-05 10:16:16	Flonk	*and that type..
2019-11-05 10:16:35	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Quit: leaving)
2019-11-05 10:17:56	Kinnison	IIRC we don't have sufficient HKT to do that kind of thing with ease, though you'll find a lot of useful transformations occur in things like .collect() on iterators
2019-11-05 10:18:08	Flonk	Sorry I got the composition wrong. A -> Option<B> and B -> Option<C> can be composed to A -> Option<C>.
2019-11-05 10:18:11	Kinnison	e.g. you can collect an interator of Option<T> into an Option<Vec<T>
2019-11-05 10:19:27	Kinnison	While we don't have function composition per-se, if you have an Option<B> and a FnOnce(B) -> Option<C>, then you can .and_then() with it
2019-11-05 10:19:44	Kinnison	There are a lot of things *close* to what you're talking about, just not exactly it :D
2019-11-05 10:19:55	Flonk	Ah, and_then is basically monadic composition :P
2019-11-05 10:20:15	Kinnison	Remember, there's a lot of FP influence in Rust :D
2019-11-05 10:20:59	Flonk	I've noticed and I love it :D
2019-11-05 10:21:09	Kinnison	yay :D
2019-11-05 10:30:36	netopso	Is there a Rust equivalent of Python's threading.Event, where multiple threads can wait on the Event until some thread triggers the Event by calling .set()?
2019-11-05 10:30:54	<--	bitwinery (~bitwinery@c-73-37-18-139.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2019-11-05 10:31:43	netopso	The closest I see is std::sync::Condvar, but that incorporates a mutex and a boolean as well, I just want to .wait_until() and .notify_all()
2019-11-05 10:32:21	netopso	Are the Rust crabs going to eat me if I just use the wait_until and notify_all methods and ignore the rest?
2019-11-05 10:35:00	-->	ellcs (~mantel@212.12.60.67) has joined ##rust
2019-11-05 10:36:10	<--	david2 (~david2@212-186-25-215.cable.dynamic.surfer.at) has quit (Ping timeout: 265 seconds)
2019-11-05 10:37:55	-->	tsaka__ (~torstein@ip5b403b7b.dynamic.kabel-deutschland.de) has joined ##rust
2019-11-05 10:37:55	vorner	You might want a channel with () as the payload.
2019-11-05 10:38:24	netopso	vorner: mpsc channels only permit one consumer, I want multiple consumers
2019-11-05 10:38:31	netopso	but yes, that would do nicely
2019-11-05 10:42:11	faern	There are multi consumer channels in crossbeam-channel if that's what you are actually after.
2019-11-05 10:42:27	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-11-05 10:42:36	faern	Do you want all threads waiting on the event to react to the event, or just one?
2019-11-05 10:43:07	netopso	faern: yes, all waiters should react simultaneously
2019-11-05 10:43:55	netopso	faern: crossbeam looks like a pretty big dependency to add if all I want is a channel :/
2019-11-05 10:44:59	netopso	but looks like it will get the job done, so thanks!
2019-11-05 10:45:36	faern	netopso: tokio::sync::watch from the tokio 0.2 branch seems to do exactly what you want as well.
2019-11-05 10:45:43	<--	smurfendrek123 (~smurfendr@193.190.253.144) has quit (Ping timeout: 245 seconds)
2019-11-05 10:45:51	faern	But you probably don't want to pull that in unless the rest of your application is also tokio 0.2 based
2019-11-05 10:46:04	netopso	faern: no, no tokio in it yet
2019-11-05 10:46:45	faern	netopso: I think the crossbeam-channel channels are just handing the value out to one consumer though? It's a race between all threads blocking on the recv call
2019-11-05 10:47:11	netopso	faern: good call, yes, looks like tokio::sync::watch is necessary
2019-11-05 10:47:24	netopso	I see it's also in tolio 0.1.2?
2019-11-05 10:47:27	Kinnison	While it's a smidge ugly, construct an RWLock, have the sync thread take a write lock, then hand it out, have all the waiter threads try and take a read lock, they'll block until the sync thread unlocks, at which point they'll all take a read lock and get going (they can drop the read lock immediately if they want)
2019-11-05 10:47:40	-->	KeyJoo (~KeyJoo@83.220.181.139) has joined ##rust
2019-11-05 10:48:00	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-11-05 10:49:35	netopso	Kinnison: hmm, that might actually work in this particular case, since it's about ensuring that one thread can block other threads while the first thread is waiting to update some shared data
2019-11-05 10:50:04	 *	Kinnison <- Abusing RWLock for fun and profit
2019-11-05 10:52:44	<--	guardian (~guardian@planet-d.net) has quit (Remote host closed the connection)
2019-11-05 10:53:06	netopso	irocnically it ends up being *less* ugly than the original solution
2019-11-05 10:53:49	 *	Kinnison uses RWLock to protect the `rustup` test suite from problems where FDs are held open by sibling tests causing other tests to fail :D
2019-11-05 10:59:14	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-05 10:59:34	j`ey	Kinnison: a 'global' rwlock?
2019-11-05 11:00:52	<--	hussam (uid193284@gateway/web/irccloud.com/x-hzkvrodzjpssfncl) has quit (Quit: Connection closed for inactivity)
2019-11-05 11:01:25	Kinnison	j`ey: It's disgusting but it works: https://github.com/rust-lang/rustup.rs/blob/master/tests/mock/clitools.rs#L404
2019-11-05 11:02:28	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Ping timeout: 264 seconds)
2019-11-05 11:03:24	j`ey	what files do the tests have in common?
2019-11-05 11:04:51	<--	jamm (~jamm@unaffiliated/jamm) has quit (Remote host closed the connection)
2019-11-05 11:05:02	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-11-05 11:05:06	-->	jamm (~jamm@unaffiliated/jamm) has joined ##rust
2019-11-05 11:05:22	Kinnison	The problem is the FDs associated with the copies of the `rustup-init` binary they make
2019-11-05 11:06:36	<--	jamm (~jamm@unaffiliated/jamm) has quit (Remote host closed the connection)
2019-11-05 11:06:53	-->	jamm (~jamm@unaffiliated/jamm) has joined ##rust
2019-11-05 11:12:08	<--	jamm (~jamm@unaffiliated/jamm) has quit (Ping timeout: 276 seconds)
2019-11-05 11:12:43	-->	AbedB_ (~AbedBhuty@45.56.154.162) has joined ##rust
2019-11-05 11:13:10	-->	hussam (uid193284@gateway/web/irccloud.com/x-qbrttqxbboaqorcw) has joined ##rust
2019-11-05 11:16:15	<--	AbedB (~AbedBhuty@bzq-79-182-6-9.red.bezeqint.net) has quit (Ping timeout: 250 seconds)
2019-11-05 11:16:44	<--	KeyJoo (~KeyJoo@83.220.181.139) has quit (Quit: KeyJoo)
2019-11-05 11:21:03	<--	the_ment (~thement@ibawizard.net) has quit (Quit: eof)
2019-11-05 11:22:59	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-11-05 11:26:19	netopso	Kinnison: after further study I will probably end up using a crossbeam-channel, and treating the RecvError condition on channel destruction as the globally-broadcast event :/
2019-11-05 11:27:55	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Ping timeout: 268 seconds)
2019-11-05 11:29:57	-->	the_ment (~thement@ibawizard.net) has joined ##rust
2019-11-05 11:30:28	Kinnison	:D
2019-11-05 11:30:57	<--	Moyst (~moyst@212-149-213-144.bb.dnainternet.fi) has quit (Ping timeout: 240 seconds)
2019-11-05 11:32:38	-->	matthias_bgg (~mbgg@37.223.137.234) has joined ##rust
2019-11-05 11:33:48	-->	Moyst (~moyst@212-149-213-144.bb.dnainternet.fi) has joined ##rust
2019-11-05 11:34:14	<--	mpereira (~mpereira@2a02:8108:4640:5518:35c6:93b2:450:f01a) has quit (Ping timeout: 276 seconds)
2019-11-05 11:34:20	-->	guardian (~guardian@planet-d.net) has joined ##rust
2019-11-05 11:43:07	<--	pknull (~pooky@184.103.126.184) has quit (Read error: Connection reset by peer)
2019-11-05 11:44:04	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-11-05 11:48:57	<--	rustacean (~whateverg@111.65.44.146) has quit (Ping timeout: 240 seconds)
2019-11-05 11:49:03	-->	fanta1 (~fanta1@p200300F76BC3360039F9B0488A4C2BA5.dip0.t-ipconnect.de) has joined ##rust
2019-11-05 11:51:47	<--	gnu3ra (~gnu3ra@c-98-226-242-1.hsd1.il.comcast.net) has quit (Ping timeout: 276 seconds)
2019-11-05 11:52:32	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 265 seconds)
2019-11-05 11:55:17	-->	ragecryx (~ragecryx@ppp-94-66-145-187.home.otenet.gr) has joined ##rust
2019-11-05 11:56:12	-->	grabarz (~janko@d16-206.static.icpnet.pl) has joined ##rust
2019-11-05 11:56:23	-->	gnu3ra_ (~gnu3ra@c-98-226-242-1.hsd1.il.comcast.net) has joined ##rust
2019-11-05 11:59:07	-->	jamm (~jamm@unaffiliated/jamm) has joined ##rust
2019-11-05 11:59:21	Flonk	Is there a reason why for example `struct Tagged<T>(i32);` errors and I have to use PhantomData? It seems a bit hacky, I dunno.
2019-11-05 11:59:22	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-05 11:59:54	vorner	netopso, Wouldn't this one also work for you? If you knew the number of the receivers up-front https://doc.rust-lang.org/stable/std/sync/struct.Barrier.html
2019-11-05 12:00:32	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-11-05 12:01:36	j`ey	Flonk: http://troubles.md/posts/why-phantomdata/ although that example is basically identical to the first one in this blog
2019-11-05 12:01:41	j`ey	so wondering if you have read it already?
2019-11-05 12:03:37	Flonk	No I haven't
2019-11-05 12:03:39	Flonk	Lemme give it a read!
2019-11-05 12:04:00	Flonk	Common pattern I guess :)
2019-11-05 12:06:19	<--	Jezza__ (~Ichorio@2001:16b8:578e:3f00:f052:4961:efd9:115f) has quit (Read error: Connection reset by peer)
2019-11-05 12:06:38	-->	Jezza__ (~Ichorio@2001:16b8:578e:3f00:f052:4961:efd9:115f) has joined ##rust
2019-11-05 12:07:01	-->	masonl (~masonl@203-219-16-22.tpgi.com.au) has joined ##rust
2019-11-05 12:08:43	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-05 12:10:05	ivan	is 'goto definition' for things outside the current crate supposed to work in rust-analyzer?
2019-11-05 12:12:50	ivan	(I am using Sublime Text 3 / LSP and it doesn't seem to)
2019-11-05 12:14:51	Flonk	j`ey, hmmm
2019-11-05 12:15:54	<--	sonar235 (~sonar235@193.148.18.251) has quit (Quit: leaving)
2019-11-05 12:16:17	Flonk	couldn't we have `Tagged<T: Covariant>(i32)` and `Tagged<T: Contravariant>(i32)` or something.
2019-11-05 12:16:34	Flonk	I dunno. I guess the way rust did it makes sense but it's still a bit odd.
2019-11-05 12:17:02	j`ey	would need some compiler stuff for that, but ye
2019-11-05 12:18:17	<--	ragecryx (~ragecryx@ppp-94-66-145-187.home.otenet.gr) has quit (Ping timeout: 240 seconds)
2019-11-05 12:18:28	osa1	how do I implement unions when writing FFI bindings to a C library?
2019-11-05 12:18:59	-->	zipper (~luv_panda@unaffiliated/zipper) has joined ##rust
2019-11-05 12:19:07	<--	jellie (~luv_panda@unaffiliated/zipper) has quit (Ping timeout: 265 seconds)
2019-11-05 12:20:18	Lumpio-	By using unions I guess
2019-11-05 12:25:19	-->	asocha (~asocha@public-gprs370195.centertel.pl) has joined ##rust
2019-11-05 12:33:21	osa1	I have `links = "tinfo"` in my Cargo.toml but cargo still doesn't pass a -ltinfo when building examples, any ideas?
2019-11-05 12:35:05	j`ey	"This manifest states that the package links to the libfoo native library, and it also has a build script for locating and/or building the library."
2019-11-05 12:35:14	j`ey	it sounds like links is metadata, and not a directive
2019-11-05 12:36:07	faern	Yup. In Cargo.toml it's only for pointing out to cargo that it will link there.
2019-11-05 12:36:18	faern	You have to emit the proper linking args from build.rs to actually make it link.
2019-11-05 12:36:20	faern	It's a bit messy
2019-11-05 12:36:30	osa1	OK, how do I actually pass `-ltinfo` to the c compiler then?
2019-11-05 12:36:34	osa1	I'm using the cc crate
2019-11-05 12:36:52	osa1	ah hmm
2019-11-05 12:36:59	faern	osa1: Like this: https://github.com/mullvad/mnl-rs/blob/master/mnl-sys/build.rs#L22-L23
2019-11-05 12:36:59	osa1	it doesn't make sense to do this in build.rs
2019-11-05 12:37:03	osa1	not sure where to do it though
2019-11-05 12:37:26	faern	osa1: You just need to make build.rs print "cargo:rustc-link-lib=<name of lib>" basically.
2019-11-05 12:37:37	faern	For the `-l<lib>` part
2019-11-05 12:37:58	osa1	that worked, thanks
2019-11-05 12:39:27	<--	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 268 seconds)
2019-11-05 12:39:34	osa1	segfault, nice
2019-11-05 12:40:28	j`ey	C :P
2019-11-05 12:41:19	osa1	makes me feel alive
2019-11-05 12:45:03	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-11-05 12:47:08	-->	ragecryx (~ragecryx@2a02:2149:822f:2b00:7d1e:da0d:eb8:2ea) has joined ##rust
2019-11-05 12:47:55	<--	ragecryx (~ragecryx@2a02:2149:822f:2b00:7d1e:da0d:eb8:2ea) has quit (Remote host closed the connection)
2019-11-05 12:52:14	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-05 12:54:03	<--	masonl (~masonl@203-219-16-22.tpgi.com.au) has quit (Ping timeout: 240 seconds)
2019-11-05 12:54:11	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-11-05 12:55:12	-->	qyliss (~qyliss@NixOS/user/qyliss) has joined ##rust
2019-11-05 12:59:54	la_mettrie	I'm trying to figure out the syntax for having a HashMap (with both types being Strings) in a struct and then getting a value out of that HashMap by using a pre-declared variable.  https://pastebin.com/raw/hsnPAanZ
2019-11-05 13:00:07	<--	qyliss (~qyliss@NixOS/user/qyliss) has left ##rust ("WeeChat 2.6")
2019-11-05 13:00:08	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-11-05 13:00:41	-->	pupskucheen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-11-05 13:01:18	la_mettrie	(correction to the paste: interfaceobj & iface are the same var)
2019-11-05 13:01:20	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-11-05 13:02:35	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Read error: Connection reset by peer)
2019-11-05 13:05:22	j`ey	la_mettrie: because get returns an Option
2019-11-05 13:05:36	j`ey	but actioncode isnt an option
2019-11-05 13:06:35	la_mettrie	some other function can get String from the HashMap instead of Option?
2019-11-05 13:06:43	j`ey	no
2019-11-05 13:06:56	j`ey	you could unwrap it?
2019-11-05 13:09:19	la_mettrie	let's see
2019-11-05 13:09:50	j`ey	hashmap cant return String because what would happen if there wasnt a value (all it could do is panic)
2019-11-05 13:17:01	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-05 13:25:24	j`ey	to use stdsimd with wasm, do you need to use wasm-bindgen?
2019-11-05 13:27:25	-->	t7 (~tommo@2a00:23c5:1284:fc00:ad40:109c:7414:d06b) has joined ##rust
2019-11-05 13:28:42	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-11-05 13:28:50	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-11-05 13:33:12	georgemp	Hi...I'm trying to read through this code here - https://github.com/jgallagher/rusqlite/blob/master/src/error.rs . Would anyone know where ffi::Error on line 15 is defined? On line 3, I see use crate::{errmsg_to_string, ffi}, but, don't see dependecies for either of this in Cargo.toml, nor am I able to find a Error type is rust std::ffi...
2019-11-05 13:33:37	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Ping timeout: 240 seconds)
2019-11-05 13:34:41	j`ey	are you sure it compiles?
2019-11-05 13:35:06	j`ey	pub use libsqlite3_sys as ffi;
2019-11-05 13:35:15	oherrala	georgemp: "pub use libsqlite3_sys as ffi;"
2019-11-05 13:35:24	oherrala	georgemp: https://github.com/jgallagher/rusqlite/blob/master/src/lib.rs#L58
2019-11-05 13:35:44	oherrala	georgemp: which points to here probably: https://github.com/jgallagher/rusqlite/blob/master/libsqlite3-sys/src/error.rs
2019-11-05 13:36:37	georgemp	oherrala: ah..thanks. So, any imports in the main lib.rs are seen in submodules (i'm assuming error.rs here is one?).
2019-11-05 13:37:10	j`ey	error.rs imports it
2019-11-05 13:37:11	oherrala	georgemp: nope, the import in lib.rs is made public
2019-11-05 13:37:28	oherrala	georgemp: and then it's visible on submodules
2019-11-05 13:38:08	georgemp	got it..thanks
2019-11-05 13:43:55	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-11-05 13:47:07	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-11-05 13:50:08	-->	DeltaHeavy (~DeltaHeav@unaffiliated/deltaheavy) has joined ##rust
2019-11-05 13:54:04	<--	pie_ (~pie_@unaffiliated/pie-/x-0787662) has quit (Ping timeout: 268 seconds)
2019-11-05 13:55:38	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-05 14:10:06	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-11-05 14:13:46	tempate	I have a couple of constants I would like to use all over my project (build.rs, tests/, and src/). What is the best way of doing it?
2019-11-05 14:18:09	--	toure|gone is now known as toure
2019-11-05 14:24:19	<--	baali (~baali@59.98.233.150) has quit (Quit: Leaving.)
2019-11-05 14:25:18	-->	federico_ (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-11-05 14:25:38	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-05 14:25:50	-->	tmager (~Thunderbi@96.78.200.121) has joined ##rust
2019-11-05 14:26:24	-->	lauromoura (~lauromour@2804:7f5:f380:c290:2d60:ac70:5695:80fd) has joined ##rust
2019-11-05 14:28:03	<--	Xatenev (~I@87.190.19.178) has quit (Remote host closed the connection)
2019-11-05 14:30:52	<--	hussam (uid193284@gateway/web/irccloud.com/x-qbrttqxbboaqorcw) has quit (Quit: Connection closed for inactivity)
2019-11-05 14:36:53	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-11-05 14:45:41	-->	SiGe (~SiGe@unaffiliated/sige) has joined ##rust
2019-11-05 14:47:13	-->	pedro4 (~pedro4@213.152.161.69) has joined ##rust
2019-11-05 14:49:51	<--	cdown (~cdown@89.32.122.5) has quit (Ping timeout: 246 seconds)
2019-11-05 14:50:26	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Ping timeout: 240 seconds)
2019-11-05 14:53:07	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Quit: osa1)
2019-11-05 15:00:07	tempate	anyone?
2019-11-05 15:01:08	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-11-05 15:01:40	j`ey	did you try the separate crate approach?
2019-11-05 15:01:46	<--	pupskucheen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-11-05 15:05:24	tempate	I am trying without much success
2019-11-05 15:05:43	tempate	The idea is to have a constants.rs file outside of src/, right?
2019-11-05 15:07:01	j`ey	a separate cargo project
2019-11-05 15:12:56	tempate	Isn't there a simpler way?
2019-11-05 15:13:22	tempate	I'm currently just importing the file build.rs generates all around the place.
2019-11-05 15:14:21	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 246 seconds)
2019-11-05 15:14:43	j`ey	im confused, build.rs is generating the constants?
2019-11-05 15:15:04	Yaniel	if build.rs generates files, they are usually put in the build directory
2019-11-05 15:15:14	Yaniel	and then you include them in some suitable place in src
2019-11-05 15:15:41	Yaniel	most of the time they will be only fragments of rust code, not entire modules
2019-11-05 15:17:10	Yaniel	an idiomatic solution AFAICT would be to just include the generated file in src/main.rs and refer to crate::myconstant wherever you need it
2019-11-05 15:17:54	Yaniel	or wrap it in an extra module so you get crate::constants::FOO, if you don't want to pollute your crate root namespace
2019-11-05 15:17:57	<--	grabarz (~janko@d16-206.static.icpnet.pl) has quit (Ping timeout: 240 seconds)
2019-11-05 15:19:09	<--	zipper (~luv_panda@unaffiliated/zipper) has quit (Quit: WeeChat 2.6)
2019-11-05 15:20:02	-->	grabarz (~janko@d16-206.static.icpnet.pl) has joined ##rust
2019-11-05 15:22:00	-->	bluezone (uid104970@gateway/web/irccloud.com/x-gnuosptaaqigyard) has joined ##rust
2019-11-05 15:26:24	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-11-05 15:29:47	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-05 15:31:37	<--	asocha (~asocha@public-gprs370195.centertel.pl) has quit (Remote host closed the connection)
2019-11-05 15:32:47	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-11-05 15:33:25	<--	grabarz (~janko@d16-206.static.icpnet.pl) has quit (Ping timeout: 265 seconds)
2019-11-05 15:35:21	-->	grabarz (~janko@d16-206.static.icpnet.pl) has joined ##rust
2019-11-05 15:37:33	-->	cdown (~cdown@199.201.66.0) has joined ##rust
2019-11-05 15:39:39	<--	gnu3ra_ (~gnu3ra@c-98-226-242-1.hsd1.il.comcast.net) has quit (Ping timeout: 240 seconds)
2019-11-05 15:41:54	-->	ytain (~ghfg@2607:f2c0:9408:2400:6802:c13b:b1fd:b0f4) has joined ##rust
2019-11-05 15:45:03	-->	gnu3ra_ (~gnu3ra@c-98-226-242-1.hsd1.il.comcast.net) has joined ##rust
2019-11-05 15:46:21	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-11-05 15:47:22	tempate	Alright, thank you very much
2019-11-05 15:47:29	<--	clarete (~user@pool-108-46-36-53.nycmny.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2019-11-05 15:47:52	Yaniel	include_file! just copies & pastes the contents so you are quite free to do whatever makes most sense
2019-11-05 15:49:27	<--	fanta1 (~fanta1@p200300F76BC3360039F9B0488A4C2BA5.dip0.t-ipconnect.de) has quit (Quit: fanta1)
2019-11-05 15:53:41	<--	meandi_2 (~meandi@dyndsl-178-142-254-215.ewe-ip-backbone.de) has quit (Read error: Connection reset by peer)
2019-11-05 15:57:18	-->	vmeson (~rmacleod@S0106ac202ece3eb3.vc.shawcable.net) has joined ##rust
2019-11-05 16:00:56	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-11-05 16:01:38	-->	iq (~iq@2600:1000:bf00:1e3e:5216:860c:c25b:58e2) has joined ##rust
2019-11-05 16:02:02	-->	meandi (~meandi@dyndsl-178-142-254-215.ewe-ip-backbone.de) has joined ##rust
2019-11-05 16:02:16	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Remote host closed the connection)
2019-11-05 16:04:57	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-11-05 16:06:33	-->	jellie (~zipper@unaffiliated/zipper) has joined ##rust
2019-11-05 16:07:47	-->	mizu_no_oto (~textual@2604:6000:1012:40ee:c189:e589:cbbb:5c84) has joined ##rust
2019-11-05 16:11:18	-->	baali (~baali@59.98.233.150) has joined ##rust
2019-11-05 16:14:49	<--	cdown (~cdown@199.201.66.0) has quit (Ping timeout: 252 seconds)
2019-11-05 16:15:29	<--	jellie (~zipper@unaffiliated/zipper) has quit (Ping timeout: 265 seconds)
2019-11-05 16:15:59	-->	pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined ##rust
2019-11-05 16:17:22	-->	jellie (~zipper@unaffiliated/zipper) has joined ##rust
2019-11-05 16:18:14	-->	leaves (~leaves@unaffiliated/leaves) has joined ##rust
2019-11-05 16:21:22	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 252 seconds)
2019-11-05 16:25:43	Moongoodgirl	Flonk: hmm, okay! ^.^
2019-11-05 16:30:50	Moongoodgirl	Flonk: instead of `struct Tagged<T>(i32, PhantomData<fn() -> T>);` and `struct Tagged<T>(i32, PhantomData<fn() -> T>);`? I guess.
2019-11-05 16:31:19	Moongoodgirl	I'd make those not look like traits though. Maybe `struct Tagged<covariant T>(i32);`.
2019-11-05 16:37:09	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-05 16:39:51	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-11-05 16:40:07	-->	cdown (~cdown@199.201.66.0) has joined ##rust
2019-11-05 16:44:43	-->	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-11-05 16:46:25	<--	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has quit (Remote host closed the connection)
2019-11-05 16:46:38	-->	enobufs (ENOBUF@gateway/vpn/privateinternetaccess/enobuf) has joined ##rust
2019-11-05 16:47:51	<--	cdown (~cdown@199.201.66.0) has quit (Remote host closed the connection)
2019-11-05 16:48:09	-->	cdown (~cdown@199.201.66.0) has joined ##rust
2019-11-05 16:48:43	<--	gbmor (ben@tilde.team/users/ahriman) has quit (Ping timeout: 264 seconds)
2019-11-05 16:49:10	-->	gbmor (ben@tilde.team/users/ahriman) has joined ##rust
2019-11-05 16:50:23	<--	meandi (~meandi@dyndsl-178-142-254-215.ewe-ip-backbone.de) has quit (Ping timeout: 250 seconds)
2019-11-05 16:52:03	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##rust
2019-11-05 16:53:21	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-11-05 16:53:44	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-11-05 16:54:02	<--	o01eg (~o01eg@2a02:2698:82b:12de:9c96:1328:2b22:794d) has quit (Read error: Connection reset by peer)
2019-11-05 16:58:24	-->	hussam (uid193284@gateway/web/irccloud.com/x-ffefrypqthwxndfq) has joined ##rust
2019-11-05 17:00:19	-->	o01eg (~o01eg@2a02:2698:82b:12de:9c96:1328:2b22:794d) has joined ##rust
2019-11-05 17:01:03	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-11-05 17:02:28	<--	cdown (~cdown@199.201.66.0) has quit (Ping timeout: 240 seconds)
2019-11-05 17:06:18	-->	cdown (~cdown@199.201.66.0) has joined ##rust
2019-11-05 17:07:16	-->	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has joined ##rust
2019-11-05 17:09:51	-->	pepper_chico (~pepper_ch@gateway/tor-sasl/pepperchico/x-70212520) has joined ##rust
2019-11-05 17:12:27	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-11-05 17:12:43	<--	jellie (~zipper@unaffiliated/zipper) has quit (Read error: Connection reset by peer)
2019-11-05 17:14:53	-->	jellie (~zipper@unaffiliated/zipper) has joined ##rust
2019-11-05 17:17:21	-->	brool (~grendel@2600:1700:7d20:ae60:2c68:fddb:7f86:c16b) has joined ##rust
2019-11-05 17:17:23	-->	m1m0 (~m1m0@p54AC863B.dip0.t-ipconnect.de) has joined ##rust
2019-11-05 17:17:49	<--	fengshaun (~fengshaun@unaffiliated/fengshaun) has quit (Quit: bibi!)
2019-11-05 17:19:59	<--	evocatus (~evocatus@135-23-100-112.cpe.pppoe.ca) has quit (Quit: WeeChat 2.6)
2019-11-05 17:21:19	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-11-05 17:22:15	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##rust
2019-11-05 17:24:28	-->	fengshaun (~fengshaun@unaffiliated/fengshaun) has joined ##rust
2019-11-05 17:26:32	<--	SiegeLord (~sl@c-73-158-78-36.hsd1.ca.comcast.net) has quit (Quit: It's a joke, it's all a joke.)
2019-11-05 17:29:23	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-11-05 17:29:50	-->	sheelp (~textual@d104-157-15-48.abhsia.telus.net) has joined ##rust
2019-11-05 17:29:55	-->	djapo (~archie@unaffiliated/djapo) has joined ##rust
2019-11-05 17:37:12	esotericnonsense	is anyone running a local rustup mirror? I see https://github.com/jiegec/rustup-mirror but it looks kind of barebones
2019-11-05 17:37:35	esotericnonsense	I'd like to say rsync once a week or something to save having to download toolchains multiple times
2019-11-05 17:37:50	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-05 17:39:32	<--	grabarz (~janko@d16-206.static.icpnet.pl) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-05 17:39:34	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-11-05 17:42:03	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 240 seconds)
2019-11-05 17:44:49	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-11-05 17:49:06	<--	sheelp (~textual@d104-157-15-48.abhsia.telus.net) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-05 17:50:13	<--	djapo (~archie@unaffiliated/djapo) has quit (Ping timeout: 265 seconds)
2019-11-05 17:50:20	-->	stephaneyfx (~stephaney@184.68.160.234) has joined ##rust
2019-11-06 09:03:18	-->	Syrinxos (~syrinxos@93-34-1-84.ip47.fastwebnet.it) has joined ##rust
2019-11-06 09:03:18	--	Topic for ##rust is "Unofficial channel for the Rust programming language |  Playground https://play.rust-lang.org/ | Discord http://discord.gg/rust-lang | Forum https://users.rust-lang.org | Code of conduct: rust-lang.org/conduct.html | TL;DR: be nice and we'll get along just fine"
2019-11-06 09:03:18	--	Topic set by Manishearth (~Manishear@wikipedia/Manishearth) on Mon, 13 May 2019 05:47:40
2019-11-06 09:03:18	--	Channel ##rust: 590 nicks (2 ops, 0 voices, 588 normals)
2019-11-06 09:03:33	--	Channel created on Tue, 30 Jul 2013 17:50:50
2019-11-06 09:03:46	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-06 09:04:31	-->	leaves (~leaves@unaffiliated/leaves) has joined ##rust
2019-11-06 09:05:25	-->	dftxbs3e (~dftxbs3e@unaffiliated/dftxbs3e) has joined ##rust
2019-11-06 09:05:48	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-06 09:09:01	<--	smurfendrek123 (~smurfendr@193.190.253.144) has quit (Ping timeout: 265 seconds)
2019-11-06 09:10:47	<--	bitwinery (~bitwinery@c-73-37-18-139.hsd1.wa.comcast.net) has quit (Quit: Leaving)
2019-11-06 09:13:02	-->	maelcum (~horst@2001:16b8:5c24:7500:1585:9658:fd64:f147) has joined ##rust
2019-11-06 09:13:50	wucke13	What does it take to compile statically using rust? Is it sufficient to pass `--target x86_64-unknown-linux-musl`?
2019-11-06 09:23:36	<--	lovesegfault (~bemeurer@2600:1700:5f20:83e0:5cd7:79e1:a718:3080) has quit (Ping timeout: 252 seconds)
2019-11-06 09:23:51	-->	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-11-06 09:26:00	oherrala	wucke13: yes
2019-11-06 09:28:37	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-11-06 09:29:30	-->	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has joined ##rust
2019-11-06 09:31:41	wucke13	Somehow rust tries to link against glibc and fails then, though
2019-11-06 09:33:39	-->	nostoi (~nostoi@55.red-83-50-221.dynamicip.rima-tde.net) has joined ##rust
2019-11-06 09:34:56	-->	AbedB_ (~AbedBhuty@bzq-109-64-95-117.red.bezeqint.net) has joined ##rust
2019-11-06 09:35:07	oherrala	do you have musl installed?
2019-11-06 09:35:14	wucke13	Yep
2019-11-06 09:36:05	wucke13	Well, other way round: how can I point cargo to my musl installation folder?
2019-11-06 09:36:13	oherrala	and you are using musl-gcc or musl-clang as linker?
2019-11-06 09:36:14	wucke13	$LD already points to the musl ld
2019-11-06 09:36:27	oherrala	point CC to musl-gcc or musl-clang
2019-11-06 09:37:01	oherrala	We are using "CC_x86_64_unknown_linux_musl=musl-clang" in our build environment
2019-11-06 09:37:37	j`ey	oh, musl in rust doesnt use lld?
2019-11-06 09:37:45	oherrala	and in cargo.conf we have in [target.x86_64-unknown-linux-musl]  section "linker = "musl-clang""
2019-11-06 09:37:53	oherrala	s/cargo.conf/cargo.config
2019-11-06 09:38:16	<--	AbedB__ (~AbedBhuty@104.194.218.228) has quit (Ping timeout: 240 seconds)
2019-11-06 09:39:43	vorner	Do you have some dependency that builds its own C code that could be linking to glibc instead?
2019-11-06 09:40:19	<--	maelcum (~horst@2001:16b8:5c24:7500:1585:9658:fd64:f147) has quit (Quit: Konversation terminated!)
2019-11-06 09:40:21	wucke13	vorner: Maybe, I will check that in a few minutes. Is there a way to tell cargo which compiler to use, or do I have to set CC environment variable?
2019-11-06 09:41:27	oherrala	wucke13: cargo itself doesn't compile C code, but many Rust crates with C dependencies build them themselves using cc crate's help
2019-11-06 09:41:54	oherrala	wucke13: https://crates.io/crates/cc
2019-11-06 09:42:11	oherrala	wucke13: see section "External configuration via environment variables"
2019-11-06 09:45:02	wucke13	oherrala: Thanks
2019-11-06 09:45:30	-->	localhorse (uid18992@gateway/web/irccloud.com/x-bezennmacwfvvdet) has joined ##rust
2019-11-06 09:48:17	-->	con3 (~kvirc@154.119.40.183) has joined ##rust
2019-11-06 09:48:51	<--	baali (~baali@59.98.233.150) has quit (Ping timeout: 240 seconds)
2019-11-06 09:49:36	--	sral is now known as violator
2019-11-06 09:52:53	-->	tsaka_ (~torstein@ip5b403b7b.dynamic.kabel-deutschland.de) has joined ##rust
2019-11-06 09:53:03	wucke13	So, apparently libc, arrayvec and byteorder don't seem to compile
2019-11-06 09:55:32	j`ey	how so/
2019-11-06 09:57:39	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-11-06 09:57:58	wucke13	https://paste.krebsco.de/w4AUDDoz Somehow glibc is picked up
2019-11-06 09:58:25	-->	multiproc (~mark@unaffiliated/multiproc) has joined ##rust
2019-11-06 09:59:17	<--	narispo (~narispo@37.171.135.141) has quit (Ping timeout: 265 seconds)
2019-11-06 09:59:18	j`ey	wucke13: oh this is for stuff that is running on the host
2019-11-06 09:59:30	j`ey	what rustc target is for your host
2019-11-06 10:00:05	j`ey	Im guessing stable-x86_64-unknown-linux-gnu
2019-11-06 10:00:15	wucke13	target = "x86_64-unknown-linux-musl"
2019-11-06 10:00:25	wucke13	from .config/cargo.config
2019-11-06 10:00:26	j`ey	thats target, not host
2019-11-06 10:00:34	wucke13	How would I find out then?
2019-11-06 10:01:01	j`ey	I dont know about nix, but I think you want glibc available when youre building
2019-11-06 10:01:21	<--	nostoi (~nostoi@55.red-83-50-221.dynamicip.rima-tde.net) has quit (Quit: This computer has gone to sleep)
2019-11-06 10:01:22	j`ey	even though youre targeting musl, your host is still glibc
2019-11-06 10:01:31	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-11-06 10:01:43	-->	nostoi (~nostoi@55.red-83-50-221.dynamicip.rima-tde.net) has joined ##rust
2019-11-06 10:04:09	<--	ravenousmoose (~ravenousm@ptr-cud5aqg6fng7b11552m.18120a2.ip6.access.telenet.be) has quit (Ping timeout: 246 seconds)
2019-11-06 10:16:52	osa1	is there a way to make sure a package will be linked with only one version of a library, other than eyeballing the Cargo.lock?
2019-11-06 10:17:13	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-06 10:19:37	oherrala	osa1: cargo deny had something for that
2019-11-06 10:19:53	oherrala	osa1: https://crates.io/crates/cargo-deny
2019-11-06 10:23:17	osa1	oherrala: which command exactly? I can't see it in the README
2019-11-06 10:24:18	j`ey	ban
2019-11-06 10:24:33	j`ey	there's a section "The multiple-versions field
2019-11-06 10:24:34	j`ey	"
2019-11-06 10:24:35	oherrala	osa1: Crate bans
2019-11-06 10:24:56	osa1	I don't want to ban anything, I want to make sure there will be one version of a library linked in the final executable
2019-11-06 10:25:22	osa1	ahhh
2019-11-06 10:25:28	osa1	yes, OK, thanks
2019-11-06 10:28:37	-->	Xatenev (~I@87.190.19.178) has joined ##rust
2019-11-06 10:34:41	-->	narispo (~narispo@37.173.2.155) has joined ##rust
2019-11-06 10:37:13	-->	Coldblackice (c@gateway/vpn/privateinternetaccess/coldblackice) has joined ##rust
2019-11-06 10:37:22	-->	zipper (~zipper@unaffiliated/zipper) has joined ##rust
2019-11-06 10:39:39	<--	Coldblackice_ (c@gateway/vpn/privateinternetaccess/coldblackice) has quit (Ping timeout: 240 seconds)
2019-11-06 10:41:08	<--	tinga (~tinga@host86-164-180-234.range86-164.btcentralplus.com) has quit (Ping timeout: 245 seconds)
2019-11-06 10:43:14	<--	con3 (~kvirc@154.119.40.183) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2019-11-06 10:47:09	-->	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has joined ##rust
2019-11-06 10:47:20	--	carado_ is now known as carado
2019-11-06 10:47:24	<--	carado (~carado@2a01:e35:2ebf:3970:6ac:c692:c356:dc8c) has quit (Quit: Leaving)
2019-11-06 10:47:42	-->	carado (~carado@2a01:e35:2ebf:3970:6ac:c692:c356:dc8c) has joined ##rust
2019-11-06 10:48:18	-->	matthias_bgg (~mbgg@37.223.137.234) has joined ##rust
2019-11-06 10:51:29	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-11-06 10:54:31	<--	Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) has quit (Ping timeout: 252 seconds)
2019-11-06 11:04:57	-->	t7 (~tommo@host86-131-226-196.range86-131.btcentralplus.com) has joined ##rust
2019-11-06 11:07:54	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-11-06 11:12:18	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 250 seconds)
2019-11-06 11:13:43	<--	regakakobigman (~regakakob@c-73-174-187-176.hsd1.pa.comcast.net) has quit (Ping timeout: 265 seconds)
2019-11-06 11:20:35	-->	rpgwaiter (sid108352@gateway/web/irccloud.com/x-atgxpeeqrvcpuqpj) has joined ##rust
2019-11-06 11:21:38	<--	nostoi (~nostoi@55.red-83-50-221.dynamicip.rima-tde.net) has quit (Quit: This computer has gone to sleep)
2019-11-06 11:21:52	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-06 11:24:29	-->	nostoi (~nostoi@55.red-83-50-221.dynamicip.rima-tde.net) has joined ##rust
2019-11-06 11:25:34	-->	ev4rist3 (~phoenix@x4e368dd1.dyn.telefonica.de) has joined ##rust
2019-11-06 11:26:48	<--	nostoi (~nostoi@55.red-83-50-221.dynamicip.rima-tde.net) has quit (Client Quit)
2019-11-06 11:28:34	-->	ellcs (~mantel@212.12.60.67) has joined ##rust
2019-11-06 11:29:37	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-06 11:44:51	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-11-06 11:45:26	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-11-06 11:48:11	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-11-06 11:51:32	j`ey	anyone know how to do the equivalent of _mm_store_pd in packed_simd?
2019-11-06 11:53:27	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-11-06 11:56:46	j`ey	ah, write_to_slice
2019-11-06 12:03:11	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-11-06 12:04:42	-->	sainnhe (~Sainnhe_P@113.140.11.4) has joined ##rust
2019-11-06 12:06:18	<--	user9 (984d0e74@dcm-info-22.u-ga.fr) has quit (Remote host closed the connection)
2019-11-06 12:08:26	<--	xeno (~xeno@unaffiliated/xeno) has quit (Ping timeout: 276 seconds)
2019-11-06 12:11:01	<--	AbedB_ (~AbedBhuty@bzq-109-64-95-117.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-11-06 12:12:23	<--	rk4 (~r@ec2-13-237-166-197.ap-southeast-2.compute.amazonaws.com) has quit (Remote host closed the connection)
2019-11-06 12:12:43	-->	AbedB (~AbedBhuty@bzq-109-64-95-117.red.bezeqint.net) has joined ##rust
2019-11-06 12:15:56	<--	zipper (~zipper@unaffiliated/zipper) has quit (Ping timeout: 268 seconds)
2019-11-06 12:17:35	elichai2	does rust have an equivilant to `noexcept` but for panicing?
2019-11-06 12:25:20	Kinnison	elichai2: Something like: https://github.com/dtolnay/no-panic ?
2019-11-06 12:25:38	gchristensen	wowowowowow
2019-11-06 12:25:52	elichai2	yeah, but something that will also hint the compiler that it's free to optimize things *because* they can not panic
2019-11-06 12:25:58	 *	j`ey having trouble cross compiling to aarch64 :<
2019-11-06 12:26:21	Kinnison	elichai2: Hmm, I heard about some thinking around that, but I don't think it's in a position to do that yet, no.
2019-11-06 12:26:56	elichai2	j`ey: https://github.com/rust-embedded/cross
2019-11-06 12:27:11	j`ey	i forgot about that
2019-11-06 12:27:20	j`ey	but I'd need docker
2019-11-06 12:27:36	elichai2	Kinnison: that's do but. C++17 has a lot of power when combining `constexpr noexcept`
2019-11-06 12:27:39	-->	zipper (~zipper@unaffiliated/zipper) has joined ##rust
2019-11-06 12:27:45	-->	talin (~unknown@unaffiliated/talin) has joined ##rust
2019-11-06 12:28:06	j`ey	what does that give you over constexpr?
2019-11-06 12:28:06	 *	Kinnison nods, I can imagine
2019-11-06 12:28:51	<--	sainnhe (~Sainnhe_P@113.140.11.4) has quit (Quit: WeeChat 2.6)
2019-11-06 12:28:54	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 268 seconds)
2019-11-06 12:29:02	oherrala	j`ey: I'm using this with Rust's docker image: https://toolchains.bootlin.com/
2019-11-06 12:29:29	oherrala	j`ey: extract tarball, point environment variables to correct places, .., profit
2019-11-06 12:29:50	elichai2	j`ey: I think constexpr disallows throwing only in C++20+
2019-11-06 12:29:57	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-11-06 12:30:01	elichai2	j`ey: and I love `cross` it's so great heh
2019-11-06 12:30:44	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-11-06 12:30:44	j`ey	i was trying to get musl working, but apparently that needs some symbols that you need to link to gcc for
2019-11-06 12:30:49	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-06 12:31:04	-->	sainnhe (~Sainnhe_P@113.140.11.4) has joined ##rust
2019-11-06 12:31:50	-->	ytain (~ghfg@2607:f2c0:940b:9800:3962:6fab:fb49:7b49) has joined ##rust
2019-11-06 12:32:30	oherrala	j`ey: https://gist.github.com/oherrala/a2f8f8d7af1ba30ccd784c7dc62a22b6
2019-11-06 12:32:59	oherrala	j`ey: that's specific to our build needs, but you'd probably get some pointers to right direction
2019-11-06 12:34:28	j`ey	oherrala: nice, i'll take a look
2019-11-06 12:35:59	j`ey	oherrala: so you didnt hit issues like https://github.com/rust-vmm/vmm-sys-util/commit/cb33925bfd1eb314e5384c58c78874d2c98d6182 ?
2019-11-06 12:37:16	<--	zipper (~zipper@unaffiliated/zipper) has quit (Ping timeout: 264 seconds)
2019-11-06 12:37:54	oherrala	j`ey: that's worked around with: https://gist.github.com/oherrala/a2f8f8d7af1ba30ccd784c7dc62a22b6#gistcomment-3075597
2019-11-06 12:37:55	j`ey	hm I have rustc-link-search=["foo"] in my .cargo/config, but it complains it's expecting a table and it's getting an array :/
2019-11-06 12:38:14	j`ey	oherrala: oh, did I just not scroll down far enough :)
2019-11-06 12:38:29	oherrala	j`ey: maybe you opened the page before I added that
2019-11-06 12:38:47	<--	sainnhe (~Sainnhe_P@113.140.11.4) has quit (Quit: WeeChat 2.6)
2019-11-06 12:39:15	j`ey	was really hoping musl+lld would just work :)
2019-11-06 12:40:08	oherrala	there's still things to improve. It feels really messy when there's gcc and clang and libs (from both) involved in the build processes
2019-11-06 12:44:28	<--	ytain (~ghfg@2607:f2c0:940b:9800:3962:6fab:fb49:7b49) has quit (Ping timeout: 264 seconds)
2019-11-06 12:44:28	j`ey	well I got it working with the -lgcc, lets see if it actually runs
2019-11-06 12:46:47	-->	hexfive (~hexfive@50.35.80.237) has joined ##rust
2019-11-06 12:47:24	j`ey	sweet, it does work!
2019-11-06 12:48:40	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-06 12:48:52	oherrala	\o/
2019-11-06 12:51:47	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Quit: Mom decided I had to go to bed.)
2019-11-06 12:52:59	-->	ClaymorePT (~Claymore@188.251.245.88) has joined ##rust
2019-11-06 12:53:30	<--	ClaymorePT (~Claymore@188.251.245.88) has quit (Client Quit)
2019-11-06 12:56:54	-->	nokdoot (~nokdoot@211.205.207.39) has joined ##rust
2019-11-06 13:05:12	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-11-06 13:06:30	<--	justanotheruser (~justanoth@unaffiliated/justanotheruser) has quit (Ping timeout: 268 seconds)
2019-11-06 13:10:19	<--	OmniMancer (~Paul@101.100.137.239) has quit (Read error: Connection reset by peer)
2019-11-06 13:11:56	-->	con3 (~kvirc@154.119.40.183) has joined ##rust
2019-11-06 13:13:36	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-11-06 13:14:17	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-11-06 13:15:41	-->	zipper (~zipper@unaffiliated/zipper) has joined ##rust
2019-11-06 13:21:15	<--	jinie (~jimmy@188.114.159.27) has quit (Ping timeout: 240 seconds)
2019-11-06 13:22:18	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-11-06 13:22:48	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-11-06 13:24:59	-->	fanta1 (~fanta1@p200300F76BC6D400D52CA5B415FA13F9.dip0.t-ipconnect.de) has joined ##rust
2019-11-06 13:29:14	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 240 seconds)
2019-11-06 13:32:16	<--	Iolo (~iolo@dsl-tkubng22-58c023-38.dhcp.inet.fi) has quit (Ping timeout: 240 seconds)
2019-11-06 13:33:27	-->	Iolo (~iolo@dsl-tkubng22-58c023-38.dhcp.inet.fi) has joined ##rust
2019-11-06 13:33:36	-->	kleschenko (~kleschenk@80.93.124.102) has joined ##rust
2019-11-06 13:33:47	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-11-06 13:35:43	<--	AbedB (~AbedBhuty@bzq-109-64-95-117.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-11-06 13:36:35	-->	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has joined ##rust
2019-11-06 13:36:59	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-11-06 13:37:27	-->	AbedB (~AbedBhuty@bzq-109-64-95-117.red.bezeqint.net) has joined ##rust
2019-11-06 13:38:45	<--	AbedB (~AbedBhuty@bzq-109-64-95-117.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-11-06 13:38:48	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-11-06 13:39:46	-->	AbedB (~AbedBhuty@bzq-109-64-95-117.red.bezeqint.net) has joined ##rust
2019-11-06 13:47:49	-->	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has joined ##rust
2019-11-06 13:50:39	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2019-11-06 13:52:29	<--	con3 (~kvirc@154.119.40.183) has quit (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
2019-11-06 13:56:02	-->	zeden (~user@unaffiliated/zeden) has joined ##rust
2019-11-06 13:56:17	<--	averell (~averell@unaffiliated/averell) has quit (Remote host closed the connection)
2019-11-06 13:56:23	<--	zeden (~user@unaffiliated/zeden) has left ##rust ("WeeChat 2.6")
2019-11-06 13:58:07	<--	zipper (~zipper@unaffiliated/zipper) has quit (Quit: WeeChat 2.6)
2019-11-06 14:05:30	-->	zipper (~zipper@unaffiliated/zipper) has joined ##rust
2019-11-06 14:07:03	-->	BeerLover (~BeerBuddy@125.22.102.134) has joined ##rust
2019-11-06 14:08:28	<--	BeerLover (~BeerBuddy@125.22.102.134) has quit (Client Quit)
2019-11-06 14:08:59	-->	dfin (~dsd@178-83-72-15.dynamic.hispeed.ch) has joined ##rust
2019-11-06 14:09:58	-->	dmgk (~dg@lucille.syrec.org) has joined ##rust
2019-11-06 14:10:04	<--	osa1 (~osa1@haskell/developer/osa1) has quit (Remote host closed the connection)
2019-11-06 14:10:16	dfin	hi. Can somebody _please_ help me with this: This [1] works. However, for some reason, using an Option in the struct fails [2]. [1] https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=c834db69468a2cdbc232431bcd674ea6 [2] https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=607da1a43c3752e5f193ed0401336e90
2019-11-06 14:13:34	-->	lauromoura_ (~lauromour@2804:7f5:f380:7ff4:2d60:ac70:5695:80fd) has joined ##rust
2019-11-06 14:14:00	-->	averell (~averell@unaffiliated/averell) has joined ##rust
2019-11-06 14:14:53	-->	justanotheruser (~justanoth@unaffiliated/justanotheruser) has joined ##rust
2019-11-06 14:15:11	<--	toppler (~user@mtop.default.momentoftop.uk0.bigv.io) has quit (Ping timeout: 276 seconds)
2019-11-06 14:16:12	<--	lauromoura (~lauromour@2804:7f5:f380:c290:2d60:ac70:5695:80fd) has quit (Ping timeout: 252 seconds)
2019-11-06 14:18:31	-->	mhi^ (~mhi^@unaffiliated/mhi/x-9993184) has joined ##rust
2019-11-06 14:21:41	elichai2	I'm looking for an example where a struct and it's field don't have the same alignment/size i.e. https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=2437311a24449b7bff72378e4f99a67e
2019-11-06 14:25:05	Alexendoo	With only one field?
2019-11-06 14:26:38	<--	gareppa (~gareppa@unaffiliated/gareppa) has quit (Quit: Leaving)
2019-11-06 14:27:46	Lumpio-	It says align: 1 size: 9 for both
2019-11-06 14:27:54	Lumpio-	oh you want a counterexample heh
2019-11-06 14:29:59	j`ey	without adding align attributes i guess!
2019-11-06 14:30:13	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-11-06 14:30:15	<--	SiGe (~SiGe@unaffiliated/sige) has quit (Remote host closed the connection)
2019-11-06 14:30:38	Alexendoo	elichai2: The repr transparent RFC mentions a case for ARM64 that could be of interest https://github.com/rust-lang/rfcs/blob/master/text/1758-repr-transparent.md#motivation
2019-11-06 14:30:38	sfackler	the only way to see that is to use a #[repr(align(N))] afaik
2019-11-06 14:31:25	<--	royal_screwup21 (89de72f4@gateway/web/cgi-irc/kiwiirc.com/ip.137.222.114.244) has quit (Remote host closed the connection)
2019-11-06 14:31:48	Alexendoo	Though it probably would report the same alignment still
2019-11-06 14:31:49	-->	tmager (~Thunderbi@96.78.200.121) has joined ##rust
2019-11-06 14:36:39	elichai2	thanks
2019-11-06 14:36:55	elichai2	another question :) is it possible to have a null fat pointer?
2019-11-06 14:37:12	elichai2	evalr: std::ptr::null::<[u8]>()
2019-11-06 14:37:15	--	Notice(evalr): error[E0277]: the size for values of type `[u8]` cannot be known at compilation time
2019-11-06 14:37:17	--	Notice(evalr): ~~~ Full output: https://play.rust-lang.org/?gist=28ae967d8f92bbd299bc35f47e03c02f&version=stable&mode=debug
2019-11-06 14:38:27	<--	jenny-m (~jdm-@167.100.78.229) has quit (Quit: Leaving...)
2019-11-06 14:38:31	elichai2	evalr: 0usize as *const [u8;0] as *const [u8]
2019-11-06 14:38:33	--	Notice(evalr): 0x0
2019-11-06 14:38:39	elichai2	ha :)
2019-11-06 14:38:54	elichai2	evalr: std::ptr::null::<u8>() as *const [u8;0] as *const [u8]
2019-11-06 14:38:56	--	Notice(evalr): 0x0
2019-11-06 14:39:20	elichai2	evalr: (std::ptr::null::<u8>() as *const [u8;0] as *const [u8]).is_null()
2019-11-06 14:39:21	dfin	any ideas?
2019-11-06 14:39:23	--	Notice(evalr): true
2019-11-06 14:39:38	j`ey	evalr: std::mem::size_of_val(std::ptr::null::<u8>() as *const [u8;0] as *const [u8])
2019-11-06 14:39:40	--	Notice(evalr): error[E0308]: mismatched types
2019-11-06 14:39:42	--	Notice(evalr): ~~~ Full output: https://play.rust-lang.org/?gist=2a3ce9a156dcf1105ec45b144aff6ca5&version=stable&mode=debug
2019-11-06 14:40:18	<--	zipper (~zipper@unaffiliated/zipper) has quit (Ping timeout: 246 seconds)
2019-11-06 14:40:39	elichai2	evalr: unsafe {std::mem::transmute::<_, (usize, usize)>(std::ptr::null::<u8>() as *const [u8;0] as *const [u8])}
2019-11-06 14:40:41	--	Notice(evalr): (0, 0)
2019-11-06 14:40:43	j`ey	is that definitely a fat pointer
2019-11-06 14:40:48	elichai2	j`ey: seems so
2019-11-06 14:41:00	j`ey	evalr: https://play.rust-lang.org/?gist=2a3ce9a156dcf1105ec45b144aff6ca5&version=stable&mode=debug
2019-11-06 14:41:03	--	Notice(evalr): error: expected type, found `}`
2019-11-06 14:41:03	j`ey	err
2019-11-06 14:41:04	--	Notice(evalr): ~~~ Full output: https://play.rust-lang.org/?gist=97a5abaa5cd37039fc1e832f2704d8d7&version=stable&mode=debug
2019-11-06 14:41:09	elichai2	evalr: &*(std::ptr::null::<u8>() as *const [u8;0] as *const [u8]).len()
2019-11-06 14:41:09	j`ey	evalr: std::mem::size_of::<*const [u8]>()
2019-11-06 14:41:11	--	Notice(evalr): error[E0599]: no method named `len` found for type `*const [u8]` in the current scope
2019-11-06 14:41:13	--	Notice(evalr): ~~~ Full output: https://play.rust-lang.org/?gist=342e02037eaaad844c3dada6fc897eb0&version=stable&mode=debug
2019-11-06 14:41:16	--	Notice(evalr): 16
2019-11-06 14:41:23	-->	jenny-m (~jdm-@167.100.78.229) has joined ##rust
2019-11-06 14:41:24	<--	libertyprime (~libertypr@124.197.60.232) has quit (Quit: leaving)
2019-11-06 14:41:26	elichai2	evalr: &*((std::ptr::null::<u8>() as *const [u8;0] as *const [u8])).len()
2019-11-06 14:41:28	--	Notice(evalr): error[E0599]: no method named `len` found for type `*const [u8]` in the current scope
2019-11-06 14:41:30	--	Notice(evalr): ~~~ Full output: https://play.rust-lang.org/?gist=a3011f1ed59c8494bea2fc656d315726&version=stable&mode=debug
2019-11-06 14:41:43	elichai2	j`ey: didn't know you can give it a lnk
2019-11-06 14:42:21	elichai2	evalr: unsafe {(&*(std::ptr::null::<u8>() as *const [u8;0] as *const [u8])).len()}
2019-11-06 14:42:23	--	Notice(evalr): 0
2019-11-06 14:42:25	elichai2	evalr: unsafe {(&*(std::ptr::null::<u8>() as *const [u8;5] as *const [u8])).len()}
2019-11-06 14:42:28	--	Notice(evalr): 5
2019-11-06 14:42:40	elichai2	looks like a fat pointer :)
2019-11-06 14:42:41	<--	AbedB (~AbedBhuty@bzq-109-64-95-117.red.bezeqint.net) has quit (Read error: Connection reset by peer)
2019-11-06 14:43:07	j`ey	elichai2: you cant, that was a copy/paste acident :)
2019-11-06 14:43:15	elichai2	oh lol :/
2019-11-06 14:47:33	-->	osa1 (~osa1@haskell/developer/osa1) has joined ##rust
2019-11-06 15:01:24	-->	learning1 (~pi@121.122.92.2) has joined ##rust
2019-11-06 15:04:17	<--	learningc (~pi@121.122.92.70) has quit (Ping timeout: 268 seconds)
2019-11-06 15:09:49	<--	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has quit (Quit: Leaving)
2019-11-06 15:10:44	-->	federico_ (~federico1@opensuse/member/Federico-Mena) has joined ##rust
2019-11-06 15:11:04	-->	zipper (~zipper@unaffiliated/zipper) has joined ##rust
2019-11-06 15:13:55	--	toure|gone is now known as toure
2019-11-06 15:16:01	<--	zipper (~zipper@unaffiliated/zipper) has quit (Ping timeout: 268 seconds)
2019-11-06 15:17:09	<--	fanta1 (~fanta1@p200300F76BC6D400D52CA5B415FA13F9.dip0.t-ipconnect.de) has quit (Quit: fanta1)
2019-11-06 15:17:18	-->	klemm (~klemm@klemm.7un.net) has joined ##rust
2019-11-06 15:19:25	-->	zipper (~zipper@unaffiliated/zipper) has joined ##rust
2019-11-06 15:24:41	elichai2	What's the best way to "freeze" something from freeing? (i.e. if I have something like a Vec<T>, and I'm using it's pointer. is there a way to make sure it doesn't drop before I finish?)
2019-11-06 15:25:21	elichai2	i.e. after lex lifetimes it seems like the borrow checker can kinda "drop" things before the end of scope. (that could also happenn if you reuse the same name)
2019-11-06 15:25:22	j`ey	mem::forget
2019-11-06 15:25:58	elichai2	j`ey: but then how I make sure *it will* drop when i'm done? :)
2019-11-06 15:26:04	j`ey	drop() :P
2019-11-06 15:26:06	elichai2	(is there a `mem::remember` :P)
2019-11-06 15:26:16	j`ey	(I assume you can drop like that)
2019-11-06 15:26:18	vorner	elichai2: Note that non-lexical lifetimes will not move a place where it drops if it has a destructor.
2019-11-06 15:26:26	vorner	Destructor counts as a „use“ for the borrow checker.
2019-11-06 15:26:27	j`ey	ohbwait, forget doesnt do that
2019-11-06 15:26:32	j`ey	forget consumes
2019-11-06 15:26:36	elichai2	yeah
2019-11-06 15:26:37	noonien	is there a function to copy a slice into another?
2019-11-06 15:26:40	vorner	And that one runs at the end of the scope.
2019-11-06 15:26:43	j`ey	copy_from_slice
2019-11-06 15:27:01	<--	pupskuchen (~pupskuche@unaffiliated/pupskuchen) has quit (Quit: Textual IRC Client: www.textualapp.com)
2019-11-06 15:27:01	vorner	But if you really want to turn it into the allocation itself, then into_raw_parts
2019-11-06 15:27:10	vorner	and then from_raw_parts
2019-11-06 15:27:25	noonien	ah, dope, thanks
2019-11-06 15:27:35	<--	ev4rist3 (~phoenix@x4e368dd1.dyn.telefonica.de) has quit (Quit: Lost terminal)
2019-11-06 15:27:35	elichai2	vorner: i'm pretty sure `into_raw_parts` isn't a function
2019-11-06 15:28:04	elichai2	but there is a `from_raw_parts` https://doc.rust-lang.org/std/vec/struct.Vec.html#method.from_raw_parts
2019-11-06 15:28:19	elichai2	but that's just a Vec, it was an example for a general allocation based types
2019-11-06 15:28:19	-->	r1ch (~r1ch@2604:2000:e384:6f00:cc8a:471:4b29:669a) has joined ##rust
2019-11-06 15:29:48	-->	scain (~scain@2607:5300:60:233b::1) has joined ##rust
2019-11-06 15:31:31	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-11-06 15:34:05	netopso	Can I implement the same method on multiple structs at the same time?
2019-11-06 15:34:58	bronsen	How do I match unit to, say, "f" after `io::stdin().read_line(&mut unit).expect("fail...");`? Trying `match unit.as_ref() {"f" => whatever(), _ => panic!("!!")}; always panics
2019-11-06 15:35:18	j`ey	netopso: with a macro
2019-11-06 15:35:41	<--	zipper (~zipper@unaffiliated/zipper) has quit (Ping timeout: 265 seconds)
2019-11-06 15:35:45	j`ey	bronsen: it's probably a newline?
2019-11-06 15:36:06	bronsen	so I should trim() it first?
2019-11-06 15:36:25	netopso	j`ey: I can't do something with a default trait implementation and then empty-implementing that trait for all the structs?
2019-11-06 15:36:39	<--	xeno (~xeno@unaffiliated/xeno) has quit (Ping timeout: 265 seconds)
2019-11-06 15:36:42	j`ey	bronsen: that's likely the issue
2019-11-06 15:36:52	j`ey	netopso: that should work too
2019-11-06 15:38:18	bronsen	thank yoy j`ey :)
2019-11-06 15:38:20	-->	xeno (~xeno@unaffiliated/xeno) has joined ##rust
2019-11-06 15:38:21	bronsen	you*
2019-11-06 15:39:34	<--	nokdoot (~nokdoot@211.205.207.39) has quit (Remote host closed the connection)
2019-11-06 15:39:41	<--	Iolo (~iolo@dsl-tkubng22-58c023-38.dhcp.inet.fi) has quit (Ping timeout: 250 seconds)
2019-11-06 15:41:37	-->	Iolo (~iolo@dsl-tkubng22-58c023-38.dhcp.inet.fi) has joined ##rust
2019-11-06 15:41:48	j`ey	wasm-opt did nothing to my .wasm file, any suggestion of other tools to run?
2019-11-06 15:42:05	j`ey	the wasm code generated by rust is 1.8M, 25K for a similar C program
2019-11-06 15:42:26	<--	xeno (~xeno@unaffiliated/xeno) has quit (Ping timeout: 240 seconds)
2019-11-06 15:43:11	j`ey	(annoying that the wasm group is on discord, which i cant go on from work)
2019-11-06 15:44:45	-->	fsasm (~fsasm@62-178-93-7.cable.dynamic.surfer.at) has joined ##rust
2019-11-06 15:50:18	-->	user9 (984d0e74@dcm-info-22.u-ga.fr) has joined ##rust
2019-11-06 15:53:19	-->	jinie (~jimmy@188.114.159.27) has joined ##rust
2019-11-06 15:56:30	j`ey	anyone know how to build without debug info?
2019-11-06 15:56:40	j`ey	building with --release and -C debuginfo=0
2019-11-06 15:57:20	carado	try adding debug = false; under [profile.dev] in your Cargo.toml
2019-11-06 15:57:26	j`ey	I did that too
2019-11-06 15:57:32	j`ey	well under .release
2019-11-06 15:57:32	-->	gioyik (~gioyik@186.116.245.145) has joined ##rust
2019-11-06 15:57:43	carado	i'm pretty sure .release is already without debug info
2019-11-06 15:57:52	<--	pepper_chico (~pepper_ch@gateway/tor-sasl/pepperchico/x-70212520) has quit (Ping timeout: 260 seconds)
2019-11-06 15:58:01	j`ey	yet over 60% of the .wasm is debug info :)
2019-11-06 15:58:57	carado	weird
2019-11-06 16:00:03	sfackler	it's pulled in from std which is shipped with debuginfo
2019-11-06 16:00:11	j`ey	frustrating that rust's wasm is so much worse than emscripten :/
2019-11-06 16:00:36	carado	have you tried to call wasm-strip on the resulting .wasm ?
2019-11-06 16:00:38	sfackler	you can pass -Zstrip-debuginfo-if-disabled=true to rustc or just strip the wasm module
2019-11-06 16:01:15	j`ey	ok, it turns out wasm-opt *doesnt* strip by default
2019-11-06 16:01:22	j`ey	you need to pass --strip-debug
2019-11-06 16:01:39	-->	shinka (~phdp@node-1w7jra91x6wnagplj38ttf956.ipv6.telus.net) has joined ##rust
2019-11-06 16:01:59	carado	oh
2019-11-06 16:02:00	j`ey	I think I misunderstood this comment
2019-11-06 16:02:08	carado	out of curiosity, what's the filesize after doing that ?
2019-11-06 16:02:28	j`ey	from 1.8M to 56K
2019-11-06 16:02:55	carado	that seems pretty good
2019-11-06 16:03:11	j`ey	I'll see if it affects run time, i dont see why it would, but still
2019-11-06 16:03:14	carado	i think you can also change the allocator to a more lightweight one to reduce filesize further
2019-11-06 16:03:32	j`ey	this code doesnt use std/do anything allocations
2019-11-06 16:03:45	j`ey	(let me verify that!)
2019-11-06 16:05:10	j`ey	I'm mostly just unsure why the wasm produced by Rust is way slower than one produced by C
2019-11-06 16:06:09	shinka	Say I have an enum "pub enum X { A { lhs: String, rhs: String }, B, C }". I want to do pattern matching on a tuple (X, X), but if I write "match (*x0, *x1) { (X::A{ref lhs, res rhs}, X::A{ref lhs, ref rhs}) => ..." it'll fail because there are two references to lhs and rhs, but I cannot use an arbitrary name, so how I can use pattern matching on a tuple of X?
2019-11-06 16:07:11	<--	kleschenko (~kleschenk@80.93.124.102) has quit (Ping timeout: 268 seconds)
2019-11-06 16:07:28	-->	smurfendrek123 (~smurfendr@nat-56.kulnet.kuleuven.be) has joined ##rust
2019-11-06 16:07:48	-->	kleschenko (~kleschenk@80.93.124.102) has joined ##rust
2019-11-06 16:07:55	-->	cdown (~cdown@199.201.66.0) has joined ##rust
2019-11-06 16:08:12	carado	"ref lhs" seems like old stuff, i'd just remove the "ref"
2019-11-06 16:08:29	carado	and to answer your question, you can do "lhs: lhs_a, rhs: rhs_a" on one hand, and the same but with other names on the other
2019-11-06 16:08:31	-->	gareppa (~gareppa@unaffiliated/gareppa) has joined ##rust
2019-11-06 16:08:52	carado	and then the references will be bound to lhs_a, rhs_a, etc
2019-11-06 16:09:06	carado	(i'm not sure about the "ref" part, forget what i said about it)
2019-11-06 16:09:49	-->	baali (~baali@59.98.186.142) has joined ##rust
2019-11-06 16:10:12	<--	pknull (~pooky@184.103.126.184) has quit (Quit: Departing.)
2019-11-06 16:10:45	-->	rrooij (~rrooij@terminusdb/developer/rrooij) has joined ##rust
2019-11-06 16:10:57	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-11-06 16:13:02	shinka	@carado, OK thanks!
2019-11-06 16:13:07	<--	shinka (~phdp@node-1w7jra91x6wnagplj38ttf956.ipv6.telus.net) has quit (Quit: Leaving)
2019-11-06 16:14:10	<--	pknull (~pooky@184.103.126.184) has quit (Client Quit)
2019-11-06 16:14:58	-->	pknull (~pooky@184.103.126.184) has joined ##rust
2019-11-06 16:16:37	<--	smurfendrek123 (~smurfendr@nat-56.kulnet.kuleuven.be) has quit (Ping timeout: 240 seconds)
2019-11-06 16:18:53	<--	bromind (~bromind@pas38-2-82-224-180-63.fbx.proxad.net) has quit (Quit: leaving)
2019-11-06 16:20:30	-->	bromind (~bromind@pas38-2-82-224-180-63.fbx.proxad.net) has joined ##rust
2019-11-06 16:20:42	<--	r1ch (~r1ch@2604:2000:e384:6f00:cc8a:471:4b29:669a) has quit (Remote host closed the connection)
2019-11-06 16:25:59	<--	narispo (~narispo@37.173.2.155) has quit (Remote host closed the connection)
2019-11-06 16:26:17	-->	narispo (~narispo@37.173.2.155) has joined ##rust
